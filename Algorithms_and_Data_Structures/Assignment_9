{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "fcd1ee2f-0cc5-42a1-a848-0d1fe5f5cc57",
   "metadata": {},
   "source": [
    "## 1) The horsekick death data from prussian army (HorseKicks.txt)is a famous dataset that was first explained by the Poisson distribution (and led to popular use of the distribution). It is a count of soldiers in the Prussian cavalry killed by horse kicks, by corp (15 corps) membership and by year (1875 to 1894). How would you explain the data using the Poisson distribution ?\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f7029d8e-462c-4fc4-9013-3a65542bcdb4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 15</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>Year</th><th scope=col>GC</th><th scope=col>C1</th><th scope=col>C2</th><th scope=col>C3</th><th scope=col>C4</th><th scope=col>C5</th><th scope=col>C6</th><th scope=col>C7</th><th scope=col>C8</th><th scope=col>C9</th><th scope=col>C10</th><th scope=col>C11</th><th scope=col>C14</th><th scope=col>C15</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>1875</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>1876</td><td>2</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>1877</td><td>2</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>2</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>1878</td><td>1</td><td>2</td><td>2</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>1879</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>2</td><td>2</td><td>0</td><td>1</td><td>0</td><td>0</td><td>2</td><td>1</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>1880</td><td>0</td><td>3</td><td>2</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>2</td><td>1</td><td>4</td><td>3</td><td>0</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 15\n",
       "\\begin{tabular}{r|lllllllllllllll}\n",
       "  & Year & GC & C1 & C2 & C3 & C4 & C5 & C6 & C7 & C8 & C9 & C10 & C11 & C14 & C15\\\\\n",
       "  & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int>\\\\\n",
       "\\hline\n",
       "\t1 & 1875 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 1 & 1 & 0 & 0 & 0 & 1 & 0\\\\\n",
       "\t2 & 1876 & 2 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 1 & 1\\\\\n",
       "\t3 & 1877 & 2 & 0 & 0 & 0 & 0 & 0 & 1 & 1 & 0 & 0 & 1 & 0 & 2 & 0\\\\\n",
       "\t4 & 1878 & 1 & 2 & 2 & 1 & 1 & 0 & 0 & 0 & 0 & 0 & 1 & 0 & 1 & 0\\\\\n",
       "\t5 & 1879 & 0 & 0 & 0 & 1 & 1 & 2 & 2 & 0 & 1 & 0 & 0 & 2 & 1 & 0\\\\\n",
       "\t6 & 1880 & 0 & 3 & 2 & 1 & 1 & 1 & 0 & 0 & 0 & 2 & 1 & 4 & 3 & 0\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 15\n",
       "\n",
       "| <!--/--> | Year &lt;int&gt; | GC &lt;int&gt; | C1 &lt;int&gt; | C2 &lt;int&gt; | C3 &lt;int&gt; | C4 &lt;int&gt; | C5 &lt;int&gt; | C6 &lt;int&gt; | C7 &lt;int&gt; | C8 &lt;int&gt; | C9 &lt;int&gt; | C10 &lt;int&gt; | C11 &lt;int&gt; | C14 &lt;int&gt; | C15 &lt;int&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n",
       "| 1 | 1875 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 |\n",
       "| 2 | 1876 | 2 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 |\n",
       "| 3 | 1877 | 2 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 1 | 0 | 2 | 0 |\n",
       "| 4 | 1878 | 1 | 2 | 2 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 1 | 0 |\n",
       "| 5 | 1879 | 0 | 0 | 0 | 1 | 1 | 2 | 2 | 0 | 1 | 0 | 0 | 2 | 1 | 0 |\n",
       "| 6 | 1880 | 0 | 3 | 2 | 1 | 1 | 1 | 0 | 0 | 0 | 2 | 1 | 4 | 3 | 0 |\n",
       "\n"
      ],
      "text/plain": [
       "  Year GC C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C14 C15\n",
       "1 1875 0  0  0  0  0  0  0  1  1  0  0   0   1   0  \n",
       "2 1876 2  0  0  0  1  0  0  0  0  0  0   0   1   1  \n",
       "3 1877 2  0  0  0  0  0  1  1  0  0  1   0   2   0  \n",
       "4 1878 1  2  2  1  1  0  0  0  0  0  1   0   1   0  \n",
       "5 1879 0  0  0  1  1  2  2  0  1  0  0   2   1   0  \n",
       "6 1880 0  3  2  1  1  1  0  0  0  2  1   4   3   0  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# load in my data\n",
    "horsekick_data <- read.table(\"HorseKicks.txt\", header = TRUE)\n",
    "head(horsekick_data) # just to look"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2558da28-78b2-4149-a8cc-5c7809ffc88b",
   "metadata": {},
   "source": [
    "Lambda would be average death per corp. \n",
    "- Find column average\n",
    "- Find the average of averages. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "45e65b86-bb24-4efb-a754-d3f1fc7cb6be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "0.7"
      ],
      "text/latex": [
       "0.7"
      ],
      "text/markdown": [
       "0.7"
      ],
      "text/plain": [
       "[1] 0.7"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "corps_averages <- colMeans(horsekick_data[, grep(\"C\", names(horsekick_data))]) # column average excluding the year\n",
    "\n",
    "lambda <- mean(corps_averages) # define our lambda\n",
    "lambda"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1afccd6d-eea4-4225-93c4-a3db3ede738c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Probability that there is 1 death:"
     ]
    },
    {
     "data": {
      "text/html": [
       "34.7609712653987"
      ],
      "text/latex": [
       "34.7609712653987"
      ],
      "text/markdown": [
       "34.7609712653987"
      ],
      "text/plain": [
       "[1] 34.76097"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Probability that there are 2 deaths:"
     ]
    },
    {
     "data": {
      "text/html": [
       "12.1663399428895"
      ],
      "text/latex": [
       "12.1663399428895"
      ],
      "text/markdown": [
       "12.1663399428895"
      ],
      "text/plain": [
       "[1] 12.16634"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Probability that there are  no deaths:"
     ]
    },
    {
     "data": {
      "text/html": [
       "49.658530379141"
      ],
      "text/latex": [
       "49.658530379141"
      ],
      "text/markdown": [
       "49.658530379141"
      ],
      "text/plain": [
       "[1] 49.65853"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Probability that there are 3+ deaths:"
     ]
    },
    {
     "data": {
      "text/html": [
       "3.41415841257084"
      ],
      "text/latex": [
       "3.41415841257084"
      ],
      "text/markdown": [
       "3.41415841257084"
      ],
      "text/plain": [
       "[1] 3.414158"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Do it like it is shown in the lecture notes, find the probability of 1 death in each corp\n",
    "# probability that there is 1 death in each corp\n",
    "cat(\"Probability that there is 1 death:\")\n",
    "expected_1 <- dpois(1,lambda) \n",
    "expected_1* 100\n",
    "cat(\"\\n\")\n",
    "\n",
    "#probability that there are 2 deaths in each corp\n",
    "cat(\"Probability that there are 2 deaths:\")\n",
    "expected_2<- dpois(2, lambda) \n",
    "expected_2* 100\n",
    "cat(\"\\n\")\n",
    "\n",
    "# probability that there are no deaths in each corp\n",
    "cat(\"Probability that there are  no deaths:\")\n",
    "expected_0<- dpois(0, lambda) \n",
    "expected_0* 100\n",
    "cat(\"\\n\")\n",
    "\n",
    "# probability that there are 3 deaths in each corp\n",
    "cat(\"Probability that there are 3+ deaths:\")\n",
    "expected_3plus <- 1 - (expected_0 + expected_1 + expected_2)\n",
    "expected_3plus * 100\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e4e82f8-85f9-4b4c-b392-46910ba09753",
   "metadata": {},
   "source": [
    "## Is the data a good fit for the Poisson distribution ? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f6415210-d1cd-4535-9252-5c7611411de9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "death_counts\n",
      "  0   1   2   3   4 \n",
      "144  91  32  11   2 \n",
      "death_counts\n",
      "          0           1           2           3           4 \n",
      "0.514285714 0.325000000 0.114285714 0.039285714 0.007142857 \n"
     ]
    }
   ],
   "source": [
    "# we can just a chi square test to compare observed vs expected.\n",
    "\n",
    "# First we need observed counts\n",
    "# dpois data will be used for expected\n",
    "\n",
    "# Flatten the death count data to a single vector (excluding non-death columns like \"Year\" or \"GC\")\n",
    "death_counts <- as.vector(as.matrix(horsekick_data[, grep(\"C\", names(horsekick_data))]))\n",
    "\n",
    "# Get observed frequencies of each death count (0, 1, 2, 3, 4)\n",
    "observed_counts_4 <- table(death_counts)\n",
    "\n",
    "# Print observed counts\n",
    "print(observed_counts_4) # we see that there is max of 4 deaths\n",
    "\n",
    "# Calculate total number of observations\n",
    "total_counts <- sum(observed_counts_4)\n",
    "\n",
    "# Calculate probabilities for each death count\n",
    "observed_probabilities <- observed_counts_4 / total_counts\n",
    "\n",
    "# Print observed probabilities\n",
    "print(observed_probabilities)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "10fdf17e-15c0-4a62-834f-073b49a5a3a3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>139.043885061595</li><li>97.3307195431163</li><li>34.0657518400907</li><li>9.55964355519836</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 139.043885061595\n",
       "\\item 97.3307195431163\n",
       "\\item 34.0657518400907\n",
       "\\item 9.55964355519836\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 139.043885061595\n",
       "2. 97.3307195431163\n",
       "3. 34.0657518400907\n",
       "4. 9.55964355519836\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] 139.043885  97.330720  34.065752   9.559644"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Time to do the expected\n",
    "\n",
    "#concatenate into one vector\n",
    "expected_probs <- c(expected_0, expected_1,expected_2, expected_3plus)\n",
    "\n",
    "#total amount of death counts observed\n",
    "total_obs <- length(death_counts)\n",
    "\n",
    "\n",
    "# Calculate the epected\n",
    "expected_counts <- expected_probs * total_obs\n",
    "expected_counts # just to see"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "476af4da-0d3b-47c1-9dd3-438b436935bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\n",
       "  0   1   2   3 \n",
       "144  91  32  13 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Need to create a new vector where there is a column of 3+ deaths\n",
    "death_counts <- as.vector(as.matrix(horsekick_data[, grep(\"C\", names(horsekick_data))]))\n",
    "observed_counts <- table(factor(pmin(death_counts, 3), levels = 0:3))  \n",
    "# 3+ deaths grouped into one column \"3\"\n",
    "head(observed_counts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "eecdf06e-6d58-4830-b65d-12a8cced7d96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\n",
       "\tChi-squared test for given probabilities\n",
       "\n",
       "data:  observed_counts\n",
       "X-squared = 1.9518, df = 3, p-value = 0.5825\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Perform the chisq\n",
    "chisq_test <- chisq.test(x = observed_counts, p = expected_probs, rescale.p = TRUE)\n",
    "# rescale.p = TRUE to rescale the probabilities to one\n",
    "chisq_test"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f5727f47-3380-45a9-9be3-22ae58f4b83c",
   "metadata": {},
   "source": [
    "Since the p value is greater than 0.05, we can accept the null hypothesis and say that the data is a good fit for the Poisson distribution."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2fc51fad-1287-46bc-8ab7-4432b6136134",
   "metadata": {},
   "source": [
    "## Plot the data and show your fit and submit your R code with annotations. \n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "543aa5ce-d130-4027-b528-527988a33af1",
   "metadata": {},
   "source": [
    "I will plot the probability for each possible count. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "af53fa85-3f4e-4e58-b0e3-8ad8d8a8888d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAAADFBMVEX+/v4AAACt2Ob+/v7N\nFp9iAAAABHRSTlP///8AQCqp9AAAAAlwSFlzAAASdAAAEnQB3mYfeAAAFZRJREFUeJzt3Y1W\nGtu2hdHN8f3f+bQkqEBV8VdjwZys3tu9OWaDMDT1RSyJ/vcF7PbfuwfAJxASBAgJAoQEAUKC\nACFBgJAgQEgQICQIEBIECAkChAQBQoIAIUGAkCBASBAgJAgQEgQICQKEBAFCggAhQYCQIEBI\nECAkCBASBAgJAoQEAUKCACFBgJAgQEgQICQIEBIECAkChAQBQoIAIUGAkCBgopAOJwbd/PKu\n7nyFqxf9+93pr7dv4c6lj79Htq477P3ahJCSN7+8qztf4epFQmpASI/exD2X3XVXO0I6Xv7U\nW3K26oH3ydX7fO49+0npTRbSwJu4DOn7f+96hasX5UNa/OaOBq7c5+HkZp6e0pyQUjexFtLV\nQ+vukK7d/uNWQ7qjgRsh3Xkr21Oamzaks+Pi76+HzUP17O/t439fXPlKSMfLlxed3+nFjZ/+\nPX9YLj27y8s7vzxCz2754i5/X1x5289G/Nzn+R2c/G7tRjbf0ydT1jb3IqSTP9KLP9aL3/we\nwFtXuBbSxf0sX2/7opNDcDWkrbmnay4XLN8nV9/285A239q1e9x+Ty9GdS5JSEI6WSqkZ00W\n0sVBcnYonj+EW3tIcusKi0Pr4iBcvt75bV7e2OaCrUP08pLTNefbL4b+3P/iZtbe2sP5rSwL\nuL7y6pvR1bwhnR77q4F8HS6PmMs/8s0D9HB+X5dX2T6yl3GtJrRS0Nrcs9FXGvv6efWLrFc2\nrdzK4j5X385bv2luspAW/+X8ot8/358KtkJaXGE9pJWb3wxp6zbvCOnsNU/ueeXeb4d0OX3t\nqL98a1ff0xtj135zsbmfmUPaOtIXR+blTaxe4cqhdXmV1Vf8d3NrF239ujb3ZN3Gva+9QccX\nL9+0tU0rt3Jyb+cXboxdvAeWm/uZN6STY2TjCF++1rVjcWdIq0fY3SFde1vvC2nlrbiSwPVb\neTyklXdaM0L6/Zv39gFw4wq3Qlp5RLN+K1sXXTuo1y75Wt7r9t8Cy4nbY5a38n0z62/ntTdp\n9SbbEZKQvk7XC+k5k4X0be1P+fuS099e/Ob8fxdXuCukjdc7vrC253Tw2Y7Nhef3v3zjNt4n\n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\nQYCQIOD/J91Pev2PoF4AAAAASUVORK5CYII=",
      "text/plain": [
       "Plot with title “Expected Probabilities of Death Counts”"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#probabilities of the observed\n",
    "# Define the labels for each count\n",
    "counts <- c(\"0\", \"1\", \"2\", \"3\", \"4\") # this will be for the x axis\n",
    "barplot(observed_probabilities, names.arg = counts,  # plot the observed probabilites\n",
    "        col = \"lightblue\", \n",
    "        ylab = \"Probability\", \n",
    "        xlab = \"Death Counts\", \n",
    "        main = \"Expected Probabilities of Death Counts\",\n",
    "        ylim = c(0, 0.6)) # adjust the upper limit\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "79e9eda7-b38b-4dff-a148-ff0d87a6646c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nzrEW0gunFdLnHGshvXBaIX3OsRbSC6cV0uccayG9cFohfc6xFtILpxXS5xxrIb1wWiF9zrEW\n0gunFdLnHGshvXBaIX3OsRbSC6cV0uccayG9cFohfc6xFtILpxXS5xxrIb1wWiF9zrEW0gun\nFdLnHGshvXBaIX3OsRbSC6cV0uccayG9cFohfc6xFtILpxXS5xxrIb1wWiF9zrEW0gunFdLn\nHGshvXBaIX3OsRbSC6c9SkjVf9BWSEI65LTHCKn+b0MLSUiHnPYQIV37eVqSkIR0yGkPEtLS\nm8tXXb1g8533McdaSC+cNiGky6Xw0O/yFhsXftO4m6cNG/ct0x4jpPJDOzi/AScb4PwGnP6G\n8xvwhCycn5CggZCggZCggZCggZCggZCggZCggZCggZCggZCggZCggZCggZCggZCggZCggZCg\ngZCggZCggZCggZCggZCggZCggZCggZCggZCggZCggZCggZCggZCggZCggZCgQWRIaf++WdS0\nMXfusf6Zu8SQsv6lwKhhg/4ZxoNNmhlS0m/yhzrcT/0dNWDgow0aGNLR7sLnkmb9I2DgyWfB\nAeYV0gBJs/4n5kvovzkPMK+QBkia9Suno+ucBxhYSAMkzZrT0c35xQNMLKQBkmbN6ejre9bL\nIc7fCWmArFmDhv0S0g5CeqG3f0JWOWu3X9bzSF9Rw8aM+mfQi5D2OMJX8l8JGvYYj5Mqbuc8\nwLyJIeW8HOxb0LQ5Id1+Fhxg3siQ4GiEBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2E\nBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2E\nBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2E\nBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2E\nBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA2EBA3+H0LrYfVkukoO\nAAAAAElFTkSuQmCC",
      "text/plain": [
       "Plot with title “Observed vs Expected Probabilities of Death Counts”"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# This is just a plot of the expected counts and observed countss\n",
    "# just for fun.\n",
    "\n",
    "counts <- c(\"0\", \"1\", \"2\", \"3+\")\n",
    "barplot(rbind(observed_counts, expected_counts), beside = TRUE, # We will plot observed counts vs expected counts\n",
    "        names.arg = counts, col = c(\"skyblue\", \"salmon\"),\n",
    "        legend.text = c(\"Observed\", \"Expected\"),\n",
    "        ylab = \"Probability\",\n",
    "        main = \"Observed vs Expected Probabilities of Death Counts\")\n",
    "\n",
    "# From the plot we can see that they are not too far from each other. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "56b5720b-ff94-477e-aea4-8597a829cebb",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "ed065728-3011-4c88-9adc-08118f2f9700",
   "metadata": {},
   "source": [
    "## 2) In the mrnaseq_count_data.xlsx file,\n",
    "##   a) for each column determine the boxcox transform that would make them gaussian\n",
    "##   b) is there a universal transform ?\n",
    "##   c) would a log-transform be good enough  ?\n",
    "\n",
    "## The log-transform is often used to transform expression data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "37ef3839-8bbf-44c0-a9b3-6f224fbcb03e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Installing package into ‘/home/ttang1230/R/x86_64-pc-linux-gnu-library/4.4’\n",
      "(as ‘lib’ is unspecified)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#install.packages(\"readxl\") # to read in excel files\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1756333d-898f-462d-a468-fd4160f18eea",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[22mNew names:\n",
      "\u001b[36m•\u001b[39m `` -> `...9`\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A tibble: 6 × 9</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>Gene</th><th scope=col>aboral1</th><th scope=col>aboral2</th><th scope=col>aboral3</th><th scope=col>aboral4</th><th scope=col>oral1</th><th scope=col>oral2</th><th scope=col>oral3</th><th scope=col>oral4</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>ML000110a</td><td> 69</td><td>175</td><td>141</td><td>139</td><td>108</td><td>146</td><td>133</td><td> 63</td></tr>\n",
       "\t<tr><td>ML000111a</td><td>  0</td><td>  0</td><td>  0</td><td>  0</td><td>  0</td><td>  1</td><td>  0</td><td>  0</td></tr>\n",
       "\t<tr><td>ML000112a</td><td>  1</td><td> 10</td><td>  8</td><td>  3</td><td>  2</td><td> 13</td><td>  6</td><td>  1</td></tr>\n",
       "\t<tr><td>ML000113a</td><td>383</td><td>546</td><td>402</td><td>471</td><td>290</td><td>190</td><td>282</td><td>317</td></tr>\n",
       "\t<tr><td>ML000114a</td><td>188</td><td>214</td><td>257</td><td>230</td><td>289</td><td>215</td><td>162</td><td>128</td></tr>\n",
       "\t<tr><td>ML000115a</td><td>493</td><td>455</td><td>540</td><td>501</td><td>413</td><td>403</td><td>419</td><td>452</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A tibble: 6 × 9\n",
       "\\begin{tabular}{lllllllll}\n",
       " Gene & aboral1 & aboral2 & aboral3 & aboral4 & oral1 & oral2 & oral3 & oral4\\\\\n",
       " <chr> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\t ML000110a &  69 & 175 & 141 & 139 & 108 & 146 & 133 &  63\\\\\n",
       "\t ML000111a &   0 &   0 &   0 &   0 &   0 &   1 &   0 &   0\\\\\n",
       "\t ML000112a &   1 &  10 &   8 &   3 &   2 &  13 &   6 &   1\\\\\n",
       "\t ML000113a & 383 & 546 & 402 & 471 & 290 & 190 & 282 & 317\\\\\n",
       "\t ML000114a & 188 & 214 & 257 & 230 & 289 & 215 & 162 & 128\\\\\n",
       "\t ML000115a & 493 & 455 & 540 & 501 & 413 & 403 & 419 & 452\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A tibble: 6 × 9\n",
       "\n",
       "| Gene &lt;chr&gt; | aboral1 &lt;dbl&gt; | aboral2 &lt;dbl&gt; | aboral3 &lt;dbl&gt; | aboral4 &lt;dbl&gt; | oral1 &lt;dbl&gt; | oral2 &lt;dbl&gt; | oral3 &lt;dbl&gt; | oral4 &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|\n",
       "| ML000110a |  69 | 175 | 141 | 139 | 108 | 146 | 133 |  63 |\n",
       "| ML000111a |   0 |   0 |   0 |   0 |   0 |   1 |   0 |   0 |\n",
       "| ML000112a |   1 |  10 |   8 |   3 |   2 |  13 |   6 |   1 |\n",
       "| ML000113a | 383 | 546 | 402 | 471 | 290 | 190 | 282 | 317 |\n",
       "| ML000114a | 188 | 214 | 257 | 230 | 289 | 215 | 162 | 128 |\n",
       "| ML000115a | 493 | 455 | 540 | 501 | 413 | 403 | 419 | 452 |\n",
       "\n"
      ],
      "text/plain": [
       "  Gene      aboral1 aboral2 aboral3 aboral4 oral1 oral2 oral3 oral4\n",
       "1 ML000110a  69     175     141     139     108   146   133    63  \n",
       "2 ML000111a   0       0       0       0       0     1     0     0  \n",
       "3 ML000112a   1      10       8       3       2    13     6     1  \n",
       "4 ML000113a 383     546     402     471     290   190   282   317  \n",
       "5 ML000114a 188     214     257     230     289   215   162   128  \n",
       "6 ML000115a 493     455     540     501     413   403   419   452  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "library(readxl) # library to open xcel files\n",
    "mrna_data <- read_excel(\"mrnaseq_count_data.xlsx\")\n",
    "# reading it in weird...\n",
    "# going to rewrite the column names, can't figure out how to get it to read in properly\n",
    "colnames(mrna_data) <- c(\"Gene\", \"aboral1\", \"aboral2\", \"aboral3\", \"aboral4\",\n",
    "                            \"oral1\", \"oral2\", \"oral3\", \"oral4\")\n",
    "\n",
    "# View the first few rows to confirm\n",
    "head(mrna_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd259293-eeef-4d29-8476-b370045b8d17",
   "metadata": {},
   "source": [
    "Used this website to learn how to compute boxcox using MASS\n",
    "\n",
    "https://www.r-bloggers.com/2022/10/box-cox-transformation-in-r/\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4594d77-fe69-40a6-a102-98dbdf173526",
   "metadata": {},
   "source": [
    "The Shapiro Wilks test has a limit of 3000 rows, there are 16,000+ rows in this dataset so I will be doing the box cox transformation from the MASS library in R, and not from the function given in the notes. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d280dd71-afab-4a31-8f5a-2c0e25118775",
   "metadata": {},
   "source": [
    "### for each column determine the boxcox transform that would make them gaussian"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "3a3b5e6c-9d29-4922-a311-f368c1477a1f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A tibble: 6 × 9</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>Gene</th><th scope=col>aboral1</th><th scope=col>aboral2</th><th scope=col>aboral3</th><th scope=col>aboral4</th><th scope=col>oral1</th><th scope=col>oral2</th><th scope=col>oral3</th><th scope=col>oral4</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>ML000110a</td><td> 69.001</td><td>175.001</td><td>141.001</td><td>139.001</td><td>108.001</td><td>146.001</td><td>133.001</td><td> 63.001</td></tr>\n",
       "\t<tr><td>ML000111a</td><td>  0.001</td><td>  0.001</td><td>  0.001</td><td>  0.001</td><td>  0.001</td><td>  1.001</td><td>  0.001</td><td>  0.001</td></tr>\n",
       "\t<tr><td>ML000112a</td><td>  1.001</td><td> 10.001</td><td>  8.001</td><td>  3.001</td><td>  2.001</td><td> 13.001</td><td>  6.001</td><td>  1.001</td></tr>\n",
       "\t<tr><td>ML000113a</td><td>383.001</td><td>546.001</td><td>402.001</td><td>471.001</td><td>290.001</td><td>190.001</td><td>282.001</td><td>317.001</td></tr>\n",
       "\t<tr><td>ML000114a</td><td>188.001</td><td>214.001</td><td>257.001</td><td>230.001</td><td>289.001</td><td>215.001</td><td>162.001</td><td>128.001</td></tr>\n",
       "\t<tr><td>ML000115a</td><td>493.001</td><td>455.001</td><td>540.001</td><td>501.001</td><td>413.001</td><td>403.001</td><td>419.001</td><td>452.001</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A tibble: 6 × 9\n",
       "\\begin{tabular}{lllllllll}\n",
       " Gene & aboral1 & aboral2 & aboral3 & aboral4 & oral1 & oral2 & oral3 & oral4\\\\\n",
       " <chr> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\t ML000110a &  69.001 & 175.001 & 141.001 & 139.001 & 108.001 & 146.001 & 133.001 &  63.001\\\\\n",
       "\t ML000111a &   0.001 &   0.001 &   0.001 &   0.001 &   0.001 &   1.001 &   0.001 &   0.001\\\\\n",
       "\t ML000112a &   1.001 &  10.001 &   8.001 &   3.001 &   2.001 &  13.001 &   6.001 &   1.001\\\\\n",
       "\t ML000113a & 383.001 & 546.001 & 402.001 & 471.001 & 290.001 & 190.001 & 282.001 & 317.001\\\\\n",
       "\t ML000114a & 188.001 & 214.001 & 257.001 & 230.001 & 289.001 & 215.001 & 162.001 & 128.001\\\\\n",
       "\t ML000115a & 493.001 & 455.001 & 540.001 & 501.001 & 413.001 & 403.001 & 419.001 & 452.001\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A tibble: 6 × 9\n",
       "\n",
       "| Gene &lt;chr&gt; | aboral1 &lt;dbl&gt; | aboral2 &lt;dbl&gt; | aboral3 &lt;dbl&gt; | aboral4 &lt;dbl&gt; | oral1 &lt;dbl&gt; | oral2 &lt;dbl&gt; | oral3 &lt;dbl&gt; | oral4 &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|\n",
       "| ML000110a |  69.001 | 175.001 | 141.001 | 139.001 | 108.001 | 146.001 | 133.001 |  63.001 |\n",
       "| ML000111a |   0.001 |   0.001 |   0.001 |   0.001 |   0.001 |   1.001 |   0.001 |   0.001 |\n",
       "| ML000112a |   1.001 |  10.001 |   8.001 |   3.001 |   2.001 |  13.001 |   6.001 |   1.001 |\n",
       "| ML000113a | 383.001 | 546.001 | 402.001 | 471.001 | 290.001 | 190.001 | 282.001 | 317.001 |\n",
       "| ML000114a | 188.001 | 214.001 | 257.001 | 230.001 | 289.001 | 215.001 | 162.001 | 128.001 |\n",
       "| ML000115a | 493.001 | 455.001 | 540.001 | 501.001 | 413.001 | 403.001 | 419.001 | 452.001 |\n",
       "\n"
      ],
      "text/plain": [
       "  Gene      aboral1 aboral2 aboral3 aboral4 oral1   oral2   oral3   oral4  \n",
       "1 ML000110a  69.001 175.001 141.001 139.001 108.001 146.001 133.001  63.001\n",
       "2 ML000111a   0.001   0.001   0.001   0.001   0.001   1.001   0.001   0.001\n",
       "3 ML000112a   1.001  10.001   8.001   3.001   2.001  13.001   6.001   1.001\n",
       "4 ML000113a 383.001 546.001 402.001 471.001 290.001 190.001 282.001 317.001\n",
       "5 ML000114a 188.001 214.001 257.001 230.001 289.001 215.001 162.001 128.001\n",
       "6 ML000115a 493.001 455.001 540.001 501.001 413.001 403.001 419.001 452.001"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "0.181818181818182"
      ],
      "text/latex": [
       "0.181818181818182"
      ],
      "text/markdown": [
       "0.181818181818182"
      ],
      "text/plain": [
       "[1] 0.1818182"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# All numbers in box cox must be positive, so I will add a small constant to each column to ensure positivity\n",
    "# Add a small constant to each column to ensure positivity\n",
    "# Small constant shouldn't affect the outcome too much\n",
    "mrna_positive <- mrna_data\n",
    "mrna_positive[ , -1] <- mrna_data[ , -1] + .001\n",
    "head(mrna_positive)\n",
    "b <- boxcox(lm(mrna_positive$aboral1 ~ 1))\n",
    "optimal_lambda <- b$x[which.max(b$y)]\n",
    "optimal_lambda\n",
    "\n",
    "#looks like this works, I will apply this in a look for every column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "41af4e28-569c-4b6a-98ed-ac0daeafe290",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\nAAAASUVORK5CYII=",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAAACVBMVEX+/v4AAAD+/v5sl/vG\nAAAAA3RSTlP//wDXyg1BAAAACXBIWXMAABJ0AAASdAHeZh94AAAcLklEQVR4nO3dgXbjOq5t\n0bb//6P7pBIndmJbFAGCG8Ca4746Ga9dEQhyWxLlVP53BWD2v90FABUQJMABQQIcECTAAUEC\nHBAkwAFBAhwQJMABQQIcECTAAUECHBAkwAFBAhwQJMABQQIcECTAAUECHBAkwAFBAhwQJMAB\nQQIcECTAAUECHBAkwAFBAhwQJMABQQIcECTAAUECHBAkwAFBAhwQJMABQQIcECTAAUECHBAk\nwAFBAhwQJMABQQIcECTAAUECHBAkwAFBAhwQJMABQQIcECTAAUECHBAkwAFBAhwQJMABQQIc\nECTAAUECHBAkwAFBAhwQJMABQQIcECTAAUECHBAkwAFBAhwQJMABQQIcECTAAUECHBAkwAFB\nAhwQJMABQQIcECTAAUECHBAkwAFBAhwQJMABQQIcECTAAUECHBAkwAFBAhwQJMABQQIcECTA\nAUECHBAkwAFBAhwQJMCBIUiXT361AGlNB+nyw7MeIKXZIP3khyQBhiA9+xJoiiABDri0Axyw\n2QA4YPsbcMADWcABQQIccGkHOAjYbLgAyZzPQ8D2N+csJBMapGdfPn/p5CGATQgS4CDZpd3t\nYvTuuvTnv5N1AXaBQTqz2fD2O1zvg/Txx+3/AbtEBml8+/vFK24Zuo8NQYKC2CCNehek69Mg\nkSNslTZI97dGBAm75bu0uwvSz2YDOcJeGTcbLvd3S7f/YbYowEO+7e/rk/jcTlKTlQFWCR/I\nPg8SO3fYKWmQHp/BsgWO3VJd2n0/gf11j0SQsFuqzYb7zzPcfZuHTzgAO6Ta/r7+/O377/P4\nmTtgg1QPZAFVBAlwkOvSDhCVarMBUKWz/X25jAcNEJPwgSygRzRIv5+88sfKPx6uBRQKSvrH\nSfxzXHU8XEd/fMWl9aTAIF3H74GYyADv5oE0nRUZpPH3O+ZwtYFZIEpnxAZpFDO41mBGiNI4\ngtTPq3w8+f8mSqO4tGvnZf+f/w9kaQibDc3MxIIsHWP7u5fJSJCkI6FBevbl85dOHgLvGfJA\nlN4jSI0ctN32PzfHpV0fh3emR7PCtLzGZkMbDk0lSi+x/d2EUwaYmRd4INuD27mEk9JzBKmF\nwU8EjX0vZucJgtSBb0JI0hMEqQH3dhKlP2K3v0e37ZgnR0tWPVH6hSBVt2jJk6RHsc+Rhl85\newj8dmLBn8wGk3SPINV2ppNnTzKclO4QpNLWNpIk/WDXrrLlfWSibghSYQFtZKa+EKS6Qu55\nuLz7FB+kkSMyOQ5OL/G5TJCkfwhSWWFNJEpXglRXYA9JEkEqK7aFTBhBqil636D9jLFrV1L8\ntkH3yzuCVNGOVd08SQSpoE1ruvWsEaR6tp0bOk8bQapntnv2ADaeN4JUznTzHM5kfW+UCFI1\ne3vXNkkEqZjdreuaJIJUi8A63l/BDgSpFoVnqi1njyCVYmqc3z9r7PR9MiFIlaj0TaWOQASp\nEIEbpC8yhYQhSIUItU2olBgEqQ5r11xPaN2mkCCVYf+Aj2vbm80hQapC5wbpi1o9axGkKvR6\nplfRQgSpCMWWKda0CkGqwaNj/heHjeaRIJXg0rAFd1l9JpIgVSC30fBNtjBvBKkC4X4Jl+aK\nIBUg3S7p4vwQpPzcPrS9pu09JpMg5ScepB6zSZDS02+WfoV2BCm9BM1KUKIVQcouRa9SFGlC\nkJJzbNXKp1HlZ5QgJZckSOWnlCDllqdTeSqdQpByS9SpRKVOIEippWpUqmLPIkiZ+fZp+Udf\nK09rbJAun45fN3+IVpIFqfK8Rgbp8uPolbOH6CVfm/JVPCowSD/5OUxS3X67ytcm3R+csgoN\n0rMvn7908hC9ZOxSxpqHEKS0/P+FhYi2V51aLu3SyhmkqnPLZkNWWXtU9DaJ7e+s0vYobeFv\n8UA2qcQtSlz6awQppxUdCrvoqji9XNqltGTNx929FJxfNhtSSt6gghsObH9nlL4/9ZLEA9mE\nCizD/CP4hSAltOrfn4tse7Up5tIun1XdiT3RFZtjNhvSKXBh90+RYXxh+zudMs0pM5APPJDN\npk5vqpxa/yFIySxsTfjCrpQkLu2SqRSkSklisyGXYp2pMxy2v3Op1pky4+GBbCr1GlNlRAQp\nk7V92XPHUmSuubTLpGSQakw2mw2J1GxLjVGx/Z1I0baUGBYPZPMo25UKAyNIaSxvyra7lQq3\nSVzapVE3SBXmm82GLEr3JP/gdLa/L5fxoDVUvCfpR8cD2SSqtyT7+AhSDhEd2XrSy37G1bm0\ne3jp5CHKivmNK1vbnjxJbDak0KEhuZPE9ncGPfqRepQ8kM2gST8yD5MgJRDUjv3XVtsLmBce\npKFru8QNXSBqge8PUuKJj97+ZrPhvEbdyDvU4CBdbmk6eOnkIUpq1Yy0gw0P0veXb186eYiS\nejUj62gJkrq4XgjcI+WdeoKkrlmQss597EeEPvcZjncbkjZzhX6tyDniTUE6eunkIQrq14qc\nI+aBrLaOnUg5ZoIkLfa3Uaq0XaWOMwiStNBGyAQp4/wTJGVd+6AT6WHxmw0jnxHK18c12vYh\nX5IIkrDGbUiXpNifkB1+5ewhSoleTFKLV6mWEQRJV3QXpIKUbQ0QJFndm5Br/OzaqdI6P+yQ\nqgEESRU9SNUBgiRqQwvkzoFq9bwTH6SRI2bq4CIE6ZpqHRAkTXTgQ6IuECRJeieHPfK0gSBJ\nat+AmzSNIEiK9oxf8TQoWNJz7NopIkjfFGt6hiAJaj78R0maQZAENR/+I8nz5F8ESU/v0f+R\nox0ESc+u0au+94uW9Yggydk2eNUgpVgOBEmN7HLeKEFLCJKazmN/JcGbC0ES03job+h3hSCJ\n2Th05fd94dI+ESQtO0euHCT5JUGQtPQd+QH1xhAkKW0Hfky8NQRJifTF1WbirSFISvaOWzzG\n5aojSKtsHrZ4kHa35z2CJKTpsEdJt4cg6eg56hOUG0SQdPQc9QnKDSJIMrYPWv0eSaBFrxEk\nFfuX8f4KDulWSJBUdBzzabpZJ0giGg55hmybCJKIhkOeotongqRBYcS61033RIskSBoURpwj\nSBKt+osgSWg3YAPNvBMkCe0GbCHZLIKkoNt4jRTbRZAEiFysiJQxQLBQgiRAZLgEyYAg7ddr\ntC70WkaQ9us1Wh9yPSNI27UarBe5phGk7WQGm+ce6SrUtS+xQbp8On7d/CHS0RlrqiAJ9e2f\nyCBdfhy9cvYQ+eRavULE+hYYpJ/8HCZJrEkrNRqqM63OhQbp2ZfPXzp5iHz6jNSfVO8I0l5K\nI812lSlVL5d2W0kNVGphjlCql82GrdoMdA2h9rH9vVOXca4idA7lgexGQusgKZ0GEqSNxIaZ\nMdcyJXNpt4/awlWrZ4RMzWw27NNjlIupNJHt721k3kxzE+kiD2S3aTHIABp9JEi76J2Q9Coa\nolE1l3a76I0xaZA0OslmwyZZV60giU6y/b1JgyGGUeglD2T34ITkSaCZBGkPxRHmDbdA4Vza\nbSE5wLxBEugnmw1blB9gsP39ZPt7h+rji7e9ozyQ3SDxNZSs3S0lSBuIDi91vncXz6VdPNXR\n7V6LNn2CxGbDp9zrVdfetrL9Ha704Dba+wbFA9lolce2F0H6o/Ji0x1b+mvOnfVzaRdMeGj5\ng7RxAGw2xEq/WKX1CNLB9vflMh60vOqOTMK+9vJANlThtwgN2/pLkEJJD6xCynsEqf0nG7SX\nqnZ1g3aNgc2GSFXHJaRDkNpvf5d4y1e3qcc8kA1UdFhi9nSZIMVRPyGp1zeoQ5B6X9qpj6pI\nkPb0mc2GMFXWqbzqQeq+/V1yUJJ2dJoHslE4IcXZ0GqCFEV/THWiXj1InS/tEqzSBCWOih8J\nmw1BCg5JWO0gdd7+LvRun0J4u3kgG6PeiMRFN5wghUhxQkpR5KjSQfq+qmu32ZBiQKWCFN3y\n8M2Gr68OXjl7CFG1lmgOdYP0sZq+ktQuSLsL6Ci26dEPZC9ffx68dPIQojghbRHa9fBPNlw+\nT0wHL508hKgkw6mW99DxxH9E6CNJvYKUZTTVghTa+NjNhq//NPuIUK3RZBLY+Q1BujYLUqnB\n5BJ4juWB7HKlBpMMQaojz1jK3SNdA7sfH6SRIxaa0USrM1Gpw8LGRJAWKzSUlAhSDXVGklXQ\nDMwH6eHXsJz4NgQJoWKmgCAtlWogFe+RrvpB+vzrQ59BPa3MjKYaSNEgxUyCLUijP190VpUZ\nrTKO3AhSdlXf4rOJmAaCtFCRYeQXMBHWIF3u/uOnyApMNoy6J1D5IF3Pb9oNqTGj2UZRN0gB\nU2F+ILsgRvmW4HM1RlFCgiAtUWIJlhhEFcsngyAtU2IQZayeDS7tVsk3hsL3SOsHx2bDKvnG\nUDpIq+eD7e9FCgyhmLUzwgPZRQoMoZi1J1yCtEbty6ScCFJCGUdQPvwrx8c90hIpB1A/SAsH\nyK7dEukHUJNukHiO9FT2+staNzF8smGF7PWXte7ijiAtkLT88vdI14VTw6Wdv6wLMmvdp6wa\nI5sN/nJXX5xmkNj+fiJ18fUtmh4eyLpLXXx9BCmJvLW3uEdaNUEEyVve2glS7HflHumdxKV3\nsWSK2LXz1eRdPbUlc8RzJF95K29EMkhLpF2OqU9IqYs/ZcFACZKrtIV/aBQkiYuoZ/dIbDb8\n02cpJqcWpJlfNDYi63rMWnc/7jPl8xzJW9IFyQkpDYWNZkOQRk9fSRdk0rJvWr0PZA7S+K+c\nzTmj2Rdi9vrP2X838vd3yA4e6vvFh0nKOaM5q+7K+W1jPkinf6v53YtKBqnXG3p+BElUyqI7\nc52wwAeyxS/tMtb8qNsp1XW8kZ9sqL3ZkLHmR92C5Dpllku78w9kC29/JywZjpMWG6SFVe2W\nsGRIBGmlfKsyX8W4ek5bbJDKXtqVuL0oMYhzFIJ0evu78mZDuoKfaRgkv4kLfY5Udvs7W724\nEQjS+UPVfSCbrV5885o6guQgWbm443U9aw3S5XMXfOhQZS/tkpX7Ssd7JLfJc/hR8+EZqLrZ\nkKva13oGyWn67D+PdLmOT0HJ7e+m668Mn/mLDdKoVEszVbH4iyBpSFUsnvCYQZcgtf7QaqZa\n32t7jeoxcIfNhuHPrNbcbMhU63ttg+Qxhw7b3ydy9Ocrv6p2SVQqXrLPIg9kjRKVipfsJ2On\nII191u7Zl89feqqgnfJUinc2B+nrbzf+0GqeSo/1vUe62ifSvmt3+3jDwLHqbTakKXRE7yAZ\nB2/etTv1m8bKbX+nKRRH9gZpzS/sS7M+W7+HV2ObS/Nmg8ov5NwiS50YsCtI53/UvNylXZIy\nR3U/v5qGHxmkcpsNScocRZBi//Kif7J44gS3WY4qMcwyoXyyYV6OKjFsT5BO/0ur1YKUokic\nYZjS0CCV+mRDkuvPE+qN6CxDBwIv7YptNmSo8RyCZJjUyCCV2v5OUCLOm55WnyA1/FHzBCXi\nvOmVTJDm6FeIKWmCNHRtp79M9Ss8j3ukD5NNCAzSvxcV2WyQL3AGQfow2YXgIF1uaXKvKhRL\nrrAkQRp6vfo6Va8PFlOzS5BmqNcHi6nrjcBPf9cJknh5s7hg/SIfpK9XHr9efEbFy5tFkG4m\nGhH7YxTfQTp66eQhYmhXB7uJt5TYjwiN0l6q2tXBwY4grVhW0ktVujj4OD3JoUH6vqZLfY8k\nXZwF90g/pIP0syuROUjKtdkQpDtnexEYpLt9BoIEceJB+v6MkHtVUXjbbuLkPIduf3/+eckd\npN0FIEZokE49kf2+P7okDpJuZXacbB+c64ZbkEZ+gPw7SQRJEUF6cK4dxku7n0248SBl/oiQ\nbGHwFxik++dCnu9nsutVtjAscGa2CdIZqnVhCe0gDX1Q/HRRIYrfRBQf3oQzn9o5/90fNxtu\n/xmehcxB2l3AWgTptzP/qM/57/74qy9/fjbC8YiaM6pZFRYKC9LIFtzEETWXrGZVWGn8czvn\nv7fx55HSBkmyKKzleqH1S9cf7JMsyhP3SE+EBWnJ79dTnFHFmnwRpGccN6N/eb7Z4EpwRlll\nTYUE6W7725XgohUsCSHGZt7vgawnwVUrWBJCjC1ugjRGryJ/XL0+R5Ac6VXkjyC9sOiJTcd7\nJLmCEGh9kNrs2skVhEgjP/99/rs2fI6kVg9iRQRpCbWFq1bPGtwjvTTw49/nv2m/IImVswpB\nemllkE7/WpcTxGZUrBzEO1wCBOkY79RY8ZuI2l3aaVWDLQiSmVQxK3HmfeegOQTpkFQxKxGk\ndw66Q5COKNWCjQiSjVIt2OntSiBIB4RKwV5vL+4I0nud7hs6jXUKQZqnU8l6BOnImwYRpLdk\nCoGCN281BOktmUIggSDNUakDKl6uCIL0jkodMbhHMiBIb4iUEYUgGRCk11hYGEaQXtOoAikQ\npNc0qkAKBOkliSIicSlrQJBekigiEkEyIEivKNSANAjSKwo1IA2CpFsCEokN0ug/OSSwigVK\niMY9kkFkkMb/9a79M7q/gngEySAwSD/5OUzS/hndXwFSCQ3Ssy+fv3TyEG54c8Y5BEmzACTD\npZ3i8ffgNGzAZoPi8fcgSAZsf+sdHgnxQFbv8EiIIKkdHSlxaff34F2D1HbgHths0Dr4TgTJ\ngO1vpWMjLR7IKh0baREknUMjMS7tdA69G/dIBmw2qBx5P4JkwPb344FZS5jCA1mNAyM5gqRx\nYCTHpZ3CcTVwXWvAZoPCcTUQJAO2v/cfFgXwQHb/YVEAQdp9VJTApd3uo+rgHsmAzYa9B1VC\nkAzY/t57UBTBA9nvYxIkzCNIO4+JMri0ux2SINECAzYb9h1SDUEy0Nn+vlzGg7YAiwgWPJDd\ndUSUQpB2HRGl6FzaPbx08hDTyNGVeyQTNhv2HFARQTJg+3vH8VAOD2R3HA/lEKT4w6EgLu3i\nD6eKeyQDNhtYQDf0wYDtb05IcMADWXIEBwSJIMEBl3bk6IZ7JAM2G1g9NwTJoP32N4sHHro/\nkOVdGC7aBynsSCgt+B7p88/Dg4Ytb3J0h7OzQeyu3X9TpbXZwNK5Q5AMgp8jfYZIZvublQMn\n0Q9kPyNEkFBM6yCRI3jp/BEh7gke0Q+D+F27gVukqCCFHCUPgmQQ+hzpO0iHL5w+xBmsG7hp\n/ECWHMEPQQIcxAdp5IgRa5wc/cY9kgFBwg1BMmgbJBYNPBEkwEHXIJEjuOq6a0eQ/uIeyaBp\nkFgzT9AUg65BWn0ANNMzSLz3wlnTIC3+/minZZDI0VOcpw0IEm4IkkHHILFe4I4gAQ4aBokc\nwR9Bwg33SAb9gsRqeYUgGRAkwEG7IJEjrNAtSFy+YIl2QVr2nfPjTcagWZBYK2/QHINuQVr1\njdEcQQIc9AoSOcIiBAk33CMZtAoSC+UtgmRAkAAHnYJEjrAMQQIcNAoSOTrAPZIBQcINQTLo\nEySWCRZqFKQF3xP40iZI5AgrESTccPFr0CVIrJFjBMmAIAEOmgSJHGGtHkHiogWLxQbp8un4\ndfOHCPl+NfF2YxAZpMuPo1fOHiLk21VFkAwCg/STn8MkESQkExqkZ18+f+nkISK+G/AEQQIc\nNLi0I0eDuEcyqL/ZwPIYRacM6m9/szoQoP4DWYKEAOWDRI4QofylHUEaxj2SQfXNBtbGOIJk\nUH37m7WBEMUfyJIjxCBIgIPal3bk6AzukQxqbzawMs4gSAalt79ZGYhS+oEsOUKUykHihIQw\nlS/tyNE5vPEYFN5sYFmcRJAMCm9/sywQp+4DWXKEQAQJcFD20o4cncY9kkHZzQYWxWkEyaDq\n9jdrAqGqPpAlSAhVNEjkCLFqXtpxtT+DrhnU3GxgRcwgSAY629+Xy3jQDo9k+/vAWSUfyJIj\nRCNIgAOdS7uHl04ewuNv98UVsUHFzQbWwxyCZFBw+5vlgHgFH8gSJMSrFyRyhA3CgzR0bUeQ\nduAeySB6+3v5ZgOLYRpBMggO0uWWpoOXTh7C9leBaeFB+v7y7UsnD8G7KjYpF6TpvwkYFAsS\nJyQDmmcQ+xGhz32G492G+SDN/kUQJJNNQTp66ewhJv8eYFTrgSxBwialgkSOsEvwp7+vI3dI\nBGkP7pEMou+Rrgs/2cA6sCFIBvGfbBjZbSBISCb+s3bfX7576dT3n/lLgAuCBDio84+fkCMr\n7pEM4nftFj2QZRWY0UKD0OdIg5+0mwvS+b8CuKnyQJZ3U2xVJkgLqgCGxQdp5Iinq+KE5IAm\nGlQJ0kQh+IUgGdQIEksAmxUJ0kwhgJ8SQeKEhN1K7NqRIxe8HxlUCBILwAd9NCgRpEVVAMMK\nBIk3UuxXIUirqgCG5Q8SJyQvdNKgQJCWVdENQTJIHyQmHwoIEuAge5DIESQQJNxwj2SQPEhM\nvSOCZECQAAe5g0SOIIIgAQ5SB4kcueIeySBzkJh4X/TTIHWQFlcBDEscJN5AoSNzkFZXAQwj\nSLjhFG+QN0jMujeCZECQAAdpg0SOoIQgAQ6yBokc+eMeyYAg4YYgGSQNElMOLQQJcJAzSFyE\nQEzSIK0voSHengxSBokZX4K2GuQM0voKgFMyBokcQQ5BAhwkDBI5WoR7JAOChBuCZJAvSMw2\nBBEkwEG6IJEjKCJIuOEeySBbkJjrdQiSQbIgMdfQlC1I648NTEgWJEATQcIN180GBAk3BMmA\nIAEOCBLggCABDggSbrhHMiBIuCFIBgQJcECQAAcECXBAkHDDPZIBQcINQTIgSIADggQ4IEiA\nA4KEG+6RDAgSbgiSAUECHBAkwAFBAhwQJNxwj2QgGiQgmfOrPCBIL8m/Z6oXSH02nvURpDfU\nC6Q+G4IURL1A6rMhSEHUC6Q+G4IURL1A6rMhSEHUC6Q+G4IURL1A6rMhSEHUC6Q+G4IURL1A\n6rMhSEHUC6Q+G4IURL1A6rMhSEHUC6Q+mypBAsogSIADggQ4IEiAA4IEOCBIgAOCBDggSIAD\nggQ4IEiAA4IEOCBIgAOCBDggSIADggQ4IEiAA4IEONgapLl/9z+UcIH63dOuz7d/G4M0/Rs0\nwkjXp969DOU5Frg1SD9/apJeCx+V6VYn3jz/1bf9Hkm52Vfh8vTfhtSr+1AnSNLvWlfhtUCQ\nHDiuvs1BUs+R7logSHZF7pGuCXKkuxYIkln6Xbvv21DVHN3dJ4tWSJDsfFff1n9pVbvR/8iW\nSJCMnFff3udI+w4+SrZGgmTjvfq2P0cSp1uk+nOkq3Z53rXt/2SDcLOvymuB5pl4rz6C9J5w\nefK9U25epSABdRAkwAFBAhwQJMABQQIcECTAAUECHBAkwAFBAhwQJMABQQIcECTAAUECHBAk\nwAFBAhwQJMABQQIcECTAAUECHBAkwAFBAhwQJMABQQIcECTAAUECHBAkwAFBAhwQJMABQQIc\nECTAAUECHBAkwAFBAhwQJMABQcpK+fdKNkSQktL/DbK9EKSkLv/+DyoIUl4ESQhByosgCSFI\neREkIQQpLTYblBCktNi2U0KQsvovRgRJB0HKiiBJIUhJfVzXcW2ngyAl9S9EPJWVQZBy+jwZ\n8TkhGQQpp68AkSMVBAlwQJAABwQJcECQAAcECXBAkAAHBAlwQJAABwQJcECQAAcECXBAkAAH\nBAlwQJAABwQJcECQAAcECXBAkAAHBAlwQJAABwQJcECQAAcECXBAkAAHBAlwQJAABwQJcECQ\nAAcECXBAkAAHBAlwQJAAB/8HwtRroYYlPjMAAAAASUVORK5CYII=",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "$aboral1\n",
      "[1] 0.1818182\n",
      "\n",
      "$aboral2\n",
      "[1] 0.1414141\n",
      "\n",
      "$aboral3\n",
      "[1] 0.1818182\n",
      "\n",
      "$aboral4\n",
      "[1] 0.1414141\n",
      "\n",
      "$oral1\n",
      "[1] 0.1818182\n",
      "\n",
      "$oral2\n",
      "[1] 0.1818182\n",
      "\n",
      "$oral3\n",
      "[1] 0.1818182\n",
      "\n",
      "$oral4\n",
      "[1] 0.1818182\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Initialize a list to store optimal lambdas for each column\n",
    "lambdas <- list()\n",
    "\n",
    "# Want to go through every column except gene\n",
    "for (col_name in colnames(mrna_data)[-1]) {\n",
    "    \n",
    "    # Perform Box-Cox to find optimal lambda\n",
    "    b <- boxcox(lm(mrna_positive[[col_name]] ~ 1))\n",
    "\n",
    "    # Get optimal lambda\n",
    "    optimal_lambda <- b$x[which.max(b$y)]\n",
    "    \n",
    "    # Store the optimal lambda\n",
    "    lambdas[[col_name]] <- optimal_lambda\n",
    "}\n",
    "\n",
    "# Print the optimal lambdas for each column\n",
    "print(lambdas)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "adb80916-ef71-4292-b4c0-cfeaba859ba9",
   "metadata": {},
   "source": [
    "### Is there a universal transform ?\n",
    "\n",
    "All of the best lambdas look fairly close, we can calculate a universal transform"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "b775c91e-8fd2-4362-bb3f-0cac6683efe9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] 0.1717172\n"
     ]
    }
   ],
   "source": [
    "# Calculate the average lambda across all columns\n",
    "# use this average for a universal transform.\n",
    "average_lambda <- mean(unlist(lambdas))\n",
    "\n",
    "# Print the average lambda\n",
    "print(average_lambda)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "0e168f63-7fc9-4a9b-94b1-5ca2e104b07b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A tibble: 6 × 9</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>Gene</th><th scope=col>aboral1</th><th scope=col>aboral2</th><th scope=col>aboral3</th><th scope=col>aboral4</th><th scope=col>oral1</th><th scope=col>oral2</th><th scope=col>oral3</th><th scope=col>oral4</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>ML000110a</td><td> 6.2254238321</td><td> 8.313392</td><td> 7.798588</td><td> 7.765212</td><td> 7.1889705</td><td>7.880344e+00</td><td> 7.662641</td><td> 6.0386674465</td></tr>\n",
       "\t<tr><td>ML000111a</td><td>-4.0451076743</td><td>-4.045108</td><td>-4.045108</td><td>-4.045108</td><td>-4.0451077</td><td>9.995861e-04</td><td>-4.045108</td><td>-4.0451076743</td></tr>\n",
       "\t<tr><td>ML000112a</td><td> 0.0009995861</td><td> 2.824375</td><td> 2.499313</td><td> 1.209477</td><td> 0.7366478</td><td>3.222859e+00</td><td> 2.098211</td><td> 0.0009995861</td></tr>\n",
       "\t<tr><td>ML000113a</td><td>10.3485570806</td><td>11.363839</td><td>10.483573</td><td>10.933230</td><td> 9.5942756</td><td>8.514445e+00</td><td> 9.520393</td><td> 9.8317683147</td></tr>\n",
       "\t<tr><td>ML000114a</td><td> 8.4884144420</td><td> 8.810323</td><td> 9.277740</td><td> 8.992636</td><td> 9.5851333</td><td>8.822043e+00</td><td> 8.127248</td><td> 7.5741935142</td></tr>\n",
       "\t<tr><td>ML000115a</td><td>11.0651029276</td><td>10.834079</td><td>11.331258</td><td>11.111850</td><td>10.5593411</td><td>1.049053e+01</td><td>10.599967</td><td>10.8151671164</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A tibble: 6 × 9\n",
       "\\begin{tabular}{lllllllll}\n",
       " Gene & aboral1 & aboral2 & aboral3 & aboral4 & oral1 & oral2 & oral3 & oral4\\\\\n",
       " <chr> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\t ML000110a &  6.2254238321 &  8.313392 &  7.798588 &  7.765212 &  7.1889705 & 7.880344e+00 &  7.662641 &  6.0386674465\\\\\n",
       "\t ML000111a & -4.0451076743 & -4.045108 & -4.045108 & -4.045108 & -4.0451077 & 9.995861e-04 & -4.045108 & -4.0451076743\\\\\n",
       "\t ML000112a &  0.0009995861 &  2.824375 &  2.499313 &  1.209477 &  0.7366478 & 3.222859e+00 &  2.098211 &  0.0009995861\\\\\n",
       "\t ML000113a & 10.3485570806 & 11.363839 & 10.483573 & 10.933230 &  9.5942756 & 8.514445e+00 &  9.520393 &  9.8317683147\\\\\n",
       "\t ML000114a &  8.4884144420 &  8.810323 &  9.277740 &  8.992636 &  9.5851333 & 8.822043e+00 &  8.127248 &  7.5741935142\\\\\n",
       "\t ML000115a & 11.0651029276 & 10.834079 & 11.331258 & 11.111850 & 10.5593411 & 1.049053e+01 & 10.599967 & 10.8151671164\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A tibble: 6 × 9\n",
       "\n",
       "| Gene &lt;chr&gt; | aboral1 &lt;dbl&gt; | aboral2 &lt;dbl&gt; | aboral3 &lt;dbl&gt; | aboral4 &lt;dbl&gt; | oral1 &lt;dbl&gt; | oral2 &lt;dbl&gt; | oral3 &lt;dbl&gt; | oral4 &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|\n",
       "| ML000110a |  6.2254238321 |  8.313392 |  7.798588 |  7.765212 |  7.1889705 | 7.880344e+00 |  7.662641 |  6.0386674465 |\n",
       "| ML000111a | -4.0451076743 | -4.045108 | -4.045108 | -4.045108 | -4.0451077 | 9.995861e-04 | -4.045108 | -4.0451076743 |\n",
       "| ML000112a |  0.0009995861 |  2.824375 |  2.499313 |  1.209477 |  0.7366478 | 3.222859e+00 |  2.098211 |  0.0009995861 |\n",
       "| ML000113a | 10.3485570806 | 11.363839 | 10.483573 | 10.933230 |  9.5942756 | 8.514445e+00 |  9.520393 |  9.8317683147 |\n",
       "| ML000114a |  8.4884144420 |  8.810323 |  9.277740 |  8.992636 |  9.5851333 | 8.822043e+00 |  8.127248 |  7.5741935142 |\n",
       "| ML000115a | 11.0651029276 | 10.834079 | 11.331258 | 11.111850 | 10.5593411 | 1.049053e+01 | 10.599967 | 10.8151671164 |\n",
       "\n"
      ],
      "text/plain": [
       "  Gene      aboral1       aboral2   aboral3   aboral4   oral1      oral2       \n",
       "1 ML000110a  6.2254238321  8.313392  7.798588  7.765212  7.1889705 7.880344e+00\n",
       "2 ML000111a -4.0451076743 -4.045108 -4.045108 -4.045108 -4.0451077 9.995861e-04\n",
       "3 ML000112a  0.0009995861  2.824375  2.499313  1.209477  0.7366478 3.222859e+00\n",
       "4 ML000113a 10.3485570806 11.363839 10.483573 10.933230  9.5942756 8.514445e+00\n",
       "5 ML000114a  8.4884144420  8.810323  9.277740  8.992636  9.5851333 8.822043e+00\n",
       "6 ML000115a 11.0651029276 10.834079 11.331258 11.111850 10.5593411 1.049053e+01\n",
       "  oral3     oral4        \n",
       "1  7.662641  6.0386674465\n",
       "2 -4.045108 -4.0451076743\n",
       "3  2.098211  0.0009995861\n",
       "4  9.520393  9.8317683147\n",
       "5  8.127248  7.5741935142\n",
       "6 10.599967 10.8151671164"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Apply the universal transformation to each column\n",
    "mrna_transformed <- mrna_positive\n",
    "\n",
    "for (col_name in colnames(mrna_transformed)[-1]) {\n",
    "    # Apply the Box-Cox transformation with the universal lambda\n",
    "    mrna_transformed[[col_name]] <- (mrna_positive[[col_name]] ^ average_lambda - 1) / average_lambda\n",
    "}\n",
    "\n",
    "# View the transformed data\n",
    "head(mrna_transformed)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c2c5bb43-ab14-4eb9-aa63-bbd6c9881846",
   "metadata": {},
   "source": [
    "### Would a log-transform be good enough ?\n",
    "The log-transform is often used to transform expression data. It should be good. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "6c334ad7-189a-4138-b351-fef589c04dc2",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Installing package into ‘/home/ttang1230/R/x86_64-pc-linux-gnu-library/4.4’\n",
      "(as ‘lib’ is unspecified)\n",
      "\n",
      "'getOption(\"repos\")' replaces Bioconductor standard repositories, see\n",
      "'help(\"repositories\", package = \"BiocManager\")' for details.\n",
      "Replacement repositories:\n",
      "    CRAN: https://cran.r-project.org\n",
      "\n",
      "Bioconductor version 3.20 (BiocManager 1.30.25), R 4.4.2 (2024-10-31)\n",
      "\n",
      "Installing package(s) 'BiocVersion', 'DESeq2'\n",
      "\n",
      "also installing the dependencies ‘sys’, ‘askpass’, ‘curl’, ‘mime’, ‘openssl’, ‘httr’, ‘formatR’, ‘colorspace’, ‘UCSC.utils’, ‘GenomeInfoDbData’, ‘zlibbioc’, ‘abind’, ‘SparseArray’, ‘lambda.r’, ‘futile.options’, ‘farver’, ‘labeling’, ‘munsell’, ‘RColorBrewer’, ‘viridisLite’, ‘GenomeInfoDb’, ‘XVector’, ‘S4Arrays’, ‘DelayedArray’, ‘futile.logger’, ‘snow’, ‘BH’, ‘gtable’, ‘isoband’, ‘scales’, ‘withr’, ‘S4Vectors’, ‘IRanges’, ‘GenomicRanges’, ‘SummarizedExperiment’, ‘BiocGenerics’, ‘Biobase’, ‘BiocParallel’, ‘matrixStats’, ‘locfit’, ‘ggplot2’, ‘Rcpp’, ‘MatrixGenerics’, ‘RcppArmadillo’\n",
      "\n",
      "\n",
      "Loading required package: S4Vectors\n",
      "\n",
      "Loading required package: stats4\n",
      "\n",
      "Loading required package: BiocGenerics\n",
      "\n",
      "\n",
      "Attaching package: ‘BiocGenerics’\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:stats’:\n",
      "\n",
      "    IQR, mad, sd, var, xtabs\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:base’:\n",
      "\n",
      "    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n",
      "    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n",
      "    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n",
      "    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n",
      "    Position, rank, rbind, Reduce, rownames, sapply, saveRDS, setdiff,\n",
      "    table, tapply, union, unique, unsplit, which.max, which.min\n",
      "\n",
      "\n",
      "\n",
      "Attaching package: ‘S4Vectors’\n",
      "\n",
      "\n",
      "The following object is masked from ‘package:utils’:\n",
      "\n",
      "    findMatches\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:base’:\n",
      "\n",
      "    expand.grid, I, unname\n",
      "\n",
      "\n",
      "Loading required package: IRanges\n",
      "\n",
      "Loading required package: GenomicRanges\n",
      "\n",
      "Loading required package: GenomeInfoDb\n",
      "\n",
      "Loading required package: SummarizedExperiment\n",
      "\n",
      "Loading required package: MatrixGenerics\n",
      "\n",
      "Loading required package: matrixStats\n",
      "\n",
      "\n",
      "Attaching package: ‘MatrixGenerics’\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:matrixStats’:\n",
      "\n",
      "    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n",
      "    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n",
      "    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n",
      "    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n",
      "    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n",
      "    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n",
      "    colWeightedMeans, colWeightedMedians, colWeightedSds,\n",
      "    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n",
      "    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n",
      "    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n",
      "    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n",
      "    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n",
      "    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n",
      "    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n",
      "    rowWeightedSds, rowWeightedVars\n",
      "\n",
      "\n",
      "Loading required package: Biobase\n",
      "\n",
      "Welcome to Bioconductor\n",
      "\n",
      "    Vignettes contain introductory material; view with\n",
      "    'browseVignettes()'. To cite Bioconductor, see\n",
      "    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n",
      "\n",
      "\n",
      "\n",
      "Attaching package: ‘Biobase’\n",
      "\n",
      "\n",
      "The following object is masked from ‘package:MatrixGenerics’:\n",
      "\n",
      "    rowMedians\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:matrixStats’:\n",
      "\n",
      "    anyMissing, rowMedians\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# This is all from the notes\n",
    "\n",
    "# install.packages(\"BiocManager\")\n",
    "# Sys.setenv(R_INSTALL_STAGED = FALSE)\n",
    "# BiocManager::install(c(\"DESeq2\"))\n",
    "\n",
    "\n",
    "library(DESeq2) # load in the appropriate library"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "b4969b2e-3a53-4374-9b70-044e4b8162f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAAADFBMVEX+/v4AAADT09P+/v5M\nG8pRAAAABHRSTlP///8AQCqp9AAAAAlwSFlzAAASdAAAEnQB3mYfeAAAD1lJREFUeJzt3et6\nosgCQNHx5P3f+cw36SheUNCNweq1fvSYgFSM7BELo/98AS/757d/ABiBkCAgJAgICQJCgoCQ\nICAkCAgJAkKCgJAgICQICAkCQoKAkCAgJAgICQJCgoCQICAkCAgJAkKCgJAgICQICAkCQoKA\nkCAgJAgICQJCgoCQICAkCAgJAkKCgJAgICQICAkCQoKAkCAgJAgIKXb41+ni+Td+58dYtO78\n2veX8oeQYkL6OwkptiSkzffMhTv/4fQT3lj7z/eEtIiQYrsJaflqt9c+fVdICwgpdhXS/XU2\n/yEWrDaTupDWEFJs/hHpuHNO99KznfS/L07rfE2Orc6XH6bfvRr5cJbB9bKzTRxHvNqWkNYQ\nUmwupMPRVVFnT0YuY5uucrhyNuzlVe4tm/4cM6EIaQ0hxYT0dxJS7GpHP+3Al1/MfnUR0s1l\nt44KLzZ1a9nh8ourtadXm16fu4QUux/SaZ2vxz1dbPTyetNVLgq6NdqNoYXUEVJsstddPZic\nt7U0pNMVhbRfQorNhPQ1H8T9kL6vIqS9E1JsPqTT0hUh3dnxhbQnQorNhHRrB3402TD3zfla\nLnq6sWxhmKcf/8YCbhBSTEh/JyHF7oR0OEx22atvTr66SGLBc6Qbm/q6uewqpOPGhfQSIcVm\nQvo67so/Kx0uV//zxXlIk8mGyz3+xo5/uL548Y3rTQgpIaS9ef9uO3kcu7ucO4S0GxcPRe8e\neLYjIS0hpN04f5rz9oG/7mQkpIeEtBtC+mRC2pPf2WXvpyKkRYQEASFBQEgQEBIEhAQBIUFA\nSBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFB\nQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEh\nQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEPjNkA7r/eJPC3f8akj/W0tI\n7JSQICAkCAgJAkKCgJAgICQICAkCQoKAkCAgJAgICQJCgoCQICAkCAgJAkKCgJAgICQICAkC\nQoKAkCAgJAgICQJCgoCQIPBCSC+/i7CQGMbTIQVvyC0khvFsSKd+ni9JSAzj+ZBuXVy5DSEx\nCiFBwKEdBEw2QMD0NwSckIWAkCDg0A4CJhsgYPobAk7IQkBIEHBoBwGTDRAw/Q0BJ2QhICQI\nOLSDgMkGCJj+hoATshDYKKTDYcGhn5AYxhsO7YTE+N4w2SAkxveG6W8hMb43nJAVEuMTEgRe\nC2nRsZ2QGN9L098mG+DbKyEdfmp6sOrsAiExitdCOl68u+rsAiExCiFBQEgQeOElQt/zDI9n\nG4TE+IqQHq06u0BIjMIJWQgICQJCgoCQIPDiZMOS1wgJifEJCQIv/IXs4jVnFwiJUQgJAkKC\ngFk7CAgJAkKCgJAgICQICAkCQoKAkCAgJAgICQJCgoCQICAkCAgJAkKCgJAgICQICAkCQoKA\nkCAgJAgICQJCgoCQICAkCAgJAkKCgJAgICQICAkCQoKAkCAgJAgICQJCgoCQICAkCAgJAkKC\ngJAgICQICAkCQoKAkCAgJAgICQJCgoCQICAkCAgJAkKCgJAgICQICAkCQoKAkCAgJAgICQJC\ngoCQICAkCAgJAkKCgJAgICQICAkCQoKAkCAgJAgICQJCgoCQICAkCAgJAkKCgJAgICQICAkC\nQoKAkCAgJAgICQJCgoCQICAkCAgJAkKCgJAgICQICAkCQoKAkCAgJAgICQJCgoCQICAkCAgJ\nAkKCgJAgICQICAkCQoKAkCAgJAgICQJCgoCQICAkCAgJAkKCgJAgICQICAkCQoKAkCAgJAgI\nCQJCgoCQICAkCAgJAkKCgJAgICQICAkCQoLACyEdvj1eb3aBkBjF0yEdTh6tObtASIzi2ZBO\n/TwsSUiM7/mQbl28versAiExCiFBwKEdBEw2QMD0NwSckIWAkCDg0A4CJhsgYPobAk7IQkBI\nEHBoBwGTDRAw/Q0BJ2QhICQIOLSDgMkGCJj+hoATshDYKKTDYcGhn5AYhkM7CJhsgIDpbwg4\nIQsBIUHAoR0ETDZAwPQ3BLyyAQJCgoBDOwiYbICA6W8IOCELASFBQEgQEBIEJiEtmTiYrrx0\n2k5IjO88pOUtCQkmzg/tVqS0/OFLSIzv+jnSwpiEBCczIT3OREhwMnNot2be4REhMb6ZyQYh\nwRrPTn+vICTG54QsBIQEgWlI/TzD92ZnFwiJUVw/R8qfKgmJ8Z2FdP7fipAYn5AgICQIeI4E\ngfNZu1V/SbGUkBjf9Wvt8iGExPickIWAkCBw6zmSyQZY6erPKIQE6904j1QTEuMTEgSEBIHr\nP6PICYnxmWyAgJAg4IQsBIQEgbOQ/juq8+pvWO3yJUJCgidcnEc6fPkLWVhPSBAQEgSuQ3Ie\nCVbzng0QuJz+3uBNG4TE+JyQhYCQIOBFqxAQEgRufap5PISQGN+N50gekWAtIUFASBAw2QCB\nWyHFQwiJ8TkhCwEhQeDmc6T2+E5IjE9IELh+y2KTDbDajTfRN/0NawkJAkKCwPlkw+Q/HSEx\nPm9+AoHzE7JbvPeJkPgLeGUDBIQEAR/rAgEf6wIBb6IPASFBQEgQ8LEuEPDKBgj4WBcIOCEL\ngRt/RlETEuMTEgTOnyNtMoSQGJ+3LIaAkCBg1g4CQoLAn5C2mrH7b9uzC4TEKM5C2iYnITE+\nIUFASBAQEgSEBAEhQeAY0jYfMvbftmcXCIlRCAkCXtkAASFBQEgQEBIEhAQBIUFASBAQEgSE\nBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIE\nhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBAS\nBIQEASFBQEgQeCGkw7fH680uEBKjeDqkw8mjNWcXCIlRPBvSqZ+HJQmJ8T0f0q2Lt1edXSAk\nRiEkCDi0g4DJBgiY/oaAE7IQEBIEHNpBwGQDBEx/Q8AJWQgICQIO7SBgsgECpr8h4IQsBDYK\n6XBYcOgnJIbh0A4CJhsgYPobAk7IQkBIEHBoBwGTDRAw/Q0Br2yAgJAg8FpIi47thMT4Xpr+\nNtkA314J6fBT04NVZxcIiVG8FtLx4t1VZxcIiVEICQJCgsALLxH6nmd4PNsgJMZXhPRo1dkF\nQmIUTshCQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQ\nEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQ\nEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBI\nEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFA\nSBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFB\nQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEh\nQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQB\nIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgReCOnw7fF6swuExCie\nDulw8mjN2QVCYhTPhnTq52FJZUirPXnzYJ3nQ7p18faqswvWh7T6Ck/ePFhno5AWPSqsf3yB\n0pM7/y1vOLSD8b1hsgHG94bpbxjfG07IwviEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFA\nSBAQEgSEBAEhQUBIEBASBIQEASFB4DdDev/bLzGyX9yVfzmkEYZwI/YyhJA+egg3Yi9DCOmj\nh3Aj9jKEkD56CDdiL0MI6aOHcCP2MoSQPnoIN2IvQwjpo4dwI/YyhJA+egg3Yi9DCOmjh3Aj\n9jKEkD56CDdiL0MI6aOHcCP2MoSQPnoIN2IvQ/y9IcEwhAQBIUFASBAQEgSEBAEhQUBIEBAS\nBIQEASFBQEgQEBIEhAQBIUFASBAQEgR+MaT2AwROW1t66alBth1h+xux9Qhrt75+nO1HeMrv\nhZR+FMfkgz2WXnpulE1HON2KrYbY9td0utJW41xcces7fIXfDOn0f5dkY3/+PW33/qVnBlmy\n3RdGOP78Ww1x+L7mViNMQ1q29bXjHKb3weZ3+Bq/FtL091Fuc+nd99TWT3v6FiOcrrTVEOv2\n7ddG2Gqc6drb3uGrjBTSYdPf6/HqQlo0whtC2vYOX2egkE6HLJ8b0tWBy6fdiHeGtPEdvs44\nIW28D57utA338tNcw6ZDbDjCG0Pa+n866wwT0vRp7ga/18kVN3242Gr3+xnhcPxnqxG2viU/\na298h681SkiH0+/35984pOPjxUeH9L4RNg5p6zt8rUFCOp0qENJORtg2pM3v8LWGOo90sd37\nl54fZqsRJs9eNhpi4/NIX8crrWlo5ThXaWx5hy831isbDmfb7U90L9nuCyNsf7Z+8xGOIW02\nzvSKm9/hyw3yWrvJ73Wy3fuXnhpmwXZfGGHphp8fYusR1m59/ThXIW15hy/n1d8QEBIEhAQB\nIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQE\nASFBQEgQEBIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIT0qWY/0vFNn/XIGSF9oj8fTn7Vy/HD\niX/hZ/rLCekT3fzM+9PHdwvp/YT0iYS0O0LavZ9A/v3n+9Lhj1urTv/DGwlp747VHPsR0g4J\nae9+Ho2+jo9LM4d2X0L6RULauVMU35eEtE9C2jkhfQYh7ZyQPoOQdk5In0FIe3dRjpD2SUh7\nN5n+/v7y+L3jl5N1v66/yTsIafcmJ2Qn/wppX4T0qX6imV/EGwnpUwlpV4T0qf48cZpbwHsJ\n6VP5w75dERIEhAQBIUFASBAQEgSEBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBAQEgSE\nBAEhQUBIEBASBIQEASFBQEgQEBIEhAQBIUFASBD4P2n/ojQZkBIYAAAAAElFTkSuQmCC",
      "text/plain": [
       "Plot with title “Histogram of cnt[, 1]”"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAAADFBMVEX+/v4AAADT09P+/v5M\nG8pRAAAABHRSTlP///8AQCqp9AAAAAlwSFlzAAASdAAAEnQB3mYfeAAAGIpJREFUeJzt3eFC\nGzmygNH15f3f+e6SBGxw40YqdUmlc37MkLHS1bH1DabtwH/egG7/yT4BqEBIEEBIEEBIEEBI\nEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBI\nEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIEEBIIW7/\n9fnh43/IOY1Lfh8fhBRCSLsTUogzIQ3frbfbqRFtp3by4NsSUohpQmpb9vp33m5K+pGQQnwL\n6ec1w0/il8te/s5b5hPWJQgpxPFnpI//k9//L/1hQ77/4nPN25+bviy+P8jzyU8+Zxwf4ugg\nR2cmpFeEFOIopNuHb0Xd7oL5Ftv9kts3D2O//pafbns4j++n/8OZfftj8khIIYS0OyGF+LbR\nPzfw118c/upLSE9ve/bc68uhnt12+/qLJ6f/85n9Wzbk3qtASCF+Dulzzdvrnr4c9Ovve/YJ\n4slNP4w+DOmnM3t7TIqvhBTi2/+2Hz7DPC3hRUifv3GOkD7+GDwlpBAHIb0dB/FzSH9+y0Qh\nyegFIYU4Dunz1l+E9Gzj54fUfzcVJqQQByE93cA//A//p/94XMuXnp7cdi6kH85MR68IKYSQ\ndiekED+EdLvdbdNv//HuV1/28ImvkZ4c6u3pbd9C+ZLFwxk+O7Pb4018I6QQByG9PWy+zw+/\n1fD1k8Xd9v0ppG+Tn/bxrMWDhUdnJqRXhDSHebfovGc2FSEl+/KpaCLzntmMhJQs6znT7eWz\nNc/mfkNIyYRUg5DypezV1yG9eV73C0KCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKC\nAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKC\nAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKC\nAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAJkh3c5JPEM4KTWk/ztDSCxA\nSBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBA\nSBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBA\nSBBASBBASBCgI6TbHx0HEBJVNId0+9R8CCFRRWtIn/20lyQkymgP6dmHvzyGkKhCSBDAUzsI\n4GIDBHD5GwJ4QRYCCAkCeGoHAVxsgAAuf0MAL8hCACFBAE/tIICLDRDA5W8I4AVZCDAopNvt\nxFM/IVFGX0inntsJifq6Ln+f+ypJSNTXE9LtX00vlh7eICSq6Avp48Mflx7eICSqEBIEEBIE\n6HiL0J/rDK+vNgiJ+iJCerX08AYhUcUF72wQEvUJCQK0h/TxnM7XSND31yj+fvRi5eENQqKK\n/nc2CAm632v3JiTo/Z4Nt7vXZY+XHt4gJKro/OYn/ytJSJe4nZJ9ltvquNjw91/e2XCNU/eW\nOytLb0jeInQVIU3NC7KrENLUhLQKIU1NSKsQ0tSEtAohTU1IqxDS1IS0CiFNTUirENLUhLQK\nIU1NSKsQ0tSEtAohTU1IqxDS1IS0CiFNTUirENLUhLQKIU1NSKsQ0tSEtAohTU1IqxDS1IS0\nCiFNTUirENLUhLQKIU1NSKsQ0tSEtAohTU1IqxDS1IS0CiFNTUirENLUhLQKIU1NSKsQ0tSE\ntAohTU1IqxDS1IS0CiFNTUirENLUhLQKIU1NSKsQ0tSElO/cT4cV0tSElO/k/eDOmpmQ8gmp\nACHlE1IBQsonpAKElE9IBQgpn5AKEFI+IRUgpHxCKkBI+YRUgJDyCakAIeUTUgFCyiekAoSU\nT0gFCCmfkAoQUj4hFSCkfEIqQEj5hFSAkPIJqQAh5RNSAULKJ6QChJRPSAUIKZ+QChBSPiEV\nIKR8QipASPmEVICQ8gmpACHlE1IBQsonpAKElE9IBQgpn5AK6Ajp708beb3u8AYhvRNSAc0h\n3f3gnlcrD28Q0jshFdAa0mc/L0sS0gtCKqA9pGcfPl96eIOQ3gmpACHlE1IBntrlE1IBLjbk\nE1IBLn/nE1IBXpDNJ6QChJRPSAV4apdPSAW42JBPSAW4/J1PSAV4QTafkAoQUj4hFeCpXT4h\nFeBiQz4hFeDydz4hFeAF2XxCKmBQSLfbiad+QvpDSAV4apdPSAW42JBPSAW4/J1PSAV4QTaf\n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\nv9a4+Z+54Kkd1HfBxQao74LL31DfBS/IQn1CggBCggBCggBCggBCggBCggBCggBCggBCggBC\nggBCggBCggBCggBCggBCggBCggBCggBCggCZIV3/7ZdYX+KG/UlqSImzu6188s49npAarXzy\nzj2ekBqtfPLOPZ6QGq188s49npAarXzyzj2ekBqtfPLOPZ6QGq188s49npAarXzyzj2ekBqt\nfPLOPZ6QGq188s49npAarXzyzj2ekBqtfPLOPZ53f0MAIUEAIUEAIUEAIUEAIUEAIUEAIUEA\nIUEAIUEAIUEAIUEAIUEAIUEAIUEAIUEAIUGAxJAm/tECL8z9cxF+9O+sVzz/P2c86Z2fF9Kc\n98cpkz6WL32e9Xp/gI8TnvTOzwzp8/+Pi1n0tB9CWu1PcRdS9qk8lRbS1PfKC2ue9bv7u321\nP8bUZy2kBnM+uTilQkhT3vlCajDp0/QzqoQ03akLqcH7WU/4YJ5QIaS3Ge98ITVb8tzXD+n7\nx1MQUrMlz11IgwipwcLnvn5Ik56715EaTPo0/YxlX0d68zXSgTkvvpwy6YWjM5Z9Z8Obq3ZH\nZrw7TpryoTxl/ffaTXrne/c3BBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBAS\nBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBAS\nBBASBBASBBASBBDSyib8EZC7EtJKvobzU0hT/qTVuoS0kvMhTfqzv+sS0kp+E9LPtxNMSNP6\n9ynlv//489H3TzL/cvn4z+8ffa4R0mWENKuPJ2e3fx8dhHT3LO52e1jjud11hDSrf5+N3j4+\nLx08tbu75fEJnY4uJKRJfX1+dhjS3//25cM3HV1LSJPqDklHlxLSpHpD0tG1hDSpzpB0dDEh\nzeruYsPDL5+ueVx0+76SwYQ0q7vL339++fb9bT/Hl7+/XAhnNCFN6+4F2bt/nnxBVkgXE1I9\n8kkgpEqefiHFFYS0mtuno9sSzmp7QlrNTyG57J1GSBBASBBASBBASBBASBBASBBASBBASBBA\nSBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBASBBA\nSBBASBDg/wHVexYTWaYpLAAAAABJRU5ErkJggg==",
      "text/plain": [
       "Plot with title “Histogram of cnt_log2”"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cnt <-read.csv(file=\"mrnaseq_count_data.csv\",header=T,row.names=1,sep=\",\")\n",
    "\n",
    "cnt_log2 <- (log2(cnt[,1]+1))\n",
    "#Log Transformation\n",
    "hist(cnt[,1]) # without the log transformation\n",
    "hist(cnt_log2) # can see this log transformed is slightly more centered\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "54096615-74e0-4bc4-a230-428e83d705c4",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "4.4.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
