{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d49c5975-b375-4454-89bf-90a33c423a02",
   "metadata": {},
   "source": [
    "**The datasets in these projects are all in the DATA folder**\n",
    "\n",
    "**Instructions remain the same as for the midterm. \n",
    "Extra points (10% of total) for any insights outside of the questions asked.\n",
    "Please use a notebook to submit code with comments, but also submit a\n",
    "separate document with the answers.** \n",
    "\n",
    "**Two of these datasets you have already analyzed for the midterm. There is a new\n",
    "dataset ppg2008.csv which is also used in lesson 11.**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3848e47-c8fa-4af8-bfff-c41b4affb943",
   "metadata": {},
   "source": [
    "\n",
    "## Project 1.\n",
    "\n",
    "This data is about basketball players from the year 2008 and is\n",
    "in the file ppg2008.csv. It has various statistics on players in the NBA.\n",
    "You might not know what each of the metrics means (I don't),\n",
    "but they are just different dimensions of data.  \n",
    "\n",
    "This is a visualization and data mining exercise. \n",
    "\n",
    "What can you say about this dataset, use tools that you learned here.\n",
    "and make a report or a visual that highlights something interesting,\n",
    "maybe compare players, especially how they have performed since,\n",
    "based on the data in here. Many of these players have reached\n",
    "their peak recently and you will be able to find statistics about\n",
    "their performance in 2019. \n",
    "\n",
    "Could you have predicted the successes and failures of some of the players, based\n",
    "on analyses of the data ?\n",
    "maybe you could be a talent scout for an NBA team ? \n",
    "\n",
    "\n",
    "Think of it as your job, as a reporter for NY times, to make a single graphic\n",
    "that highlights something about this data. Explain the analysis that went\n",
    "into the graphic and present the code too. This should be done in a notebook so\n",
    "it is easy to evaluate. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ada27118-9129-44fd-a357-d2a4449379bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 21</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>Name</th><th scope=col>G</th><th scope=col>MIN</th><th scope=col>PTS</th><th scope=col>FGM</th><th scope=col>FGA</th><th scope=col>FGP</th><th scope=col>FTM</th><th scope=col>FTA</th><th scope=col>FTP</th><th scope=col>⋯</th><th scope=col>X3PA</th><th scope=col>X3PP</th><th scope=col>ORB</th><th scope=col>DRB</th><th scope=col>TRB</th><th scope=col>AST</th><th scope=col>STL</th><th scope=col>BLK</th><th scope=col>TO</th><th scope=col>PF</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>⋯</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>Dwyane Wade   </td><td>79</td><td>38.6</td><td>30.2</td><td>10.8</td><td>22.0</td><td>0.491</td><td>7.5</td><td>9.8</td><td>0.765</td><td>⋯</td><td>3.5</td><td>0.317</td><td>1.1</td><td>3.9</td><td>5.0</td><td>7.5</td><td>2.2</td><td>1.3</td><td>3.4</td><td>2.3</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>LeBron James  </td><td>81</td><td>37.7</td><td>28.4</td><td> 9.7</td><td>19.9</td><td>0.489</td><td>7.3</td><td>9.4</td><td>0.780</td><td>⋯</td><td>4.7</td><td>0.344</td><td>1.3</td><td>6.3</td><td>7.6</td><td>7.2</td><td>1.7</td><td>1.1</td><td>3.0</td><td>1.7</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>Kobe Bryant   </td><td>82</td><td>36.2</td><td>26.8</td><td> 9.8</td><td>20.9</td><td>0.467</td><td>5.9</td><td>6.9</td><td>0.856</td><td>⋯</td><td>4.1</td><td>0.351</td><td>1.1</td><td>4.1</td><td>5.2</td><td>4.9</td><td>1.5</td><td>0.5</td><td>2.6</td><td>2.3</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>Dirk Nowitzki </td><td>81</td><td>37.7</td><td>25.9</td><td> 9.6</td><td>20.0</td><td>0.479</td><td>6.0</td><td>6.7</td><td>0.890</td><td>⋯</td><td>2.1</td><td>0.359</td><td>1.1</td><td>7.3</td><td>8.4</td><td>2.4</td><td>0.8</td><td>0.8</td><td>1.9</td><td>2.2</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>Danny Granger </td><td>67</td><td>36.2</td><td>25.8</td><td> 8.5</td><td>19.1</td><td>0.447</td><td>6.0</td><td>6.9</td><td>0.878</td><td>⋯</td><td>6.7</td><td>0.404</td><td>0.7</td><td>4.4</td><td>5.1</td><td>2.7</td><td>1.0</td><td>1.4</td><td>2.5</td><td>3.1</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>Kevin Durant  </td><td>74</td><td>39.0</td><td>25.3</td><td> 8.9</td><td>18.8</td><td>0.476</td><td>6.1</td><td>7.1</td><td>0.863</td><td>⋯</td><td>3.1</td><td>0.422</td><td>1.0</td><td>5.5</td><td>6.5</td><td>2.8</td><td>1.3</td><td>0.7</td><td>3.0</td><td>1.8</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 21\n",
       "\\begin{tabular}{r|lllllllllllllllllllll}\n",
       "  & Name & G & MIN & PTS & FGM & FGA & FGP & FTM & FTA & FTP & ⋯ & X3PA & X3PP & ORB & DRB & TRB & AST & STL & BLK & TO & PF\\\\\n",
       "  & <chr> & <int> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & ⋯ & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\t1 & Dwyane Wade    & 79 & 38.6 & 30.2 & 10.8 & 22.0 & 0.491 & 7.5 & 9.8 & 0.765 & ⋯ & 3.5 & 0.317 & 1.1 & 3.9 & 5.0 & 7.5 & 2.2 & 1.3 & 3.4 & 2.3\\\\\n",
       "\t2 & LeBron James   & 81 & 37.7 & 28.4 &  9.7 & 19.9 & 0.489 & 7.3 & 9.4 & 0.780 & ⋯ & 4.7 & 0.344 & 1.3 & 6.3 & 7.6 & 7.2 & 1.7 & 1.1 & 3.0 & 1.7\\\\\n",
       "\t3 & Kobe Bryant    & 82 & 36.2 & 26.8 &  9.8 & 20.9 & 0.467 & 5.9 & 6.9 & 0.856 & ⋯ & 4.1 & 0.351 & 1.1 & 4.1 & 5.2 & 4.9 & 1.5 & 0.5 & 2.6 & 2.3\\\\\n",
       "\t4 & Dirk Nowitzki  & 81 & 37.7 & 25.9 &  9.6 & 20.0 & 0.479 & 6.0 & 6.7 & 0.890 & ⋯ & 2.1 & 0.359 & 1.1 & 7.3 & 8.4 & 2.4 & 0.8 & 0.8 & 1.9 & 2.2\\\\\n",
       "\t5 & Danny Granger  & 67 & 36.2 & 25.8 &  8.5 & 19.1 & 0.447 & 6.0 & 6.9 & 0.878 & ⋯ & 6.7 & 0.404 & 0.7 & 4.4 & 5.1 & 2.7 & 1.0 & 1.4 & 2.5 & 3.1\\\\\n",
       "\t6 & Kevin Durant   & 74 & 39.0 & 25.3 &  8.9 & 18.8 & 0.476 & 6.1 & 7.1 & 0.863 & ⋯ & 3.1 & 0.422 & 1.0 & 5.5 & 6.5 & 2.8 & 1.3 & 0.7 & 3.0 & 1.8\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 21\n",
       "\n",
       "| <!--/--> | Name &lt;chr&gt; | G &lt;int&gt; | MIN &lt;dbl&gt; | PTS &lt;dbl&gt; | FGM &lt;dbl&gt; | FGA &lt;dbl&gt; | FGP &lt;dbl&gt; | FTM &lt;dbl&gt; | FTA &lt;dbl&gt; | FTP &lt;dbl&gt; | ⋯ ⋯ | X3PA &lt;dbl&gt; | X3PP &lt;dbl&gt; | ORB &lt;dbl&gt; | DRB &lt;dbl&gt; | TRB &lt;dbl&gt; | AST &lt;dbl&gt; | STL &lt;dbl&gt; | BLK &lt;dbl&gt; | TO &lt;dbl&gt; | PF &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n",
       "| 1 | Dwyane Wade    | 79 | 38.6 | 30.2 | 10.8 | 22.0 | 0.491 | 7.5 | 9.8 | 0.765 | ⋯ | 3.5 | 0.317 | 1.1 | 3.9 | 5.0 | 7.5 | 2.2 | 1.3 | 3.4 | 2.3 |\n",
       "| 2 | LeBron James   | 81 | 37.7 | 28.4 |  9.7 | 19.9 | 0.489 | 7.3 | 9.4 | 0.780 | ⋯ | 4.7 | 0.344 | 1.3 | 6.3 | 7.6 | 7.2 | 1.7 | 1.1 | 3.0 | 1.7 |\n",
       "| 3 | Kobe Bryant    | 82 | 36.2 | 26.8 |  9.8 | 20.9 | 0.467 | 5.9 | 6.9 | 0.856 | ⋯ | 4.1 | 0.351 | 1.1 | 4.1 | 5.2 | 4.9 | 1.5 | 0.5 | 2.6 | 2.3 |\n",
       "| 4 | Dirk Nowitzki  | 81 | 37.7 | 25.9 |  9.6 | 20.0 | 0.479 | 6.0 | 6.7 | 0.890 | ⋯ | 2.1 | 0.359 | 1.1 | 7.3 | 8.4 | 2.4 | 0.8 | 0.8 | 1.9 | 2.2 |\n",
       "| 5 | Danny Granger  | 67 | 36.2 | 25.8 |  8.5 | 19.1 | 0.447 | 6.0 | 6.9 | 0.878 | ⋯ | 6.7 | 0.404 | 0.7 | 4.4 | 5.1 | 2.7 | 1.0 | 1.4 | 2.5 | 3.1 |\n",
       "| 6 | Kevin Durant   | 74 | 39.0 | 25.3 |  8.9 | 18.8 | 0.476 | 6.1 | 7.1 | 0.863 | ⋯ | 3.1 | 0.422 | 1.0 | 5.5 | 6.5 | 2.8 | 1.3 | 0.7 | 3.0 | 1.8 |\n",
       "\n"
      ],
      "text/plain": [
       "  Name           G  MIN  PTS  FGM  FGA  FGP   FTM FTA FTP   ⋯ X3PA X3PP  ORB\n",
       "1 Dwyane Wade    79 38.6 30.2 10.8 22.0 0.491 7.5 9.8 0.765 ⋯ 3.5  0.317 1.1\n",
       "2 LeBron James   81 37.7 28.4  9.7 19.9 0.489 7.3 9.4 0.780 ⋯ 4.7  0.344 1.3\n",
       "3 Kobe Bryant    82 36.2 26.8  9.8 20.9 0.467 5.9 6.9 0.856 ⋯ 4.1  0.351 1.1\n",
       "4 Dirk Nowitzki  81 37.7 25.9  9.6 20.0 0.479 6.0 6.7 0.890 ⋯ 2.1  0.359 1.1\n",
       "5 Danny Granger  67 36.2 25.8  8.5 19.1 0.447 6.0 6.9 0.878 ⋯ 6.7  0.404 0.7\n",
       "6 Kevin Durant   74 39.0 25.3  8.9 18.8 0.476 6.1 7.1 0.863 ⋯ 3.1  0.422 1.0\n",
       "  DRB TRB AST STL BLK TO  PF \n",
       "1 3.9 5.0 7.5 2.2 1.3 3.4 2.3\n",
       "2 6.3 7.6 7.2 1.7 1.1 3.0 1.7\n",
       "3 4.1 5.2 4.9 1.5 0.5 2.6 2.3\n",
       "4 7.3 8.4 2.4 0.8 0.8 1.9 2.2\n",
       "5 4.4 5.1 2.7 1.0 1.4 2.5 3.1\n",
       "6 5.5 6.5 2.8 1.3 0.7 3.0 1.8"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Load some libraries\n",
    "library(tidyverse) # For data manipulation and visualization\n",
    "library(ggplot2)   # For plotting\n",
    "library(cluster)   # For clustering analysis\n",
    "\n",
    "# Load the dataset\n",
    "ppg2008 <- read.csv(\"ppg2008.csv\", header = TRUE)\n",
    "\n",
    "# Preview the dataset\n",
    "head(ppg2008)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "bf11f683-0d80-4c1d-b2d8-fb23b0cd417c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Clean up the data\n",
    "# Separate player names from statistics\n",
    "player_names <- ppg2008[[1]] # Extract the first column (Player Names)\n",
    "stats <- ppg2008[, -1]       # Remove the first column (Keep stats)\n",
    "\n",
    "# Standardize numeric columns for analysis\n",
    "# Mutate so they statistics can be compared\n",
    "stats_scaled <- stats %>%\n",
    "  mutate(across(where(is.numeric), scale))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d4bb3087-42f6-4b90-b197-b1ee1330ffc6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 21</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>Player</th><th scope=col>G</th><th scope=col>MIN</th><th scope=col>PTS</th><th scope=col>FGM</th><th scope=col>FGA</th><th scope=col>FGP</th><th scope=col>FTM</th><th scope=col>FTA</th><th scope=col>FTP</th><th scope=col>⋯</th><th scope=col>X3PA</th><th scope=col>X3PP</th><th scope=col>ORB</th><th scope=col>DRB</th><th scope=col>TRB</th><th scope=col>AST</th><th scope=col>STL</th><th scope=col>BLK</th><th scope=col>TO</th><th scope=col>PF</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>⋯</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th><th scope=col>&lt;dbl[,1]&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>Dwyane Wade   </td><td> 0.6179300</td><td> 1.00197024</td><td>3.179941</td><td>2.9200222</td><td>2.596832</td><td> 0.5136017</td><td>1.9174753</td><td>2.1107721</td><td>-0.7401673</td><td>⋯</td><td> 0.13036473</td><td>-0.15749098</td><td>-0.27213551</td><td>-0.34656760</td><td>-0.3287465</td><td> 1.6522467</td><td> 2.5582382</td><td> 1.2064646</td><td> 1.7904454</td><td>-0.2984568</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>LeBron James  </td><td> 0.7693834</td><td> 0.61192992</td><td>2.566974</td><td>1.9571851</td><td>1.697237</td><td> 0.4649190</td><td>1.7787289</td><td>1.8965892</td><td>-0.5233214</td><td>⋯</td><td> 0.69716790</td><td> 0.02738974</td><td>-0.06117775</td><td> 1.00809403</td><td> 0.6605370</td><td> 1.5161473</td><td> 1.3672521</td><td> 0.8627425</td><td> 1.0596514</td><td>-1.3903719</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>Kobe Bryant   </td><td> 0.8451101</td><td>-0.03813728</td><td>2.022113</td><td>2.0447158</td><td>2.125615</td><td>-0.0705898</td><td>0.8075041</td><td>0.5579463</td><td> 0.5753645</td><td>⋯</td><td> 0.41376631</td><td> 0.07532177</td><td>-0.27213551</td><td>-0.23367913</td><td>-0.2526478</td><td> 0.4727186</td><td> 0.8908576</td><td>-0.1684238</td><td> 0.3288573</td><td>-0.2984568</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>Dirk Nowitzki </td><td> 0.7693834</td><td> 0.61192992</td><td>1.715629</td><td>1.8696545</td><td>1.740075</td><td> 0.2215059</td><td>0.8768773</td><td>0.4508549</td><td> 1.0668818</td><td>⋯</td><td>-0.53090563</td><td> 0.13010124</td><td>-0.27213551</td><td> 1.57253638</td><td> 0.9649320</td><td>-0.6614431</td><td>-0.7765229</td><td> 0.3471593</td><td>-0.9500323</td><td>-0.4804426</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>Danny Granger </td><td>-0.2907906</td><td>-0.03813728</td><td>1.681575</td><td>0.9068174</td><td>1.354534</td><td>-0.5574160</td><td>0.8768773</td><td>0.5579463</td><td> 0.8934051</td><td>⋯</td><td> 1.64183984</td><td> 0.43823576</td><td>-0.69405103</td><td>-0.06434643</td><td>-0.2906972</td><td>-0.5253437</td><td>-0.3001285</td><td> 1.3783256</td><td> 0.1461588</td><td> 1.1574300</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>Kevin Durant  </td><td> 0.2392964</td><td> 1.17532149</td><td>1.511307</td><td>1.2569400</td><td>1.226020</td><td> 0.1484820</td><td>0.9462505</td><td>0.6650378</td><td> 0.6765592</td><td>⋯</td><td>-0.05856966</td><td> 0.56148957</td><td>-0.37761439</td><td> 0.55654016</td><td> 0.2419940</td><td>-0.4799772</td><td> 0.4144632</td><td> 0.1752983</td><td> 1.0596514</td><td>-1.2083860</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 21\n",
       "\\begin{tabular}{r|lllllllllllllllllllll}\n",
       "  & Player & G & MIN & PTS & FGM & FGA & FGP & FTM & FTA & FTP & ⋯ & X3PA & X3PP & ORB & DRB & TRB & AST & STL & BLK & TO & PF\\\\\n",
       "  & <chr> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & ⋯ & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}> & <dbl{[},1{]}>\\\\\n",
       "\\hline\n",
       "\t1 & Dwyane Wade    &  0.6179300 &  1.00197024 & 3.179941 & 2.9200222 & 2.596832 &  0.5136017 & 1.9174753 & 2.1107721 & -0.7401673 & ⋯ &  0.13036473 & -0.15749098 & -0.27213551 & -0.34656760 & -0.3287465 &  1.6522467 &  2.5582382 &  1.2064646 &  1.7904454 & -0.2984568\\\\\n",
       "\t2 & LeBron James   &  0.7693834 &  0.61192992 & 2.566974 & 1.9571851 & 1.697237 &  0.4649190 & 1.7787289 & 1.8965892 & -0.5233214 & ⋯ &  0.69716790 &  0.02738974 & -0.06117775 &  1.00809403 &  0.6605370 &  1.5161473 &  1.3672521 &  0.8627425 &  1.0596514 & -1.3903719\\\\\n",
       "\t3 & Kobe Bryant    &  0.8451101 & -0.03813728 & 2.022113 & 2.0447158 & 2.125615 & -0.0705898 & 0.8075041 & 0.5579463 &  0.5753645 & ⋯ &  0.41376631 &  0.07532177 & -0.27213551 & -0.23367913 & -0.2526478 &  0.4727186 &  0.8908576 & -0.1684238 &  0.3288573 & -0.2984568\\\\\n",
       "\t4 & Dirk Nowitzki  &  0.7693834 &  0.61192992 & 1.715629 & 1.8696545 & 1.740075 &  0.2215059 & 0.8768773 & 0.4508549 &  1.0668818 & ⋯ & -0.53090563 &  0.13010124 & -0.27213551 &  1.57253638 &  0.9649320 & -0.6614431 & -0.7765229 &  0.3471593 & -0.9500323 & -0.4804426\\\\\n",
       "\t5 & Danny Granger  & -0.2907906 & -0.03813728 & 1.681575 & 0.9068174 & 1.354534 & -0.5574160 & 0.8768773 & 0.5579463 &  0.8934051 & ⋯ &  1.64183984 &  0.43823576 & -0.69405103 & -0.06434643 & -0.2906972 & -0.5253437 & -0.3001285 &  1.3783256 &  0.1461588 &  1.1574300\\\\\n",
       "\t6 & Kevin Durant   &  0.2392964 &  1.17532149 & 1.511307 & 1.2569400 & 1.226020 &  0.1484820 & 0.9462505 & 0.6650378 &  0.6765592 & ⋯ & -0.05856966 &  0.56148957 & -0.37761439 &  0.55654016 &  0.2419940 & -0.4799772 &  0.4144632 &  0.1752983 &  1.0596514 & -1.2083860\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 21\n",
       "\n",
       "| <!--/--> | Player &lt;chr&gt; | G &lt;dbl[,1]&gt; | MIN &lt;dbl[,1]&gt; | PTS &lt;dbl[,1]&gt; | FGM &lt;dbl[,1]&gt; | FGA &lt;dbl[,1]&gt; | FGP &lt;dbl[,1]&gt; | FTM &lt;dbl[,1]&gt; | FTA &lt;dbl[,1]&gt; | FTP &lt;dbl[,1]&gt; | ⋯ ⋯ | X3PA &lt;dbl[,1]&gt; | X3PP &lt;dbl[,1]&gt; | ORB &lt;dbl[,1]&gt; | DRB &lt;dbl[,1]&gt; | TRB &lt;dbl[,1]&gt; | AST &lt;dbl[,1]&gt; | STL &lt;dbl[,1]&gt; | BLK &lt;dbl[,1]&gt; | TO &lt;dbl[,1]&gt; | PF &lt;dbl[,1]&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n",
       "| 1 | Dwyane Wade    |  0.6179300 |  1.00197024 | 3.179941 | 2.9200222 | 2.596832 |  0.5136017 | 1.9174753 | 2.1107721 | -0.7401673 | ⋯ |  0.13036473 | -0.15749098 | -0.27213551 | -0.34656760 | -0.3287465 |  1.6522467 |  2.5582382 |  1.2064646 |  1.7904454 | -0.2984568 |\n",
       "| 2 | LeBron James   |  0.7693834 |  0.61192992 | 2.566974 | 1.9571851 | 1.697237 |  0.4649190 | 1.7787289 | 1.8965892 | -0.5233214 | ⋯ |  0.69716790 |  0.02738974 | -0.06117775 |  1.00809403 |  0.6605370 |  1.5161473 |  1.3672521 |  0.8627425 |  1.0596514 | -1.3903719 |\n",
       "| 3 | Kobe Bryant    |  0.8451101 | -0.03813728 | 2.022113 | 2.0447158 | 2.125615 | -0.0705898 | 0.8075041 | 0.5579463 |  0.5753645 | ⋯ |  0.41376631 |  0.07532177 | -0.27213551 | -0.23367913 | -0.2526478 |  0.4727186 |  0.8908576 | -0.1684238 |  0.3288573 | -0.2984568 |\n",
       "| 4 | Dirk Nowitzki  |  0.7693834 |  0.61192992 | 1.715629 | 1.8696545 | 1.740075 |  0.2215059 | 0.8768773 | 0.4508549 |  1.0668818 | ⋯ | -0.53090563 |  0.13010124 | -0.27213551 |  1.57253638 |  0.9649320 | -0.6614431 | -0.7765229 |  0.3471593 | -0.9500323 | -0.4804426 |\n",
       "| 5 | Danny Granger  | -0.2907906 | -0.03813728 | 1.681575 | 0.9068174 | 1.354534 | -0.5574160 | 0.8768773 | 0.5579463 |  0.8934051 | ⋯ |  1.64183984 |  0.43823576 | -0.69405103 | -0.06434643 | -0.2906972 | -0.5253437 | -0.3001285 |  1.3783256 |  0.1461588 |  1.1574300 |\n",
       "| 6 | Kevin Durant   |  0.2392964 |  1.17532149 | 1.511307 | 1.2569400 | 1.226020 |  0.1484820 | 0.9462505 | 0.6650378 |  0.6765592 | ⋯ | -0.05856966 |  0.56148957 | -0.37761439 |  0.55654016 |  0.2419940 | -0.4799772 |  0.4144632 |  0.1752983 |  1.0596514 | -1.2083860 |\n",
       "\n"
      ],
      "text/plain": [
       "  Player         G          MIN         PTS      FGM       FGA      FGP       \n",
       "1 Dwyane Wade     0.6179300  1.00197024 3.179941 2.9200222 2.596832  0.5136017\n",
       "2 LeBron James    0.7693834  0.61192992 2.566974 1.9571851 1.697237  0.4649190\n",
       "3 Kobe Bryant     0.8451101 -0.03813728 2.022113 2.0447158 2.125615 -0.0705898\n",
       "4 Dirk Nowitzki   0.7693834  0.61192992 1.715629 1.8696545 1.740075  0.2215059\n",
       "5 Danny Granger  -0.2907906 -0.03813728 1.681575 0.9068174 1.354534 -0.5574160\n",
       "6 Kevin Durant    0.2392964  1.17532149 1.511307 1.2569400 1.226020  0.1484820\n",
       "  FTM       FTA       FTP        ⋯ X3PA        X3PP        ORB        \n",
       "1 1.9174753 2.1107721 -0.7401673 ⋯  0.13036473 -0.15749098 -0.27213551\n",
       "2 1.7787289 1.8965892 -0.5233214 ⋯  0.69716790  0.02738974 -0.06117775\n",
       "3 0.8075041 0.5579463  0.5753645 ⋯  0.41376631  0.07532177 -0.27213551\n",
       "4 0.8768773 0.4508549  1.0668818 ⋯ -0.53090563  0.13010124 -0.27213551\n",
       "5 0.8768773 0.5579463  0.8934051 ⋯  1.64183984  0.43823576 -0.69405103\n",
       "6 0.9462505 0.6650378  0.6765592 ⋯ -0.05856966  0.56148957 -0.37761439\n",
       "  DRB         TRB        AST        STL        BLK        TO         PF        \n",
       "1 -0.34656760 -0.3287465  1.6522467  2.5582382  1.2064646  1.7904454 -0.2984568\n",
       "2  1.00809403  0.6605370  1.5161473  1.3672521  0.8627425  1.0596514 -1.3903719\n",
       "3 -0.23367913 -0.2526478  0.4727186  0.8908576 -0.1684238  0.3288573 -0.2984568\n",
       "4  1.57253638  0.9649320 -0.6614431 -0.7765229  0.3471593 -0.9500323 -0.4804426\n",
       "5 -0.06434643 -0.2906972 -0.5253437 -0.3001285  1.3783256  0.1461588  1.1574300\n",
       "6  0.55654016  0.2419940 -0.4799772  0.4144632  0.1752983  1.0596514 -1.2083860"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\nZNTiQ1ISUeOQ7gE0H5IpibBuQ1ISSZ2GZEoia3Sw4aejHkJSEkGjw98/zyR9PGrxIZmSiBo9\nIRvasKsiJCWR1OMpQt+ERFC/ISmJICFBQMchKYkcIUFAzyEpiRghQUA/n2q+REmE9Pd2XENC\nIqSnz5BdoCQyhAQBnYekJDK6+lTzBUIiou+DDTclkSEkIRHQ9ROy/yiJACEJiYDRm5/0uGmn\nJBKEJCQCbNopiQAhCYmAvs/+vlMSn+r+eaQvQuJTvZ9r901JfEhIX4TEh4T0j5L4TO9nf98J\nic8MnpAd+nTU2kJSEp8R0jch8RFPyN4piU8sHmzocEYSEh8R0oOS+MDkE/u63UcSEh9ZDunj\nUSsMSUl8wBOyP4TEdkJ6UhKbOfz9dFUSW3mp+YCQ2EpIA6YktrJpNyQkNhLSkCmJjUYnreZG\nrTQkUxIbzc7+zoxab0hKYoulNz8JjFprSKYktpmt8T0ftbuZkthoaY3vOSRTEptM1vjQtl3V\nISmJ9YZrfO5wQ8UhmZLYYnzULjZq1SFdzUqsJaSpq5JYz6bdxPWqJNZzsGFCSGzh8PeEkNjC\nE7ITQmKLDacIPRdZ+up+MXcPDyYktlh/0upzuecVpletOKSbkNhg/cso7g3dHi+qvY2+GixT\nKyWx3uo1/nIZfzWuabZQvaTECkJ6SUm8b0tIl2E4s5CCrw88mZJ424aQnscabremQ1ISb9u4\nabd0nKG1TbubknibkH6lJN4jpN8pibfMnpD9axdnsH/U6PNIY0riHatDWjyfoaUzG2akxN82\nrPFtn2u3QEn8aZ81vq2QlMSfFtf4nl9GsUhJ/GG8xr+zj/TWqI2FpCT+sPR6pE4/jPlXSuJX\nk5Dux7U/HrW5kJTEry7TC5fZd7eM2l5ISuI3QnqflHhpumk3O0lh26hNhqQkXpoebOj+XYR+\npSRemB7+XvHmDb+N2mhISuIFZzasoyQWzfaRhv/fPmqzISmJRUJaS0ksGL4Y772XUbw1asMh\nKYkFyyF9PGrLIUmJucVNu89HbTskJTElpE2UxJjD39soiZHpGp95c8f2Q1ISI8sv7Pt41PZD\nUhJDs3Ptnv/7ZNQOQlISA56Q3U5J/BDSJ6TEnZA+oiS+2Uf6jJL4x1G7DymJL55H+pSSuDmz\nIUBJCClBSQw/1iU5alchKQkhZUipd0LKUFLnhBSipL6t/+jLt0btLyQl9U1IMUrqmU27HCV1\n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\nCBB4cx4AAAAASUVORK5CYII=",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# can do kmeans clustering, find the elbow point first\n",
    "# use elbow method to find the k\n",
    "library(factoextra)\n",
    "\n",
    "# Visualize the optimal number of clusters\n",
    "fviz_nbclust(stats_scaled, kmeans, method = \"wss\") +\n",
    "  labs(title = \"Elbow Method for Optimal k\")\n",
    "\n",
    "#Elbow point appears to be 7"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "02ee1f75-9f2a-4c6d-b596-b2fc327202a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 2</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>Name</th><th scope=col>Cluster</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;fct&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>Dwyane Wade   </td><td>6</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>LeBron James  </td><td>6</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>Kobe Bryant   </td><td>6</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>Dirk Nowitzki </td><td>6</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>Danny Granger </td><td>6</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>Kevin Durant  </td><td>6</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 2\n",
       "\\begin{tabular}{r|ll}\n",
       "  & Name & Cluster\\\\\n",
       "  & <chr> & <fct>\\\\\n",
       "\\hline\n",
       "\t1 & Dwyane Wade    & 6\\\\\n",
       "\t2 & LeBron James   & 6\\\\\n",
       "\t3 & Kobe Bryant    & 6\\\\\n",
       "\t4 & Dirk Nowitzki  & 6\\\\\n",
       "\t5 & Danny Granger  & 6\\\\\n",
       "\t6 & Kevin Durant   & 6\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 2\n",
       "\n",
       "| <!--/--> | Name &lt;chr&gt; | Cluster &lt;fct&gt; |\n",
       "|---|---|---|\n",
       "| 1 | Dwyane Wade    | 6 |\n",
       "| 2 | LeBron James   | 6 |\n",
       "| 3 | Kobe Bryant    | 6 |\n",
       "| 4 | Dirk Nowitzki  | 6 |\n",
       "| 5 | Danny Granger  | 6 |\n",
       "| 6 | Kevin Durant   | 6 |\n",
       "\n"
      ],
      "text/plain": [
       "  Name           Cluster\n",
       "1 Dwyane Wade    6      \n",
       "2 LeBron James   6      \n",
       "3 Kobe Bryant    6      \n",
       "4 Dirk Nowitzki  6      \n",
       "5 Danny Granger  6      \n",
       "6 Kevin Durant   6      "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#kmeans\n",
    "set.seed(123)  # For reproducibility\n",
    "\n",
    "optimal_k <- 7  # optimal_k\n",
    "kmeans_result <- kmeans(stats_scaled, centers = optimal_k, nstart = 25)\n",
    "\n",
    "# Add cluster assignments back to the dataset\n",
    "ppg2008$Cluster <- as.factor(kmeans_result$cluster)\n",
    "\n",
    " # View player names and their clusters\n",
    " head(ppg2008 %>% select(\"Name\", \"Cluster\"))\n",
    "# looks good"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7fbae2a7-08fb-41ea-b1e9-1555ad0e44e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'Name'</li><li>'G'</li><li>'MIN'</li><li>'PTS'</li><li>'FGM'</li><li>'FGA'</li><li>'FGP'</li><li>'FTM'</li><li>'FTA'</li><li>'FTP'</li><li>'X3PM'</li><li>'X3PA'</li><li>'X3PP'</li><li>'ORB'</li><li>'DRB'</li><li>'TRB'</li><li>'AST'</li><li>'STL'</li><li>'BLK'</li><li>'TO'</li><li>'PF'</li><li>'Cluster'</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Name'\n",
       "\\item 'G'\n",
       "\\item 'MIN'\n",
       "\\item 'PTS'\n",
       "\\item 'FGM'\n",
       "\\item 'FGA'\n",
       "\\item 'FGP'\n",
       "\\item 'FTM'\n",
       "\\item 'FTA'\n",
       "\\item 'FTP'\n",
       "\\item 'X3PM'\n",
       "\\item 'X3PA'\n",
       "\\item 'X3PP'\n",
       "\\item 'ORB'\n",
       "\\item 'DRB'\n",
       "\\item 'TRB'\n",
       "\\item 'AST'\n",
       "\\item 'STL'\n",
       "\\item 'BLK'\n",
       "\\item 'TO'\n",
       "\\item 'PF'\n",
       "\\item 'Cluster'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Name'\n",
       "2. 'G'\n",
       "3. 'MIN'\n",
       "4. 'PTS'\n",
       "5. 'FGM'\n",
       "6. 'FGA'\n",
       "7. 'FGP'\n",
       "8. 'FTM'\n",
       "9. 'FTA'\n",
       "10. 'FTP'\n",
       "11. 'X3PM'\n",
       "12. 'X3PA'\n",
       "13. 'X3PP'\n",
       "14. 'ORB'\n",
       "15. 'DRB'\n",
       "16. 'TRB'\n",
       "17. 'AST'\n",
       "18. 'STL'\n",
       "19. 'BLK'\n",
       "20. 'TO'\n",
       "21. 'PF'\n",
       "22. 'Cluster'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       " [1] \"Name\"    \"G\"       \"MIN\"     \"PTS\"     \"FGM\"     \"FGA\"     \"FGP\"    \n",
       " [8] \"FTM\"     \"FTA\"     \"FTP\"     \"X3PM\"    \"X3PA\"    \"X3PP\"    \"ORB\"    \n",
       "[15] \"DRB\"     \"TRB\"     \"AST\"     \"STL\"     \"BLK\"     \"TO\"      \"PF\"     \n",
       "[22] \"Cluster\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Check exact column names in the dataframe\n",
    "colnames(ppg2008)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "2d18f28f-988b-4e78-ade1-e9056d6abafa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nYsh/5AcB7nonQVUAAAAASUVORK5CYII=",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "library(ggplot2)\n",
    "\n",
    "# Create the plot \n",
    "# basing it on the amount of minutes played in the season\n",
    "# and the amount of points scored by the player \n",
    "ggplot(ppg2008, aes(x = MIN, y = PTS, color = Cluster)) +\n",
    "  geom_point() +\n",
    "  labs(\n",
    "    title = \"K-means Clustering of NBA Players (2008)\", \n",
    "    x = \"Minutes Played in the Season (MIN)\", \n",
    "    y = \"Points Per Game (PTS)\", \n",
    "    color = \"Cluster\"\n",
    "  ) +\n",
    "  theme_minimal()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "7c8262d3-5988-4166-89ea-56a44f2b38be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'Dwyane Wade '</li><li>'LeBron James '</li><li>'Kobe Bryant '</li><li>'Dirk Nowitzki '</li><li>'Danny Granger '</li><li>'Kevin Durant '</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Dwyane Wade '\n",
       "\\item 'LeBron James '\n",
       "\\item 'Kobe Bryant '\n",
       "\\item 'Dirk Nowitzki '\n",
       "\\item 'Danny Granger '\n",
       "\\item 'Kevin Durant '\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Dwyane Wade '\n",
       "2. 'LeBron James '\n",
       "3. 'Kobe Bryant '\n",
       "4. 'Dirk Nowitzki '\n",
       "5. 'Danny Granger '\n",
       "6. 'Kevin Durant '\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Dwyane Wade \"   \"LeBron James \"  \"Kobe Bryant \"   \"Dirk Nowitzki \"\n",
       "[5] \"Danny Granger \" \"Kevin Durant \" "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# get the names of players in cluster 6\n",
    "cluster6 <- ppg2008 %>% filter(Cluster == 6) %>% pull(Name)\n",
    "cluster6"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "803e7deb-e73d-446f-baa6-e9dc2d02f299",
   "metadata": {},
   "source": [
    "From the plot, cluster 6 (Dwyane Wade, LeBron James, Kobe Bryant, Dirk Nowitzki, Danny Granger, Kevin Durant) includes players who have logged the most minutes and scored the highest points per game (PPG). This suggests that these players are likely to have had a significant impact on their teams during the 2008 season. Minutes played and PPG are often correlated with a player's role and performance, making these players stand out as key contributors.\n",
    "\n",
    "Using this information, we could hypothesize that players in cluster 6 were among the most 'successful' in 2008 based on these metrics. This cluster could serve as a potential indicator for identifying players with high performance and durability, valuable traits for predicting future success.\n",
    "\n",
    " Analyzing the dataset, tools like clustering have helped group players by similar characteristics. By focusing on players in cluster 6, who excelled in scoring and playing time, one might predict their potential for sustained success in future seasons, such as 2019. This analysis could provide insights for talent scouts or sports analysts seeking to evaluate players' contributions and predict their career trajectories.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "e1c6b35f-a7e1-45fd-b849-cdebcc78baa5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 26</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>Player</th><th scope=col>G</th><th scope=col>GS</th><th scope=col>MP</th><th scope=col>FG</th><th scope=col>FGA</th><th scope=col>FG.</th><th scope=col>X3P</th><th scope=col>X3PA</th><th scope=col>X3P.</th><th scope=col>⋯</th><th scope=col>FT.</th><th scope=col>ORB</th><th scope=col>DRB</th><th scope=col>TRB</th><th scope=col>AST</th><th scope=col>STL</th><th scope=col>BLK</th><th scope=col>TOV</th><th scope=col>PF</th><th scope=col>PTS</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>⋯</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>James Harden         </td><td>68</td><td>68</td><td>36.5</td><td> 9.9</td><td>22.3</td><td>0.444</td><td>4.4</td><td>12.4</td><td>0.355</td><td>⋯</td><td>0.865</td><td>1.0</td><td> 5.5</td><td> 6.6</td><td>7.5</td><td>1.8</td><td>0.9</td><td>4.5</td><td>3.3</td><td>34.3</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>Bradley Beal         </td><td>57</td><td>57</td><td>36.0</td><td>10.4</td><td>22.9</td><td>0.455</td><td>3.0</td><td> 8.4</td><td>0.353</td><td>⋯</td><td>0.842</td><td>0.9</td><td> 3.3</td><td> 4.2</td><td>6.1</td><td>1.2</td><td>0.4</td><td>3.4</td><td>2.2</td><td>30.5</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>Damian Lillard       </td><td>66</td><td>66</td><td>37.5</td><td> 9.5</td><td>20.4</td><td>0.463</td><td>4.1</td><td>10.2</td><td>0.401</td><td>⋯</td><td>0.888</td><td>0.5</td><td> 3.8</td><td> 4.3</td><td>8.0</td><td>1.1</td><td>0.3</td><td>2.9</td><td>1.7</td><td>30.0</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>Trae Young           </td><td>60</td><td>60</td><td>35.3</td><td> 9.1</td><td>20.8</td><td>0.437</td><td>3.4</td><td> 9.5</td><td>0.361</td><td>⋯</td><td>0.860</td><td>0.5</td><td> 3.7</td><td> 4.3</td><td>9.3</td><td>1.1</td><td>0.1</td><td>4.8</td><td>1.7</td><td>29.6</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>Giannis Antetokounmpo</td><td>63</td><td>63</td><td>30.4</td><td>10.9</td><td>19.7</td><td>0.553</td><td>1.4</td><td> 4.7</td><td>0.304</td><td>⋯</td><td>0.633</td><td>2.2</td><td>11.4</td><td>13.6</td><td>5.6</td><td>1.0</td><td>1.0</td><td>3.7</td><td>3.1</td><td>29.5</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>Luka Dončić          </td><td>61</td><td>61</td><td>33.6</td><td> 9.5</td><td>20.6</td><td>0.463</td><td>2.8</td><td> 8.9</td><td>0.316</td><td>⋯</td><td>0.758</td><td>1.3</td><td> 8.1</td><td> 9.4</td><td>8.8</td><td>1.0</td><td>0.2</td><td>4.3</td><td>2.5</td><td>28.8</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 26\n",
       "\\begin{tabular}{r|lllllllllllllllllllll}\n",
       "  & Player & G & GS & MP & FG & FGA & FG. & X3P & X3PA & X3P. & ⋯ & FT. & ORB & DRB & TRB & AST & STL & BLK & TOV & PF & PTS\\\\\n",
       "  & <chr> & <int> & <int> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & ⋯ & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\t1 & James Harden          & 68 & 68 & 36.5 &  9.9 & 22.3 & 0.444 & 4.4 & 12.4 & 0.355 & ⋯ & 0.865 & 1.0 &  5.5 &  6.6 & 7.5 & 1.8 & 0.9 & 4.5 & 3.3 & 34.3\\\\\n",
       "\t2 & Bradley Beal          & 57 & 57 & 36.0 & 10.4 & 22.9 & 0.455 & 3.0 &  8.4 & 0.353 & ⋯ & 0.842 & 0.9 &  3.3 &  4.2 & 6.1 & 1.2 & 0.4 & 3.4 & 2.2 & 30.5\\\\\n",
       "\t3 & Damian Lillard        & 66 & 66 & 37.5 &  9.5 & 20.4 & 0.463 & 4.1 & 10.2 & 0.401 & ⋯ & 0.888 & 0.5 &  3.8 &  4.3 & 8.0 & 1.1 & 0.3 & 2.9 & 1.7 & 30.0\\\\\n",
       "\t4 & Trae Young            & 60 & 60 & 35.3 &  9.1 & 20.8 & 0.437 & 3.4 &  9.5 & 0.361 & ⋯ & 0.860 & 0.5 &  3.7 &  4.3 & 9.3 & 1.1 & 0.1 & 4.8 & 1.7 & 29.6\\\\\n",
       "\t5 & Giannis Antetokounmpo & 63 & 63 & 30.4 & 10.9 & 19.7 & 0.553 & 1.4 &  4.7 & 0.304 & ⋯ & 0.633 & 2.2 & 11.4 & 13.6 & 5.6 & 1.0 & 1.0 & 3.7 & 3.1 & 29.5\\\\\n",
       "\t6 & Luka Dončić           & 61 & 61 & 33.6 &  9.5 & 20.6 & 0.463 & 2.8 &  8.9 & 0.316 & ⋯ & 0.758 & 1.3 &  8.1 &  9.4 & 8.8 & 1.0 & 0.2 & 4.3 & 2.5 & 28.8\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 26\n",
       "\n",
       "| <!--/--> | Player &lt;chr&gt; | G &lt;int&gt; | GS &lt;int&gt; | MP &lt;dbl&gt; | FG &lt;dbl&gt; | FGA &lt;dbl&gt; | FG. &lt;dbl&gt; | X3P &lt;dbl&gt; | X3PA &lt;dbl&gt; | X3P. &lt;dbl&gt; | ⋯ ⋯ | FT. &lt;dbl&gt; | ORB &lt;dbl&gt; | DRB &lt;dbl&gt; | TRB &lt;dbl&gt; | AST &lt;dbl&gt; | STL &lt;dbl&gt; | BLK &lt;dbl&gt; | TOV &lt;dbl&gt; | PF &lt;dbl&gt; | PTS &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n",
       "| 1 | James Harden          | 68 | 68 | 36.5 |  9.9 | 22.3 | 0.444 | 4.4 | 12.4 | 0.355 | ⋯ | 0.865 | 1.0 |  5.5 |  6.6 | 7.5 | 1.8 | 0.9 | 4.5 | 3.3 | 34.3 |\n",
       "| 2 | Bradley Beal          | 57 | 57 | 36.0 | 10.4 | 22.9 | 0.455 | 3.0 |  8.4 | 0.353 | ⋯ | 0.842 | 0.9 |  3.3 |  4.2 | 6.1 | 1.2 | 0.4 | 3.4 | 2.2 | 30.5 |\n",
       "| 3 | Damian Lillard        | 66 | 66 | 37.5 |  9.5 | 20.4 | 0.463 | 4.1 | 10.2 | 0.401 | ⋯ | 0.888 | 0.5 |  3.8 |  4.3 | 8.0 | 1.1 | 0.3 | 2.9 | 1.7 | 30.0 |\n",
       "| 4 | Trae Young            | 60 | 60 | 35.3 |  9.1 | 20.8 | 0.437 | 3.4 |  9.5 | 0.361 | ⋯ | 0.860 | 0.5 |  3.7 |  4.3 | 9.3 | 1.1 | 0.1 | 4.8 | 1.7 | 29.6 |\n",
       "| 5 | Giannis Antetokounmpo | 63 | 63 | 30.4 | 10.9 | 19.7 | 0.553 | 1.4 |  4.7 | 0.304 | ⋯ | 0.633 | 2.2 | 11.4 | 13.6 | 5.6 | 1.0 | 1.0 | 3.7 | 3.1 | 29.5 |\n",
       "| 6 | Luka Dončić           | 61 | 61 | 33.6 |  9.5 | 20.6 | 0.463 | 2.8 |  8.9 | 0.316 | ⋯ | 0.758 | 1.3 |  8.1 |  9.4 | 8.8 | 1.0 | 0.2 | 4.3 | 2.5 | 28.8 |\n",
       "\n"
      ],
      "text/plain": [
       "  Player                G  GS MP   FG   FGA  FG.   X3P X3PA X3P.  ⋯ FT.   ORB\n",
       "1 James Harden          68 68 36.5  9.9 22.3 0.444 4.4 12.4 0.355 ⋯ 0.865 1.0\n",
       "2 Bradley Beal          57 57 36.0 10.4 22.9 0.455 3.0  8.4 0.353 ⋯ 0.842 0.9\n",
       "3 Damian Lillard        66 66 37.5  9.5 20.4 0.463 4.1 10.2 0.401 ⋯ 0.888 0.5\n",
       "4 Trae Young            60 60 35.3  9.1 20.8 0.437 3.4  9.5 0.361 ⋯ 0.860 0.5\n",
       "5 Giannis Antetokounmpo 63 63 30.4 10.9 19.7 0.553 1.4  4.7 0.304 ⋯ 0.633 2.2\n",
       "6 Luka Dončić           61 61 33.6  9.5 20.6 0.463 2.8  8.9 0.316 ⋯ 0.758 1.3\n",
       "  DRB  TRB  AST STL BLK TOV PF  PTS \n",
       "1  5.5  6.6 7.5 1.8 0.9 4.5 3.3 34.3\n",
       "2  3.3  4.2 6.1 1.2 0.4 3.4 2.2 30.5\n",
       "3  3.8  4.3 8.0 1.1 0.3 2.9 1.7 30.0\n",
       "4  3.7  4.3 9.3 1.1 0.1 4.8 1.7 29.6\n",
       "5 11.4 13.6 5.6 1.0 1.0 3.7 3.1 29.5\n",
       "6  8.1  9.4 8.8 1.0 0.2 4.3 2.5 28.8"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# MP is minutes played and PTS is points scored per game\n",
    "# Lets look at the 2019 file\n",
    "# Load the dataset\n",
    "ppg2019 <- read.csv(\"ppg2019.csv\", header = TRUE)\n",
    "\n",
    "# Preview the dataset\n",
    "head(ppg2019)\n",
    "# looks good, the col names are a bit different so I had to look up which one was minutes played and which was points "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "3c4723f3-74dd-4104-a1bc-c810657220ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAAACVBMVEUAAABGgrT///8D6hyc\nAAAACXBIWXMAABJ0AAASdAHeZh94AAAXs0lEQVR4nO3dC3biOBRAQfD+Fz2TTgD/AH+e7Sep\n6pzJhAQETfu2jDBw64DdblffAKiBkCCAkCCAkCCAkCCAkCCAkCCAkCDAYSHdev6d+vuycoy3\np77/fOUww7N8PteiP0nvTKv/5JRGSPMXEBKrFB3S709WhfQtka5/y9+OJSRGjgxpfGpLSLf5\nE/3rWBvS0uucPeuKP4OQWiKk92cWEoudHdJtuHn9nXgU0XWDzbe/fzU48+35k98hu9kzPs47\n+l3v0s8rH5xjcOHB8P2r7P/iNj7D6B7o//mo0skhjbfk14bYLQxpcKHHVj354egqJiGNr7x/\njg+3ehzSUC+90Uz59+Oo+5Z8hCQkApyxatf1NsnuuYENE3oX0uNkf39qeuHpSMNzTR4jzVx+\n8Pveibe3+ja9+pnRx38Q6nRySI9fjU70/skeb8iLQpofdXgV3fjqxmebnPftDZ25KaNspiHp\nqG4n79q9OfEhpNdPR/tT3aiKFCFNb93jskqqW6KQbn/zzuRS3TCk8XVEhzSaWdaENBf445dC\nqlqSkH5uyF9IkzGe/50R0nDz78bn/R7S9Epev1x0x1Gkk0Mab/ivs/XPMRxjsKs082/+zHiT\n3a3xzXozcwzO/Trr/LWsD0lJ9RKSkAhwZEhPvQgeP+idel5gsq3NbKqDi/3+/+2vR1c4GrI/\nyptbPnOyd5XzIT3+nNOQ7NvV7OSQBtPDeBNfFFI3HmLu14Or6G7TkPpnG4f0uO3Dq5he5dvM\npzPQ65df7zfK5G/2G1s/C9hIvhESC9hIvhESC9hIvhESC9hIvhESC9hIIICQIICQIICQIICQ\nIICQIICQIICQIICQIICQIICQIMAxITk8jcYICQIICQIICQIICQIICQIICQIICQIICQIICQII\nCQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQII\nCQJcHtL9xyE3As5zdUj3u5KowMUh3e9KogZCggBCggBCggBCggBW7SDA1SF5HokqXB7SDyVR\nOiFBgCQhKYmypQjJlETphAQBcoSkJAonJAiQJiQlUbIkIZmSKJuQIECWkJRE0YQEAdKEpCRK\n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\nAABJRU5ErkJggg==",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Clean up the data like before\n",
    "# Separate player names from statistics\n",
    "player_names <- ppg2019[[1]] # Extract the first column (Player Names)\n",
    "stats <- ppg2019[, -1]       # Remove the first column (Keep stats)\n",
    "\n",
    "# Standardize numeric columns for analysis\n",
    "# Mutate so they statistics can be compared\n",
    "stats_scaled <- stats %>%\n",
    "  mutate(across(where(is.numeric), scale))\n",
    "\n",
    "# Lets find the elbow point\n",
    "# Visualize the optimal number of clusters\n",
    "fviz_nbclust(stats_scaled, kmeans, method = \"wss\") +\n",
    "  labs(title = \"Elbow Method for Optimal k\")\n",
    "\n",
    "# Lets say 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "f6a7aae5-6bfb-44af-a4a4-d66cde37908b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 2</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>Player</th><th scope=col>Cluster</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;fct&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>James Harden         </td><td>4</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>Bradley Beal         </td><td>4</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>Damian Lillard       </td><td>4</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>Trae Young           </td><td>4</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>Giannis Antetokounmpo</td><td>5</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>Luka Dončić          </td><td>4</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 2\n",
       "\\begin{tabular}{r|ll}\n",
       "  & Player & Cluster\\\\\n",
       "  & <chr> & <fct>\\\\\n",
       "\\hline\n",
       "\t1 & James Harden          & 4\\\\\n",
       "\t2 & Bradley Beal          & 4\\\\\n",
       "\t3 & Damian Lillard        & 4\\\\\n",
       "\t4 & Trae Young            & 4\\\\\n",
       "\t5 & Giannis Antetokounmpo & 5\\\\\n",
       "\t6 & Luka Dončić           & 4\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 2\n",
       "\n",
       "| <!--/--> | Player &lt;chr&gt; | Cluster &lt;fct&gt; |\n",
       "|---|---|---|\n",
       "| 1 | James Harden          | 4 |\n",
       "| 2 | Bradley Beal          | 4 |\n",
       "| 3 | Damian Lillard        | 4 |\n",
       "| 4 | Trae Young            | 4 |\n",
       "| 5 | Giannis Antetokounmpo | 5 |\n",
       "| 6 | Luka Dončić           | 4 |\n",
       "\n"
      ],
      "text/plain": [
       "  Player                Cluster\n",
       "1 James Harden          4      \n",
       "2 Bradley Beal          4      \n",
       "3 Damian Lillard        4      \n",
       "4 Trae Young            4      \n",
       "5 Giannis Antetokounmpo 5      \n",
       "6 Luka Dončić           4      "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'James Harden'</li><li>'Bradley Beal'</li><li>'Damian Lillard'</li><li>'Trae Young'</li><li>'Luka Dončić'</li><li>'Kyrie Irving'</li><li>'Kawhi Leonard'</li><li>'Devin Booker'</li><li>'Zach LaVine'</li><li>'LeBron James'</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'James Harden'\n",
       "\\item 'Bradley Beal'\n",
       "\\item 'Damian Lillard'\n",
       "\\item 'Trae Young'\n",
       "\\item 'Luka Dončić'\n",
       "\\item 'Kyrie Irving'\n",
       "\\item 'Kawhi Leonard'\n",
       "\\item 'Devin Booker'\n",
       "\\item 'Zach LaVine'\n",
       "\\item 'LeBron James'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'James Harden'\n",
       "2. 'Bradley Beal'\n",
       "3. 'Damian Lillard'\n",
       "4. 'Trae Young'\n",
       "5. 'Luka Dončić'\n",
       "6. 'Kyrie Irving'\n",
       "7. 'Kawhi Leonard'\n",
       "8. 'Devin Booker'\n",
       "9. 'Zach LaVine'\n",
       "10. 'LeBron James'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       " [1] \"James Harden\"   \"Bradley Beal\"   \"Damian Lillard\" \"Trae Young\"    \n",
       " [5] \"Luka Dončić\"    \"Kyrie Irving\"   \"Kawhi Leonard\"  \"Devin Booker\"  \n",
       " [9] \"Zach LaVine\"    \"LeBron James\"  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\nJEIM+Q8QkOC2ozAbrQAAAABJRU5ErkJggg==",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#kmeans\n",
    "set.seed(123)  # For reproducibility\n",
    "\n",
    "optimal_k <- 5  # optimal_k\n",
    "kmeans_result <- kmeans(stats_scaled, centers = optimal_k, nstart = 25)\n",
    "\n",
    "# Add cluster assignments back to the dataset\n",
    "ppg2019$Cluster <- as.factor(kmeans_result$cluster)\n",
    "\n",
    " # View player names and their clusters\n",
    " head(ppg2019 %>% select(\"Player\", \"Cluster\"))\n",
    "\n",
    "# Create the plot \n",
    "# basing it on the amount of minutes played in the season\n",
    "# and the amount of points scored by the player \n",
    "ggplot(ppg2019, aes(x = MP, y = PTS, color = Cluster)) +\n",
    "  geom_point() +\n",
    "  labs(\n",
    "    title = \"K-means Clustering of NBA Players (2008)\", \n",
    "    x = \"Minutes Played in the Season (MP)\", \n",
    "    y = \"Points Per Game (PTS)\", \n",
    "    color = \"Cluster\"\n",
    "  ) +\n",
    "  theme_minimal()\n",
    "\n",
    "#get the names of players in cluster 4\n",
    "cluster4 <- ppg2019 %>% filter(Cluster == 4) %>% pull(Player)\n",
    "cluster4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69c587c7-ee76-43f3-b4fd-d92e200fd502",
   "metadata": {},
   "source": [
    "From the above analysis it looks like cluster 4 in 2019 has the most 'successful' players (most minutes played and most points per game)\n",
    "Comparing the names here (James Harden, Bradley Beal, Damian Lillard, Trae Young, Luka Dončić, Kyrie Irving, Kawhi Leonard, Devin Booker, Zach LaVine, LeBron James) we do see some one name from 2008 'successful' cluster reappear- Lebron James.\n",
    "\n",
    "To visually represent this, I created a scatter plot showing points per game versus minutes played, colored by cluster. This plot highlights that cluster 4 players tend to dominate the upper right corner, indicating high performance. Comparing this with data from 2019, we observe that LeBron James is the only player from the 2008 \"successful\" cluster who continues to excel, appearing among the top players in 2019. This suggests that high performance in 2008 was a potential predictor of sustained success.\n",
    "\n",
    "However, the data also shows that not all players from the 2008 \"successful\" cluster had similar long-term trajectories. By using clustering analysis and comparing players' statistics over time, this approach could aid in talent scouting by identifying players with metrics indicative of future success."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "f70043e6-dcf3-4cdf-a8c6-2ea6d63e6ae3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'LeBron James'</li><li>'LaMarcus Aldridge'</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'LeBron James'\n",
       "\\item 'LaMarcus Aldridge'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'LeBron James'\n",
       "2. 'LaMarcus Aldridge'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"LeBron James\"      \"LaMarcus Aldridge\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#see how many players are in both lists \n",
    "names2008 <- trimws(ppg2008$Name)\n",
    "names2019 <- trimws(ppg2019$Player)\n",
    "\n",
    "common_names <- intersect(names2008, names2019)\n",
    "common_names"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "451d8d01-4a24-4fe0-b1c5-cd2ec9492e1d",
   "metadata": {},
   "source": [
    "Upon further analysis we can see that only 2 players appear in both datasets, it would be better to compare their individual performances from 2008 to 2019"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "ab171720-fc19-4a8d-8a6d-5b1f84348a35",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Extract data for LeBron James from the 2008 dataset\n",
    "lebron_2008 <- subset(ppg2008, Name == \"LeBron James \", select = c(Name, MIN, PTS))\n",
    "# Add a column to indicate the year\n",
    "lebron_2008$Year <- 2008\n",
    "lebron_2008$Name<- \"LeBron James\" #get rid of the white space in the name\n",
    "\n",
    "# Extract data for LeBron James from the 2019 dataset\n",
    "lebron_2019 <- subset(ppg2019, Player == \"LeBron James\", select = c(Player, MP, PTS))\n",
    "# Rename the 'Player' column to 'Name' for consistency\n",
    "colnames(lebron_2019)[colnames(lebron_2019) == \"Player\"] <- \"Name\"\n",
    "\n",
    "#Rename the MIN column to MP\n",
    "colnames(lebron_2019)[colnames(lebron_2019) == \"MP\"] <- \"NIN\"\n",
    "# Add a column to indicate the year\n",
    "lebron_2019$Year <- 2019"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "4d5f66aa-380d-4d57-a5fc-8f95ac5010da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           Name  MIN  PTS Year\n",
      "2  LeBron James 37.7 28.4 2008\n",
      "14 LeBron James 34.6 25.3 2019\n"
     ]
    }
   ],
   "source": [
    "# # Check column names of both datasets\n",
    "#This was for trouble shooting\n",
    "# print(colnames(lebron_2008))\n",
    "# print(colnames(lebron_2019))\n",
    "\n",
    "# Standardize column names to ensure they match\n",
    "colnames(lebron_2008) <- c(\"Name\", \"MIN\", \"PTS\", \"Year\")\n",
    "colnames(lebron_2019) <- c(\"Name\", \"MIN\", \"PTS\", \"Year\")\n",
    "\n",
    "# Combine the two datasets\n",
    "lebron_data <- rbind(lebron_2008, lebron_2019)\n",
    "\n",
    "# View the resulting dataframe\n",
    "print(lebron_data)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "e5887e16-4431-4b10-be2e-f8382c6d59b8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                Name  MIN  PTS Year\n",
      "43 LaMarcus Aldridge 37.1 18.1 2008\n",
      "50 LaMarcus Aldridge 33.1 18.9 2019\n"
     ]
    }
   ],
   "source": [
    "#Repeat for 'LaMarcus Aldridge'\n",
    "lemarcus_2008 <- subset(ppg2008, Name == \"LaMarcus Aldridge \", select = c(Name, MIN, PTS))\n",
    "# Add a column to indicate the year\n",
    "lemarcus_2008$Year <- 2008\n",
    "lemarcus_2008$Name<- \"LaMarcus Aldridge\" #get rid of the white space in the name\n",
    "\n",
    "# Extract data for LeBron James from the 2019 dataset\n",
    "lemarcus_2019 <- subset(ppg2019, Player == \"LaMarcus Aldridge\", select = c(Player, MP, PTS))\n",
    "# Rename the 'Player' column to 'Name' for consistency\n",
    "colnames(lebron_2019)[colnames(lemarcus_2019) == \"Player\"] <- \"Name\"\n",
    "\n",
    "#Rename the MIN column to MP\n",
    "colnames(lemarcus_2019)[colnames(lemarcus_2019) == \"MP\"] <- \"NIN\"\n",
    "# Add a column to indicate the year\n",
    "lemarcus_2019$Year <- 2019\n",
    "colnames(lemarcus_2008) <- c(\"Name\", \"MIN\", \"PTS\", \"Year\")\n",
    "colnames(lemarcus_2019) <- c(\"Name\", \"MIN\", \"PTS\", \"Year\")\n",
    "\n",
    "# Combine the two datasets\n",
    "lemarcus_data <- rbind(lemarcus_2008, lemarcus_2019)\n",
    "\n",
    "# View the resulting dataframe\n",
    "print(lemarcus_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "70e5ec01-f41c-4ecc-b792-275c26c2ac10",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning message:\n",
      "“\u001b[1m\u001b[22mUsing `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n",
      "\u001b[36mℹ\u001b[39m Please use `linewidth` instead.”\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAAAFVBMVEUAAAAAv8QaGhpNTU3r\n6+v4dm3///8RdP0YAAAACXBIWXMAABJ0AAASdAHeZh94AAAgAElEQVR4nO2dDXeiSBREnXXC\n///JO0n8gO6G7i4eUMitczZRo9fi0VdRs5nbQAhZndvRBQj5hCASIQFBJEICgkiEBASRCAkI\nIhESEEQiJCCIREhAthXp9pv32Vh4849+z4fe/W2UWp0aaM0tsh7pdbvZS7j5W/TdzQwpALJN\n6tW27J7tkx1FuhXONt195/p5b56BSAVQGT5/lxXc0vUbrl1jvZDJHcycE2a3jJ9OpmvlbijS\ne4WtfdCe4y/ddeFssEjJycNEKp1cvGxZpIYrTaok+1jPiPSGtZ9rvZNlxPjwafzD6t1sJ1Ly\nQNLUJvC+b3Pnqjftv97P6eNFaq/QJFLLw3C+j/WM18h7/d5mz0ljX8KXTlqIlJ1BpCLozCI1\nQTs6JcdS7d967mSWNH2uKt1intzRoiulQ8/vr3NHvOnPHss/37IK8/mj8UNL8mCXPPCM8eNZ\nLhybD9PBTkQqHQ4UmdkWZvdUnUmpR45IQe+NbNisIZtW8fF7fNOZTZjcV/7wkTzWPvfHdMPm\nv2UVittXwWeDG6OGxWwoUvGyZKWOz2SPCLffy/Lrju8hvd0blp0p3mBOpKRcdh9zIt3GiPcV\ncma6hf0zKffIEBnodbJls0qNSlee3YR36Zk9n9zbeGRL5xpEyrdvEZhcYfozM5HyCYz37uhm\no0lMzmb3kNzu9aMFkZI7Gt/h2IdhNMRJ1XT7Ek3HN3hveLYRyRYm29Qwk9ke03spDalrs5LS\nNZGyTRh1ru7N8fnVIpW2bwGfEpKfVUxCJERCpBOKNPpeWrnpGrylZ7N7SG73/tHYlMIiTxd7\nJtLkPvJtuo2TXTW9q6VvhZXQNJPFHnNFxM1KG+U3nN2EyTVrezM5uyjSMH1wKG31bM0Sfkgu\nSn7mJdLz++zamUo2c3Z8w1nmvEiTG5RFmtmDk22ZLrjismhhlh4wW2Yy06M4ucpGLmzW3I4Y\n0h9OnqpmJpCu/XxvDtOfVEaW3ufcwEtbWdi44kXl/VtALv50RdpEytehp0j5al+4YLxRt/ye\naiI1zmSmR5dI9c3SRMo2oVOkbPHOPCNlW5AMvPQgNYtParxQ/iIVH9BnREoe/t+3mBVp/HNB\npMkdFndZeeOmNccbM2XOiNQ+k5keHSK1bFY2iIUrlyZQFml2b74ApY0pS12oNNrcgktz+IT2\nvLGZSOkGDq8NOoNIz0vmt298wwl1vIV1kTpmMtOjR6SGzeoXqbgJPSLdxifHl6Xn3mNNOiRS\npi1n8Nkm3ZL7GZayoUiLjxSFR8fx7coPPuk95LfL700VqbZJZZGyqd9uo3vI2yfUnpnM9OgU\nqRlX3obSPi5tQumBZbF36cKlc+ObzJuziC9s4PhnR4mU7qzxRZNBbCbS70wzhXSRhvwu0h9m\n0vSKNPm+j0iLm7UoUknI8ia0i1R8gix9axYp2b55fLZFjxscLlL2SFsSKe05veptZrm/LwsS\nKZ3XkvPZ6fcFyUaNwTNelI5v2may1GNm0ZUfLVpw5Ue0ZB8XJlASaWFvJgt9nUiF7VvEJ9SZ\nC2aynUgjCYoL4zn3uUVzG990hBrxC7dLflQXaZjeUbJDn4fJc3cxJBckGzW90XQjki0cXaNx\nJrM93vQmkVpwiSbjn773cWkCMyLN7c2yqbdJ0/K5tHB5+xbxkytMF15h05NsKNJzuu95pY9u\nPz9JdtFoTLdb9rt2yWNP4XbjO0p259yiyu4ovcPb7L0X6ow3KrliOo3JHQ/5zStVyz2G5E7m\ntrlxs6alS569rlCaQFGk0t6c3DobfXnTCpTp0s+usIyfbGBy44pHx/yv5qOteJ3LhHjt7GF8\nfgIvMCd3lOz/uRtM7ygpMN6Q/N7zCyYblV1xQkm3MLt5dSalHo+ykx+XQI2bNS09d29TafJN\nSB9K8705I9Iwbbh07n1h0i0vO4efbmByX9mWT+92+ceHpzCpc+Xs/XeL+aBOKtL02eLMOXv/\n/WI9qWo50/K35JDgtDn9BuwX61GdVaS5V5Iny+k3YNcYz6pezbn7+Vfh+bdgzxgP68wiEXKi\nIBIhAUEkQgKCSIQEBJEICQgiERIQRCIkIIhESEAQiZCAIBIhAUEkQgKCSIQEBJEICQgiERIQ\nRCIkIIhESEAQiZCAIBIhAUGkM+a/yamf//5LfkD2DSKdMYhkF0Q6Y/77b3zi97+fixDpqCDS\nGfPQ5vH98d/zJDkiiHTGIJJdEOmM+S+zZ3SWHBFEOmMQyS6IdMa8314Y//c64iP7B5HOGESy\nCyKdMf9NvrzfZfgPkY4KIp0xiGQXRCIkIIhESEAQiZCAIBIhAUEkQgKCSIQEBJEICQgiERIQ\n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\nOZgAAAAASUVORK5CYII=",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Combine data for both players\n",
    "# Create a combined dataframe for both players\n",
    "data <- data.frame(\n",
    "  Name = c(\"LeBron James\", \"LeBron James\", \"LaMarcus Aldridge\", \"LaMarcus Aldridge\"),\n",
    "  Year = c(2008, 2019, 2008, 2019),\n",
    "  MIN = c(37.7, 34.6, 37.1, 33.1),\n",
    "  PTS = c(28.4, 25.3, 18.1, 18.9)\n",
    ")\n",
    "\n",
    "# Load ggplot2 for visualization\n",
    "library(ggplot2)\n",
    "\n",
    "# Reshape the data for easy plotting (long format)\n",
    "library(tidyr)\n",
    "data_long <- pivot_longer(data, cols = c(MIN, PTS), names_to = \"Stat\", values_to = \"Value\")\n",
    "\n",
    "# Create the plot\n",
    "ggplot(data_long, aes(x = Year, y = Value, color = Name, group = interaction(Name, Stat))) +\n",
    "  geom_line(size = 1.2) +\n",
    "  geom_point(size = 3) +\n",
    "  facet_wrap(~Stat, scales = \"free_y\", ncol = 1) +\n",
    "  labs(\n",
    "    title = \"Change in Minutes Played and Points Per Game (2008 vs 2019)\",\n",
    "    x = \"Year\",\n",
    "    y = \"Value\",\n",
    "    color = \"Player\"\n",
    "  ) +\n",
    "  theme_minimal() +\n",
    "  theme(\n",
    "    plot.title = element_text(hjust = 0.5, size = 16),\n",
    "    legend.position = \"bottom\"\n",
    "  )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ba9c3e3-bb69-4dc0-a92c-955932765637",
   "metadata": {},
   "source": [
    "We can see from the graph above that both players played less minutes per game in 2019 versus 2008, and Lebron James scored less points per game, while Lamarcus Aldridge marginally scored more points per game. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5be64642-7c6e-4ff3-adec-38ba733292f9",
   "metadata": {},
   "source": [
    "\n",
    "## Project 2.\n",
    "\n",
    "\n",
    "Dataset 2:  train.csv.gz\n",
    "This is hand-written digits (0-9) from many people.\n",
    "It contains 785 columns, first columns is digit and the 784 remaining columns\n",
    "  are pixels 0-783. These are essentially 28x28 squares, so you can map the 784\n",
    "  columns to entries in the squares. Each entry is 0-255, 0 is for black and 255\n",
    "  stands for white, numbers in between are shades of gray\n",
    "\n",
    "\n",
    "1) Use PCA to reduce dimensions.  How many components do you need to keep\n",
    "to reproduce the digits reasonably well ? what is your final matrix ?\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4bafce63-2a0c-406f-9e21-025c724d4c38",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 785</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>label</th><th scope=col>pixel0</th><th scope=col>pixel1</th><th scope=col>pixel2</th><th scope=col>pixel3</th><th scope=col>pixel4</th><th scope=col>pixel5</th><th scope=col>pixel6</th><th scope=col>pixel7</th><th scope=col>pixel8</th><th scope=col>⋯</th><th scope=col>pixel774</th><th scope=col>pixel775</th><th scope=col>pixel776</th><th scope=col>pixel777</th><th scope=col>pixel778</th><th scope=col>pixel779</th><th scope=col>pixel780</th><th scope=col>pixel781</th><th scope=col>pixel782</th><th scope=col>pixel783</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>⋯</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>4</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 785\n",
       "\\begin{tabular}{r|lllllllllllllllllllll}\n",
       "  & label & pixel0 & pixel1 & pixel2 & pixel3 & pixel4 & pixel5 & pixel6 & pixel7 & pixel8 & ⋯ & pixel774 & pixel775 & pixel776 & pixel777 & pixel778 & pixel779 & pixel780 & pixel781 & pixel782 & pixel783\\\\\n",
       "  & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & ⋯ & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int>\\\\\n",
       "\\hline\n",
       "\t1 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t2 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t3 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t4 & 4 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t5 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t6 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 785\n",
       "\n",
       "| <!--/--> | label &lt;int&gt; | pixel0 &lt;int&gt; | pixel1 &lt;int&gt; | pixel2 &lt;int&gt; | pixel3 &lt;int&gt; | pixel4 &lt;int&gt; | pixel5 &lt;int&gt; | pixel6 &lt;int&gt; | pixel7 &lt;int&gt; | pixel8 &lt;int&gt; | ⋯ ⋯ | pixel774 &lt;int&gt; | pixel775 &lt;int&gt; | pixel776 &lt;int&gt; | pixel777 &lt;int&gt; | pixel778 &lt;int&gt; | pixel779 &lt;int&gt; | pixel780 &lt;int&gt; | pixel781 &lt;int&gt; | pixel782 &lt;int&gt; | pixel783 &lt;int&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n",
       "| 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "| 2 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "| 3 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "| 4 | 4 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "| 5 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "| 6 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "\n"
      ],
      "text/plain": [
       "  label pixel0 pixel1 pixel2 pixel3 pixel4 pixel5 pixel6 pixel7 pixel8 ⋯\n",
       "1 1     0      0      0      0      0      0      0      0      0      ⋯\n",
       "2 0     0      0      0      0      0      0      0      0      0      ⋯\n",
       "3 1     0      0      0      0      0      0      0      0      0      ⋯\n",
       "4 4     0      0      0      0      0      0      0      0      0      ⋯\n",
       "5 0     0      0      0      0      0      0      0      0      0      ⋯\n",
       "6 0     0      0      0      0      0      0      0      0      0      ⋯\n",
       "  pixel774 pixel775 pixel776 pixel777 pixel778 pixel779 pixel780 pixel781\n",
       "1 0        0        0        0        0        0        0        0       \n",
       "2 0        0        0        0        0        0        0        0       \n",
       "3 0        0        0        0        0        0        0        0       \n",
       "4 0        0        0        0        0        0        0        0       \n",
       "5 0        0        0        0        0        0        0        0       \n",
       "6 0        0        0        0        0        0        0        0       \n",
       "  pixel782 pixel783\n",
       "1 0        0       \n",
       "2 0        0       \n",
       "3 0        0       \n",
       "4 0        0       \n",
       "5 0        0       \n",
       "6 0        0       "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_data <- read.csv(\"train.csv.gz\")\n",
    "head(train_data) # just want to look\n",
    "# looks good"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "783b5f14-a5db-48bd-95ed-c8cdfa976001",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A matrix: 6 × 784 of type int</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>pixel0</th><th scope=col>pixel1</th><th scope=col>pixel2</th><th scope=col>pixel3</th><th scope=col>pixel4</th><th scope=col>pixel5</th><th scope=col>pixel6</th><th scope=col>pixel7</th><th scope=col>pixel8</th><th scope=col>pixel9</th><th scope=col>⋯</th><th scope=col>pixel774</th><th scope=col>pixel775</th><th scope=col>pixel776</th><th scope=col>pixel777</th><th scope=col>pixel778</th><th scope=col>pixel779</th><th scope=col>pixel780</th><th scope=col>pixel781</th><th scope=col>pixel782</th><th scope=col>pixel783</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "\t<tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>⋯</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A matrix: 6 × 784 of type int\n",
       "\\begin{tabular}{lllllllllllllllllllll}\n",
       " pixel0 & pixel1 & pixel2 & pixel3 & pixel4 & pixel5 & pixel6 & pixel7 & pixel8 & pixel9 & ⋯ & pixel774 & pixel775 & pixel776 & pixel777 & pixel778 & pixel779 & pixel780 & pixel781 & pixel782 & pixel783\\\\\n",
       "\\hline\n",
       "\t 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\t 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & ⋯ & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A matrix: 6 × 784 of type int\n",
       "\n",
       "| pixel0 | pixel1 | pixel2 | pixel3 | pixel4 | pixel5 | pixel6 | pixel7 | pixel8 | pixel9 | ⋯ | pixel774 | pixel775 | pixel776 | pixel777 | pixel778 | pixel779 | pixel780 | pixel781 | pixel782 | pixel783 |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n",
       "| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ⋯ | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n",
       "\n"
      ],
      "text/plain": [
       "     pixel0 pixel1 pixel2 pixel3 pixel4 pixel5 pixel6 pixel7 pixel8 pixel9 ⋯\n",
       "[1,] 0      0      0      0      0      0      0      0      0      0      ⋯\n",
       "[2,] 0      0      0      0      0      0      0      0      0      0      ⋯\n",
       "[3,] 0      0      0      0      0      0      0      0      0      0      ⋯\n",
       "[4,] 0      0      0      0      0      0      0      0      0      0      ⋯\n",
       "[5,] 0      0      0      0      0      0      0      0      0      0      ⋯\n",
       "[6,] 0      0      0      0      0      0      0      0      0      0      ⋯\n",
       "     pixel774 pixel775 pixel776 pixel777 pixel778 pixel779 pixel780 pixel781\n",
       "[1,] 0        0        0        0        0        0        0        0       \n",
       "[2,] 0        0        0        0        0        0        0        0       \n",
       "[3,] 0        0        0        0        0        0        0        0       \n",
       "[4,] 0        0        0        0        0        0        0        0       \n",
       "[5,] 0        0        0        0        0        0        0        0       \n",
       "[6,] 0        0        0        0        0        0        0        0       \n",
       "     pixel782 pixel783\n",
       "[1,] 0        0       \n",
       "[2,] 0        0       \n",
       "[3,] 0        0       \n",
       "[4,] 0        0       \n",
       "[5,] 0        0       \n",
       "[6,] 0        0       "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Separate pixel data and label data\n",
    "labels <- train_data[[1]]                # Digit labels\n",
    "pixel_data <- as.matrix(train_data[, -1])  # Pixel values\n",
    "head(pixel_data)\n",
    "# looks good"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8ba94d48-ee77-44c9-85d0-99357791b066",
   "metadata": {},
   "outputs": [],
   "source": [
    "# perform PCA\n",
    "\n",
    "pca_result <- prcomp(pixel_data, center = TRUE, scale. = FALSE)\n",
    "# Scale is false be cause the pixel values are already on a consistent scale"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "17b241b5-8338-4b3c-b64a-13f9c30a3bb1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nQgMdBnqEdPp075k3Hyj/9kf9EhroMNAipM9+7pYkJAMtB5qEdO3D60+9+UD5tz/ql9BAh4ER\nQjqdHrj0Ox1UXjBgYLdQ9geXdjC/PzhsgPn9wfE3zO8PbsjC/IQEAUKCACFBgJAgQEgQICQI\nEBIECAkChAQBQoIAIUGAkCBASBAgJAgQEgQICQKEBAFCggAhQYCQIEBIECAkCBASBAgJAoQE\nAUKCACFBgJAgQEgQICQIEBIECAkChAQBQoIAIUGAkCBASBAgJAgQEgQICQKEBAFCggAhQYCQ\nIEBIECAkCBASBAgJAoQEAUKCACFBgJAgQEgQICQIEBIECAkChAQBQoIAIUGAkCBASBAgJAgQ\nEgQICQKEBAFCggAhQYCQIEBIECAkCBASBAgJAoQEAUKCACFBgJAgQEgQICQIEBIECAkChAQB\nQoIAIUGAkCBASBAgJAgQEgQICQKEBAFCggAhQYCQIEBIECAkCBASBAgJAoQEAUKCACFBgJAg\nQEgQICQIEBIECAkChAQBQoIAIUGAkCBASBAgJAgQEgQICQKEBAFCggAhQYCQIEBIECAkCBAS\nBAgJAoQEAUKCACFBgJAg4H9VA3ogQQc4LgAAAABJRU5ErkJggg==",
      "text/plain": [
       "Plot with title “pca_result”"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot(pca_result) # just to look"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7c77075a-d108-4df9-91c2-67ee33ff3a47",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of components to retain ~90% variance: 87 \n"
     ]
    }
   ],
   "source": [
    "# Calculate the cumulative explained variance\n",
    "explained_variance <- pca_result$sdev^2 / sum(pca_result$sdev^2)\n",
    "cumulative_variance <- cumsum(explained_variance)\n",
    "\n",
    "#  Determine the number of components needed to retain 90% variance\n",
    "# This is \"good enough\"\n",
    "threshold <- 0.90\n",
    "num_components <- which(cumulative_variance >= threshold)[1]\n",
    "cat(\"Number of components to retain ~90% variance:\", num_components, \"\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "7cb31b38-746a-4c65-a5d6-195e74de0a7d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dimensions of the final reduced matrix: 42000 87 \n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A matrix: 6 × 87 of type dbl</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>PC1</th><th scope=col>PC2</th><th scope=col>PC3</th><th scope=col>PC4</th><th scope=col>PC5</th><th scope=col>PC6</th><th scope=col>PC7</th><th scope=col>PC8</th><th scope=col>PC9</th><th scope=col>PC10</th><th scope=col>⋯</th><th scope=col>PC78</th><th scope=col>PC79</th><th scope=col>PC80</th><th scope=col>PC81</th><th scope=col>PC82</th><th scope=col>PC83</th><th scope=col>PC84</th><th scope=col>PC85</th><th scope=col>PC86</th><th scope=col>PC87</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>  661.5958</td><td> 699.3113</td><td>-183.28204</td><td>120.61139</td><td> -81.08181</td><td> 489.4619</td><td>-683.4708</td><td>  85.55939</td><td>-348.548052</td><td> 202.97855</td><td>⋯</td><td> 17.300719</td><td>-36.47191</td><td>-55.067842</td><td>  63.53491</td><td> 56.25716</td><td>  26.98550</td><td> 36.06976</td><td>  -9.053069</td><td>  -5.795133</td><td>-39.65638</td></tr>\n",
       "\t<tr><td>-1701.4517</td><td> 360.5516</td><td> 501.80559</td><td>335.42366</td><td>-442.37893</td><td> 738.4040</td><td> 653.8754</td><td>-176.60068</td><td>   7.520175</td><td>  67.84627</td><td>⋯</td><td>121.755999</td><td>-91.05534</td><td> 27.713535</td><td>  64.05624</td><td>-19.63507</td><td> -26.89775</td><td> 19.38508</td><td> -49.052778</td><td>  30.988705</td><td>-88.35215</td></tr>\n",
       "\t<tr><td>  886.8944</td><td> 293.7658</td><td> -67.15531</td><td> 78.26376</td><td>-473.71592</td><td>-323.5406</td><td> 437.7991</td><td>-305.37774</td><td> 195.295503</td><td> -25.62602</td><td>⋯</td><td> 10.018738</td><td> 10.38739</td><td> -7.031791</td><td>-110.62425</td><td>-27.15064</td><td> -19.24352</td><td>-51.68490</td><td>  14.387117</td><td>  27.534345</td><td> 54.06588</td></tr>\n",
       "\t<tr><td>  165.7556</td><td>-300.1828</td><td>  64.14549</td><td>759.70626</td><td>-425.84438</td><td> 157.3903</td><td>-304.0991</td><td> 276.40898</td><td>  45.867215</td><td>-295.47758</td><td>⋯</td><td> -8.979341</td><td>-48.23431</td><td>-95.392258</td><td> 149.15037</td><td> 34.99066</td><td>-127.95332</td><td>-66.36942</td><td>  38.910404</td><td>-195.003698</td><td> 92.91792</td></tr>\n",
       "\t<tr><td>-1923.7097</td><td> 449.1531</td><td> 548.61302</td><td>188.55515</td><td>-651.73627</td><td> 990.0638</td><td> 564.5070</td><td>-255.91522</td><td>-124.914693</td><td> 177.56684</td><td>⋯</td><td> 32.704531</td><td>-10.79708</td><td> 73.454912</td><td>  34.58372</td><td> 35.28783</td><td> -63.84734</td><td> 31.07261</td><td> -69.886954</td><td>  49.601765</td><td>-50.44107</td></tr>\n",
       "\t<tr><td> -487.7519</td><td>-192.7524</td><td>   6.43585</td><td>-40.85660</td><td> -47.26066</td><td>  70.4281</td><td>-167.7297</td><td> 368.25687</td><td> 710.613942</td><td>-144.72966</td><td>⋯</td><td>-59.191407</td><td> 61.74864</td><td>100.473411</td><td>  91.87953</td><td> 85.75426</td><td> -34.84827</td><td> 36.31896</td><td>-107.751894</td><td>  25.004658</td><td> 25.79325</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A matrix: 6 × 87 of type dbl\n",
       "\\begin{tabular}{lllllllllllllllllllll}\n",
       " PC1 & PC2 & PC3 & PC4 & PC5 & PC6 & PC7 & PC8 & PC9 & PC10 & ⋯ & PC78 & PC79 & PC80 & PC81 & PC82 & PC83 & PC84 & PC85 & PC86 & PC87\\\\\n",
       "\\hline\n",
       "\t   661.5958 &  699.3113 & -183.28204 & 120.61139 &  -81.08181 &  489.4619 & -683.4708 &   85.55939 & -348.548052 &  202.97855 & ⋯ &  17.300719 & -36.47191 & -55.067842 &   63.53491 &  56.25716 &   26.98550 &  36.06976 &   -9.053069 &   -5.795133 & -39.65638\\\\\n",
       "\t -1701.4517 &  360.5516 &  501.80559 & 335.42366 & -442.37893 &  738.4040 &  653.8754 & -176.60068 &    7.520175 &   67.84627 & ⋯ & 121.755999 & -91.05534 &  27.713535 &   64.05624 & -19.63507 &  -26.89775 &  19.38508 &  -49.052778 &   30.988705 & -88.35215\\\\\n",
       "\t   886.8944 &  293.7658 &  -67.15531 &  78.26376 & -473.71592 & -323.5406 &  437.7991 & -305.37774 &  195.295503 &  -25.62602 & ⋯ &  10.018738 &  10.38739 &  -7.031791 & -110.62425 & -27.15064 &  -19.24352 & -51.68490 &   14.387117 &   27.534345 &  54.06588\\\\\n",
       "\t   165.7556 & -300.1828 &   64.14549 & 759.70626 & -425.84438 &  157.3903 & -304.0991 &  276.40898 &   45.867215 & -295.47758 & ⋯ &  -8.979341 & -48.23431 & -95.392258 &  149.15037 &  34.99066 & -127.95332 & -66.36942 &   38.910404 & -195.003698 &  92.91792\\\\\n",
       "\t -1923.7097 &  449.1531 &  548.61302 & 188.55515 & -651.73627 &  990.0638 &  564.5070 & -255.91522 & -124.914693 &  177.56684 & ⋯ &  32.704531 & -10.79708 &  73.454912 &   34.58372 &  35.28783 &  -63.84734 &  31.07261 &  -69.886954 &   49.601765 & -50.44107\\\\\n",
       "\t  -487.7519 & -192.7524 &    6.43585 & -40.85660 &  -47.26066 &   70.4281 & -167.7297 &  368.25687 &  710.613942 & -144.72966 & ⋯ & -59.191407 &  61.74864 & 100.473411 &   91.87953 &  85.75426 &  -34.84827 &  36.31896 & -107.751894 &   25.004658 &  25.79325\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A matrix: 6 × 87 of type dbl\n",
       "\n",
       "| PC1 | PC2 | PC3 | PC4 | PC5 | PC6 | PC7 | PC8 | PC9 | PC10 | ⋯ | PC78 | PC79 | PC80 | PC81 | PC82 | PC83 | PC84 | PC85 | PC86 | PC87 |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n",
       "|   661.5958 |  699.3113 | -183.28204 | 120.61139 |  -81.08181 |  489.4619 | -683.4708 |   85.55939 | -348.548052 |  202.97855 | ⋯ |  17.300719 | -36.47191 | -55.067842 |   63.53491 |  56.25716 |   26.98550 |  36.06976 |   -9.053069 |   -5.795133 | -39.65638 |\n",
       "| -1701.4517 |  360.5516 |  501.80559 | 335.42366 | -442.37893 |  738.4040 |  653.8754 | -176.60068 |    7.520175 |   67.84627 | ⋯ | 121.755999 | -91.05534 |  27.713535 |   64.05624 | -19.63507 |  -26.89775 |  19.38508 |  -49.052778 |   30.988705 | -88.35215 |\n",
       "|   886.8944 |  293.7658 |  -67.15531 |  78.26376 | -473.71592 | -323.5406 |  437.7991 | -305.37774 |  195.295503 |  -25.62602 | ⋯ |  10.018738 |  10.38739 |  -7.031791 | -110.62425 | -27.15064 |  -19.24352 | -51.68490 |   14.387117 |   27.534345 |  54.06588 |\n",
       "|   165.7556 | -300.1828 |   64.14549 | 759.70626 | -425.84438 |  157.3903 | -304.0991 |  276.40898 |   45.867215 | -295.47758 | ⋯ |  -8.979341 | -48.23431 | -95.392258 |  149.15037 |  34.99066 | -127.95332 | -66.36942 |   38.910404 | -195.003698 |  92.91792 |\n",
       "| -1923.7097 |  449.1531 |  548.61302 | 188.55515 | -651.73627 |  990.0638 |  564.5070 | -255.91522 | -124.914693 |  177.56684 | ⋯ |  32.704531 | -10.79708 |  73.454912 |   34.58372 |  35.28783 |  -63.84734 |  31.07261 |  -69.886954 |   49.601765 | -50.44107 |\n",
       "|  -487.7519 | -192.7524 |    6.43585 | -40.85660 |  -47.26066 |   70.4281 | -167.7297 |  368.25687 |  710.613942 | -144.72966 | ⋯ | -59.191407 |  61.74864 | 100.473411 |   91.87953 |  85.75426 |  -34.84827 |  36.31896 | -107.751894 |   25.004658 |  25.79325 |\n",
       "\n"
      ],
      "text/plain": [
       "     PC1        PC2       PC3        PC4       PC5        PC6       PC7      \n",
       "[1,]   661.5958  699.3113 -183.28204 120.61139  -81.08181  489.4619 -683.4708\n",
       "[2,] -1701.4517  360.5516  501.80559 335.42366 -442.37893  738.4040  653.8754\n",
       "[3,]   886.8944  293.7658  -67.15531  78.26376 -473.71592 -323.5406  437.7991\n",
       "[4,]   165.7556 -300.1828   64.14549 759.70626 -425.84438  157.3903 -304.0991\n",
       "[5,] -1923.7097  449.1531  548.61302 188.55515 -651.73627  990.0638  564.5070\n",
       "[6,]  -487.7519 -192.7524    6.43585 -40.85660  -47.26066   70.4281 -167.7297\n",
       "     PC8        PC9         PC10       ⋯ PC78       PC79      PC80      \n",
       "[1,]   85.55939 -348.548052  202.97855 ⋯  17.300719 -36.47191 -55.067842\n",
       "[2,] -176.60068    7.520175   67.84627 ⋯ 121.755999 -91.05534  27.713535\n",
       "[3,] -305.37774  195.295503  -25.62602 ⋯  10.018738  10.38739  -7.031791\n",
       "[4,]  276.40898   45.867215 -295.47758 ⋯  -8.979341 -48.23431 -95.392258\n",
       "[5,] -255.91522 -124.914693  177.56684 ⋯  32.704531 -10.79708  73.454912\n",
       "[6,]  368.25687  710.613942 -144.72966 ⋯ -59.191407  61.74864 100.473411\n",
       "     PC81       PC82      PC83       PC84      PC85        PC86       \n",
       "[1,]   63.53491  56.25716   26.98550  36.06976   -9.053069   -5.795133\n",
       "[2,]   64.05624 -19.63507  -26.89775  19.38508  -49.052778   30.988705\n",
       "[3,] -110.62425 -27.15064  -19.24352 -51.68490   14.387117   27.534345\n",
       "[4,]  149.15037  34.99066 -127.95332 -66.36942   38.910404 -195.003698\n",
       "[5,]   34.58372  35.28783  -63.84734  31.07261  -69.886954   49.601765\n",
       "[6,]   91.87953  85.75426  -34.84827  36.31896 -107.751894   25.004658\n",
       "     PC87     \n",
       "[1,] -39.65638\n",
       "[2,] -88.35215\n",
       "[3,]  54.06588\n",
       "[4,]  92.91792\n",
       "[5,] -50.44107\n",
       "[6,]  25.79325"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create the reduced matrix with the selected components\n",
    "reduced_matrix <- pca_result$x[, 1:num_components]\n",
    "\n",
    "\n",
    "# Save or use the final reduced matrix\n",
    "cat(\"Dimensions of the final reduced matrix:\", dim(reduced_matrix), \"\\n\")\n",
    "head(reduced_matrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "742c61e9-4783-40a6-9e90-e1dc0a1ff4d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>42000</li><li>784</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 42000\n",
       "\\item 784\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 42000\n",
       "2. 784\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] 42000   784"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dim(pixel_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78031e2f-70a7-456b-a162-293fa86c66fe",
   "metadata": {},
   "source": [
    "Overall we decrease the amount of pixels per image from 784 to 87."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d162028e-6a52-4caa-a58e-32eca244e756",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAABv1BMVEX+/v4AAABNTU1OTk5P\nT09RUVFSUlJTU1NUVFRWVlZXV1dYWFhZWVlaWlpbW1tdXV1eXl5fX19gYGBhYWFiYmJjY2Nk\nZGRlZWVmZmZnZ2doaGhpaWlqampra2tsbGxtbW1ubm5vb29wcHBxcXFycnJzc3N0dHR1dXV2\ndnZ3d3d4eHh5eXl6enp7e3t8fHx9fX1+fn6AgICBgYGCgoKDg4OEhISFhYWGhoaHh4eIiIiJ\niYmKioqMjIyNjY2Ojo6Pj4+QkJCRkZGSkpKTk5OUlJSVlZWWlpaXl5eYmJiZmZmampqbm5uc\nnJydnZ2enp6fn5+goKChoaGioqKkpKSlpaWnp6epqamqqqqrq6usrKytra2urq6vr6+wsLCx\nsbGysrKzs7O0tLS1tbW2tra3t7e4uLi5ubm6urq7u7u8vLy9vb2+vr6/v7/AwMDBwcHCwsLD\nw8PExMTFxcXGxsbHx8fIyMjJycnKysrLy8vMzMzNzc3Ozs7Pz8/Q0NDR0dHS0tLT09PU1NTV\n1dXW1tbX19fY2NjZ2dna2trb29vc3Nzd3d3e3t7f39/g4ODh4eHi4uLj4+Pk5OTl5eXm5ub+\n/v5qO0mqAAAAlXRSTlP/////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////\nADZkGzgAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAACAASURBVHic7d2JnyRHeaBht3xhLqFzRmI0\nly4kbpkF4wWZxaxZbAECxNpgZC+C5TAyYIwAYRDmtEAS6Kg/eNH2dMWbVRn9VWZ83VE5/T4/\nkHpq6uqIeKtnQllZf7CS1OwPej8B6XpgSFICQ5ISGJKUwJCkBIYkJTAkKYEhSQkMSUpgSFIC\nQ5ISGJKUwJCkBIYkJTAkKYEhSQkMSUpgSFICQ5ISGJKUwJCkBIYkJTAkKYEhSQkMSUqwkJAO\nXjX49ar6q92vNHa74cPs/gyvfwfXnOID1n9Vu6jb/C0jpK0pPJ2QTnHRLMBBS0nBrUZ/e1Hz\n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",
      "text/plain": [
       "Plot with title “Reconstructed: Label 1”"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAABklBMVEX+/v4AAABNTU1RUVFS\nUlJTU1NUVFRYWFhZWVldXV1fX19hYWFiYmJjY2NkZGRlZWVpaWlqampra2tsbGxtbW1ubm5w\ncHBxcXFzc3N0dHR1dXV2dnZ3d3d4eHh5eXl6enp7e3t8fHx9fX1+fn5/f3+AgICBgYGCgoKD\ng4OEhISFhYWGhoaHh4eIiIiJiYmKioqLi4uMjIyNjY2Ojo6Pj4+QkJCRkZGSkpKTk5OUlJSV\nlZWWlpaXl5eYmJiZmZmampqbm5ucnJyenp6fn5+goKChoaGioqKjo6OkpKSlpaWmpqanp6ep\nqamqqqqrq6usrKytra2urq6vr6+wsLCxsbGysrKzs7O0tLS1tbW3t7e4uLi5ubm6urq7u7u8\nvLy9vb2+vr6/v7/AwMDBwcHCwsLDw8PExMTFxcXGxsbHx8fIyMjJycnKysrLy8vNzc3Ozs7P\nz8/Q0NDR0dHS0tLT09PU1NTV1dXW1tbX19fY2NjZ2dnb29vd3d3e3t7f39/g4ODh4eHi4uLk\n5OTl5eXm5ub+/v4H5N4NAAAAhnRSTlP/////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////ANmZWh0A\nAAAJcEhZcwAAEnQAABJ0Ad5mH3gAABRlSURBVHic7d2JmyVXQcZhOgruoigqggECKBImJARj\nMAgSQSMuCMriCgooKiqCuCtGvP838Mz0Pd9dqutO19epud3v+zwkPT23q6brnN/tyaGWV22A\nxV619h8AbgMhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoIC\nIUGBkKBASFAgJCgQEhQICQqEBAVCgoIzCeniu3Z+vZn81ekvOvZ1+bmLiQ3fTRcPvII7nP7V\n1KdWG7/zCOlgCF+RkF7RWfPou1hS0sxXHf3tsxq/swjp/gF56MOycCC+85GQwoODcTYhvbLj\ndyYhjX/dPzz3P3Px4KMH/7t8B7p825wciHjBts7xxfEFQgq7IV0cHLk8hIdDsR2jTR7nnd/e\n3+hZjd85hBQDdXkQt4f/coDib/A7nx7HMo/w/itj4HZeL6Qw3rw2OdHjyO18sDcUe2O32fmS\n/S3EyJzL+J1HSPHBOFwX8Y/dz+9/sLuVzcQW9o69kPZc7Mzby39uj+HF7hHdG4HLUI5/7Wby\nN85m/M4wpOMf7f5gvzg8jPu/2tvCzo+xTYwWD+yGtH+8JgbmyOE8Mul3/oZxMJi5/fjDPFrj\ndx4hXYx/nxDSwRhvtr+13eAJAzGmDd+1TWhzckib3R9hrZAexfE7h5AuD87Bz//86ODvBdMD\ncXHsa/ZfJqR9h6OwyY+OhrTZ+RvabEibg20d7H7ziI7fmYR0sdkZkQzm+EG9OqQjW8htHfka\n9kI6OHKT/8FyNKRjR/3YcBzsfvOIjt9ZhLSJd5f9vzcc/Yl0cbE7jLGN3RfEZi8udl+/2f/F\nXbcNaRz7zWbnyO0cwt0DvFPYsS85ttFzGr/zCGkzfkrv5rTz/yNdfv7y/XFqIPIF27e93VC3\nX3Pz39rZ2Alpe7zio6n3uu1X5+v2tnJko+c1fmcS0jRznUfBGYd0+dN97T8HnHVI8VdqWNk5\nh7TREY+Ksw4JHhVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkK\nhAQFQoICIUGBkKBASFAgJChYHNJjLNQYxqu9h4Xmj7GQVrd0BOatPQ3P3/wxFtLqlo7AvLWn\n4fmbP8ZCWt3SEZi39jQ8f/PHWEirWzoC89aehudv/hgLaXVLR2De2tPw/M0fYyGtbukIzFt7\nGp6/+WMspNUtHYF5a0/D8zd/jIW0uqUjMG/taXj+5o+xkFa3dATmrT0Nz9/8MRbS6paOwLz6\nvHp6eCa897h4RW4kPv3scfnqJ49793DvuKeOe7hveP4YC2l1S0dg3vJy9gjpgJBWt3QE5i0v\nZ4+QDghpdUtHYN7ycvYI6YCQVrd0BOYtL2ePkA4IaXVLR2De8nLesxPP01HJ+8JzQ/YQs/qd\nIT49EVJO/HcNGdJEMRPfw7Wjmj/GQlrd0hGYJyQh3QFLR2CekIR0BywdgXlCEtIdsHQE5glJ\nSHfA0hGYV6knZ/jzwwfDB4ZczHtieGuIBjLSSO3nQ8z7E1YEY3snfFpIt8LSEZgnJCHdAUtH\nYJ6QhHQHLB2BeUK6KyH9e/ib4TWhsp8J3zfEfy8/d5O7DEtHYN7DTZpsII7Gr4WPDb8XPjrk\ngsDjQ277w8P7Q5yrkK/+yPBbIZLOhYxYmshIJ069EFKJkIQkpAIhCUlIBUISkpAKhCSk2xHS\nT4SXhx8Klf1MeN3wtXCTuwxLR2DeCfXEbPulEPF8PPz5cS8N7whvGiaW/n4xxLpehvTJ4S/C\nbw+/EN42ZDGxy/wuYzdCWkJIQhJSgZCEJKQCIQlJSAVCEtLtCCn975CDVN9PiJC+FeIclpvc\n+9IRmHdCSDGXcgkt1uE+E748/HWIWR0z+W1vHiaul8iQYu0tF9w+NeSbXcyQGK57sfcs5oXh\nl8P8At78MRbSY0ISkpAqhCQkIRUISUhCKhCSkG5fSJ8f/jnc5NlCEyHFJTD1XYalIzDv4ULK\nKRan8fx++OLwtyFW1vKWCHHSz6+EOP0ob/wQ8cSJPu+KM5H+JXxpyF3GWUm5ahdvEbd/1U5I\ndUISkpAKhCQkIRUISUhCKhDSXQzpE0PO6tcO9V3+6PA/4VaG9NRx946LSfhiiLWyfwifHrKB\nuIVJTNlnJnYZX5i3SolLoPL9Nd5283qkNwz5zcdbRC4azr/PzB9jIT0mJCEJqUJIQhJSgZCE\ndPtCiv8GfaVCCv8Ybk1IJ8QTt1jICRlXJuQ6QVzHkLM6FhvibIY3v2WY2OXErI47Sz4RZ038\nffiTIbcde88eYm4JSUgPTUhCElKBkIQkpAIhCUlIBUK6iyHFus7KIX12uMldLh2BeROzI6OK\nsw8ypLjzQob0V0OeZhALrrmRmOB5CkPM5Nx2vDrOT3g8bgr5d+ELQ97BMi7LyO84Vu3yTyKk\nPiEJSUgFQhKSkAqEJCQhFQhJSLckpBiB/wsrhPSfw03ucukIzDshpJi+eXbP24d4ruUH4uKF\nvIHCHw55LUYUc++4vKYhTgv62RCnCOUuvz7kczHifWFqP0FIfUISkpAKhCQkIRUISUhCKhCS\nkG5JSOE/wp8Nrw7tXf5u+ObwA6G9y6UjMG9+omRUGdLEjRbjwqNcQovLlOLOkh+NJbSfDvGO\nmat28eqfCbG9iOfrMUPiBKVPxiVQ+ZCKuLzq9q/aBSF1CElIQioQkpCEVCAkIQmpQEh3PKT8\nVmIB742hvcu4I+KH/3/Im3a0d7l0BOadEFKI64SefOK4WMD7y/DV4Y9CLJv9ZIh1vd8Jse18\nImrUHacFfeEbQ5yg9InHj4s/SY6okIR0EiEJSUgFQhKSkAqEdMdDSv895H/ftnfzI+Hl4S6F\nlKcCxJkN8aSB18XcjGtNPhunguSCwEtD3vIx0sjFhlgEyOxeP+SqQuwmn+8YZzbEHSPeEm8R\n+R3HffuFVCIkIQmpQEhCElKBkIQkpAIhCenOhBTPi/tiezffE2IRKp9L9/1DZZdLR2Dew4WU\nbxox82Imvz5W0+Lyho/FElqGFK947fGrYd4UPjTkEurzQ64IxsND/jXELvNikfh28u1CSEI6\niZCEtCWk6xOSkLaEdH1CEtKWkK5PSELaissocpC+d5j4wh8PcfeAPKEk7gGQD1f41nF/MFS+\ns6UjMO+EemIu5fUSsZoWk/DJWLWLef+huJVDPhEz1vXicRDPxSlCORhx88lcno3xj918KU7j\nyjH63BAFPh9XbuTFIvOHZ/4YC0lIQhKSkE4hJCFtCen6hCSkLSFdn5CEtBXDmEcszhbJ9aOv\nDHGiz8txUVM+PzFmThzqd35qyF1GjZXvbOkIzDshpFipe394ccgbRMZgZHZ/OvxbiMW8GJev\n/NOQj7SIT8ey6Vf/eMhThGLbcYuNb8azOfNWlXFJVd7KIRbwco1PSELaJSQhbQnp+oQkpC0h\nXZ+QhLQlpOsTkpC2fnDIc0H+67jPD3mrwniS4wm7fMNw60OKVbtcWYunSWZI8W6TEzJuYZLv\nU7EQ+rXjYpHtc7GRXMybeLOLxbxccI2TiOKmkO+NkHIjQhLSSYQkpC0hXZ+QhLQlpOsTkpDW\n9MPD7QnpqePiFTnzYvrm1RUxIfMuDHG7hY+EeCeL2ze89JtDvMG9I57SF0f62bhyI2/lELfz\nz4ctfmbItZOJB/kJ6WYJSUhCKhCSkIRUICQhCalASEISUsGtDGmiqYmXxLUGEc8TcRnFxOUI\n+QyIHxsyuzg9Ih/kF0/s+2D4qSFv+Rg3hcyQ4jyIODnjxViPzPeF+WMyf4yFNE1IQhJSgZCE\nJKQCIQlJSAVCEpKQCl495G0ifmOo7GbpCMybqOSEvmJWv/W4vIwi5n2sj707CswbKLwwRFNP\nHn/FC7GYl8uKEdKXQ6za/XqIKyomQpowf4yFNE1IQhJSgZCEJKQCIQlJSAVCEpKQuvJeA3Gt\nU2XbS0dg3sOFlOLkmZzs8emJNPK0m7jyJ691ile8McQqYE72aDfPHPr4EGcLfTpu3/GrIc5h\niguwph5BIaQ+IQnpakI6iZCEdDUhnURIQrqakE4iJCFdTUjTXjPEfQi/EVfaVHazdATmXT+k\nmG05q589LlLLE4ri9ii54BbFvD0c3/vTccpRvjoel5HnAsX6YS4rPtRKnZBahCQkIRUISUhC\nKhCSkIR0PpaOwLzrhxQypMghXxJp5H0j40yJE2Z1hJkrFhHSz4XYZSYdqwrPXLueMH+MhbS6\npSMw79rzJwnpSkJa3dIRmHft+ZOEdCUhrW7pCMy79vxJQrqSkFa3dATmXXv+JCFdSUirWzoC\n8649f6ZMnBUQ8z4/HRM8H58XTcW8f1+8Ojcy8QCMWCg84Q94bfPHWEirWzoC8ypzKQnpgJBW\nt3QE5lXmUhLSASGtbukIzKvMpSSkA0Ja3dIRmFeZS0lIB4S0uqUjMK8ylyY8dVx92/eOa+9y\nwvwxFtLqlo7AvJucYkK6T0irWzoC825yignpPiGtbukIzLvJKSak+4S0uqUjMO8mp5iQ7lsc\nEiAkqBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQI\nCQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoIC\nIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQ\nICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJ\nCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIh\nQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAg\nJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkK\nhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFB\ngZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAk\nKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqE\nBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGB\nkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQo\nEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQE\nBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQ\noEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQ\nEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQF\nQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCg\nQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBAS\nFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVC\nggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBA\nSFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIU\nCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKC\nAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBI\nUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQI\nCQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoIC\nIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQ\nICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJ\nCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIh\nQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAg\nJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkK\nhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFB\ngZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqEBAVCggIhQYGQoEBIUCAk\nKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGBkKBASFAgJCgQEhQICQqE\nBAVCggIhQYGQoEBIUCAkKBASFAgJCoQEBUKCAiFBgZCgQEhQICQoEBIUCAkKhAQFQoICIUGB\nkKBASFDwbYwOduib+ojWAAAAAElFTkSuQmCC",
      "text/plain": [
       "Plot with title “Reconstructed: Label 4”"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Lets plot the images to see if they still retain their features and look recognizeable\n",
    "\n",
    "par(mfrow = c(3, 2))  # Set up a grid for side-by-side plots\n",
    "for (i in 1:4) { # just going to do the first 4 rows\n",
    "  # Original image\n",
    "  original_image <- matrix(pixel_data[i, ], nrow = 28, ncol = 28, byrow = TRUE)\n",
    "  image(t(apply(original_image, 2, rev)), col = gray.colors(256), main = paste(\"Original: Label\", labels[i]), axes = FALSE)\n",
    "    # transpose the image to make sure it is in the correct orientation\n",
    "    \n",
    "  # Reconstructed image\n",
    "  reconstructed_image <- pca_result$x[i, 1:num_components] %*% t(pca_result$rotation[, 1:num_components])\n",
    "  # Project the i-th image onto the first num_components principal components \n",
    "  # and then transform it back to the original space using the transpose of the rotation matrix.\n",
    "    \n",
    "  reconstructed_image <- reconstructed_image + pca_result$center\n",
    "  # Add the PCA center back to the reconstructed image to restore its original scale.\n",
    "    \n",
    "  reconstructed_image <- matrix(reconstructed_image, nrow = 28, ncol = 28, byrow = TRUE)\n",
    "  # Reshape the reconstructed data back into a 28x28 matrix.\n",
    "    \n",
    "  image(t(apply(reconstructed_image, 2, rev)), col = gray.colors(256), main = paste(\"Reconstructed: Label\", labels[i]), axes = FALSE)\n",
    "  # rotate and label the image\n",
    "}\n",
    "\n",
    "# Looks good enought the reconstructed images"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37879b9a-56d7-46f6-b682-3b3327c605f9",
   "metadata": {},
   "source": [
    "\n",
    "2) Draw a tree of the pixels, and see if you can explain the results based on\n",
    "geometry of the pixels (how far apart are they in the 2-d space).\n",
    "Try to Explain the PCA results in light of this. \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "36f332c7-6a8d-4872-a1b8-4907f5ab398f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PCA Results\n",
      "Number of components to retain ~90% variance: 87 \n",
      "Clusters in dendrogram can indicate regions with similar variation in grayscale values, which aligns with PCA capturing variance across these correlated regions."
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAAACVBMVEX+/v4AAAD+/v5sl/vG\nAAAAA3RSTlP//wDXyg1BAAAACXBIWXMAABJ0AAASdAHeZh94AAAdDElEQVR4nO2di3bjuBEF\nI/3/RycZP9QkKEMAL4nbQNVJZk1LbJawqB2btmf+8wSA0/xntADADBASgABCAhBASAACCAlA\nACEBCCAkAAGEBCCAkAAEEBKAAEICEEBIAAIICUAAIQEIICQAAYQEIICQAAQQEoAAQgIQQEgA\nAggJQAAhAQggJAABhAQggJAABBASgABCAhBASAACCAlAACEBCCAkAAGEBCCAkAAEEBKAAEIC\nEEBIAAIICUAAIQEIICQAAYS04/E/Xm9u33FqWn1S8fjj8XrXGY3ec7dr8Qg6zS9leghpByEd\nnkdIFQhph09I2717Zuv2vYSYcZD5aFEIaXlcQooFNZ/c8FiDTtAipD2EtKMISTWt8cmbD+o+\nmKTfun/qtJy7BIS044/fkbafIWz+C719Z/HMt5PKCcV7Nxr7Sb8fbIUPAkvPcO527qPY8fvJ\nj/37n8Hj/esqBWeHkHa8C+kRdtZ++7555+btRznpaOyBRnzH9plh0p9KBy67o9c19nMKn+Dx\nxuZQcHYIacd28zwJae8TPN7YHArODiHteGx47nbLZpOVH3UVm+zgXcXB/l2/GoXX2xHh5CPP\nA5ft+46u8Tx46HDIuysffOg3MYS0401IYbfsd8ajeEax/w52V3HN7pAOrrTzrHa3vebR/j9c\nlJf68ZWXKOgbQtoR/uXvN97vPto+52RIh2M/Dmm/tQ89pSHt9OIb+yvvTpoaQtrRFNLX8ZmQ\njia83n+o8dwL7B+5KqSjVdq29WaFViiJkHb8EVLxnOrWrIZ0OGHn8VdIzw8euTCkf/+oPp2Q\nVuRNSIctvI72/xH+a/OWj+8n/Ex5vCz+eP47pz9D2k7avPajxj4I6c3rKs+dE0LaQUiE1AMh\n7fgrpMdux38fH4S0e2ZxEB8vJzyLOZuNvz15M/W951FIYfzbK5bLUp9Y2sr+9dhCSDvCv/bN\nNnnuUvl94xF+LYZsttrBpLcTXg9uT9k887F/woHe65/bbb/77eT45TeF9OZ1L5ERIa3OKvv8\ncghpUfa/ScI5CGlRVvr85Q4IaVEISQshrQsVCSEkAAGEBCCAkAAEEBKAAEICEEBIAAIICUAA\nIQEIICQAAYQEIICQAAQQEoAAQgIQQEgAAggJQAAhAQggJAABhAQggJAABBASgABCAhBASAAC\nCAlAACEBCCAkAAGEBCCAkAAEEBKAAEICEEBIAAIICUAAIQEIICQAAYQEIICQAAQQEoCAG0Li\nL/yF+SEkAAGEBCCAkAAEEBKAAEICEEBIAAIICUAAIQEIICQAAYQEIICQAAQQEoAAQgIQQEgA\nAggJQAAhAQggJAABhAQggJAABBASgABCAhBASAAClgvpAecZ/S/RkPVCGi0wAaxhCSFBM6xh\nCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xh\nCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xh\nCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xh\nCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xh\nCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xh\nCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xh\nCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xh\nCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xh\nCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xh\nCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xh\nCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFBM6xhCSFNySM1o1evB0KaktSvMqU8\nIU1J6leZUp6QpiT1q0wpfyKkTz+g9VoXL5urSP0qU8p3h/T554Ze6+JlcxWpX2VK+d6QXv1U\nS/JaFy+bq0j9KlPK94d09ObxUzsvcQ1eNleR+lWmlCekKUn9KlPK86HdlKR+lSnludkwJalf\n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\nQ65w94XecBySNCVCcp1GSDo2t7+/fn2Ib4QTkus0QtLx5kfNlSURkus0QtJBSBdfiZDugZBu\nHDLiSoR0D1YhPX7+wedIpuOs5cZc4e4LveHoB/u42WA7zlpuzBXuvtAbtl+QveRnvQjJdRoh\n6eA7Gy6+EiHdAyHdOGTElQjpHkxC+v4rYfnub/O9ai035gp3X+gNhHTxlQjpHkxCuhJCcp1G\nSDoI6eIrEdI9WIWk/xrSv6k2Q0ZciZDuwSmkC74Y+2+szZARVyKkezAK6V9FT31JhOQ6jZB0\nENLFVyKkeyCkG4eMuNISId315453XeeerVOGxNeRjMeZynVFcdM5N22d4+/+lkJIrtMIScf+\n9vcFvxMSkus0QtLBF2QvvhIhDT6HkPRDRlyJkAafQ0j6ISOuREiDz7k3pCvvFxKS6zRC0kFI\nF1+JkAafM+au3RWXICTXaYSkg5AuvhIhDT6HkPRDRlyJkAafQ0j6ISOuREiDzyEk/ZARVyKk\nwecsGFLf9/aq7zKa7tUrphGSDquQrr7AgGlryBGS1deRCOnmaYSkg5CunbaGHCFZfa8dId08\njZB0ENK109aQIyRCunjaGnKEREgXT1tDjpAI6eJpa8gREiFdPG0NOUIipIunrSFHSIR08bQ1\n5AiJkC6etoYcIRHSxdPWkCMkQrp42hpyhERIF09bQ46QCOniaWvIERIhXTxtDTlCIqSLp60h\nR0iEdPG0NeQIiZAunraGHCER0sXT1pAjJEK6eNoacoRESBdPW0OOkAjp4mlryBESIV08bQ05\nQiKki6etIUdIhHTxtDXkCImQLp62hhwhEdLF09aQIyRCunjaGnKEREgXT1tDjpAI6eJpa8gR\nEiFdPG0NOUJKF5L4b/EbM20Gue1s43MI6dSwT3fXiKdNIZfmHEI6NWyGvWotl+YcQjo1bIa9\nai2X5hxCOjVshr1qLZfmHEI6NWyGvWotl+YcQjo1bIa9ai2X5hxCOjVshr1qLZfmHEI6NWyG\nvWotl+YcQjo1bIa9ai2X5hxCOjVshr1qLZfmHEI6NWyGvWotl+YcQjo1bIa9ai2X5hxCOjVs\nhr1qLZfmHEI6NWyGvWotl+YcQjo1bIa9ai2X5hxCOjVshr1qLZfmHEI6NWyGvWotl+YcQjo1\nbIa9ai2X5hxCOjVshr1qLZfmHEI6NWyGvWotl+YcQjo1bIa9ai2X5hxCOjVshr1qLZfmnHVC\navojoVbaq9Zyac5ZKKSWU1baq9Zyac4hpK5hjc+z3qvWcmnOIaSuYY3Ps96r1nJpziGkrmGN\nz7Peq9Zyac4hpK5hjc+z3qvWcmnOIaSuYY3Ps96r1nJpziGkrmGNz7Peq9Zyac4hpK5hjc+z\n3qvWcmnOIaSuYY3Ps96r1nJpzvEP6dO/l4qQLK5KSJfSHdLnf8UbIVlclZAupTekVz/VkgjJ\n4qqEdCn9IR29efzU2qiWU1baq9Zyac4hpK5hjc+z3qvWcmnOsQ+JD+16nzaFXJpzzEPiZkP/\n06aQS3OOe0hPbn/3Pm0KuTTn+If0KYRkcVVCupSLQvrs58a/n/vRu6qPdD3Peq9ay6U5J3dI\nkbtCOvqzH/r/CIjbpmWVG3+O9kInmSmklI8YKCAn4MTt708rJ6S02gYKhPR6am1UyylJ/6Un\n1TZQmD2k6vczhGe2P26wrkm3A3Ld485BSIMfMVBATgAhDX7EQAE5Ady1G/yIgQJyAghp8CMG\nCsgJIKTBjxgoICeAkAY/YqCAnABCGvyIgQJyAghp8CMGCsgJIKTBjxgoICeAkAY/YqCAnABC\nGvyIgQJyAghp8CMGCsgJIKTBjxgoICeAkAY/YqCAnABCGvyIgQJyAghp8CMGCsgJIKTBjxgo\nICeAkAY/YqCAnABCGvyIgQJyAghp8CMGCsgJIKTBjxgoICeAkAY/YqCAnABCGvyIgQJyAghp\n8CMGCsgJIKTBjxgoICeAkAY/YqCAnAC3kN7/HRxjHjFQ+OwRA4WschLsQvI6MFCYwdRA4Q85\nCYT054GBwgymBgqENPTAQGEGUwMFQhp6YKAwg6mBAiENPTBQmMHUQIGQhh4YKMxgaqBASEMP\nDBRmMDVQIKShBwYKM5gaKBDS0AMDhRlMDRQIaeiBgcIMpgYKhDT0wEBhBlMDBUIaemCgMIOp\ngQIhDT0wUJjB1ECBkIYeGCjMYGqgQEhDDwwUZjA1UCCkoQcGCjOYGigQ0tADA4UZTA0UCGno\ngYHCDKYGCoQ09MBAYQZTAwVCGnpgoDCDqYECIQ09MFCYwdRAgZCGHhgozGBqoEBIQw8MFGYw\nNVAgpKEHBgozmBooENLQAwOFGUwNFAhp6IGBwgymBgqENPTAQGEGUwMFQhp6YKAwg6mBAiEN\nPTBQmMHUQIGQhh4YKMxgaqBASEMPDBRmMDVQIKShBwYKM5gaKBDS0AMDhRlMDRQIaeiBgcIM\npgYKhDT0wEBhBlMDBUIaemCgMIOpgQIhDT0wUJjB1ECBkIYeGCjMYGqgQEhDDwwUZjA1UCCk\noQcGCjOYGigQ0tADA4UZTA0UCGnogYHCDKYGCoQ09MBAYQZTAwVCGnpgoDCDqYECIQ09MFCY\nwdRAYfKQHt+UB89LDg4udPoA08SmMkaHFP/xqL3v9AFDGbp7nwpCYujKQ2UQEkNXHiqDkBi6\n8lAZhMTQlYfKICSGrjxUBiExdOWhMgiJoSsPlUFIDF15qAxCYujKQ2UQEkNXHiqDkBi68lAZ\nhMTQlYfKICSGrjxUxtiQvr6b/fH6x8cHz08OVHMYmmRo8y7SMTikn/+93vrw4M7nMDTJ0PYL\n6yAkhk4ztP3COgiJodMMbb+wDkJi6DRD2y+sg5AYOs3Q9gvrICSGTjO0/cI6CImh0wxtv7AO\nQmLoNEPbL6yDkBg6zdD2C+sgJIZOM7T9wjoIiaHTDG2/sA5CYug0Q9svrIOQGDrN0PYL6yAk\nhk4ztP3COgiJodMMbb+wDkJi6DRD2y+sg5AYOs3Q9gvrICSGTjO0/cI6CImh0wxtv7AOQmLo\nNEPbL6yDkBg6zdD2C+sgJIZOM7T9wjoIiaHTDG2/sI6hIT1+eP773+ut5/7d7w8+OWHY0IPn\nLD60eM7QoULGhvTzGne/VN7TfMKwoZndV1gQIYS00L4ZP9TMXQghLbRvxg81cxdCSAvtm/FD\nzdyFENJC+2b8UDN3ISNDegCMRLnLCQmWRbnLCQmWRbnLCQmWRbnLCQmWRbnLCQmWRbnLCQmW\nRbnLCQmWRbnLCQmWRbnLT4T0qQ0hgSf9e7+kO6TPfQgJPOnd+0f0hvTSqAoREnjSufcP6Q/p\n6M3jp76fATCQzr1/yEUhfeQ7aPkAvujc+4fc8KHdXzMAxtG5bw+54WbDJyMA7qd34x5xw+3v\n2gCAMfRv3ZIbviD7ltHrCIuj3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui\n3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui\n3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui\n3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui3MyEBMui\n3MwjQwKYBkICEEBIAAIICUAAIQEIICQAAYQEIICQAAQQEoAAQgIQQEgAAggJQAAhAQggJAAB\nhAQggJAABBASgABCAhBASAACCAlAACEBCCAkAAGEBCCAkAAEEBKAAEICEEBIAAIICUAAIQEI\nICQAAYQEIICQAAQQEoAAQgIQQEgAAggJQAAhAQggJAABhAQggJAABBASgABCAhBASAACCAlA\nACEBCCAkAAGEBCCAkAAEEBKAAEICEEBIAAIICUAAIQEIICQAAYQEIICQAAQQEoAAQgIQQEgA\nAggJQAAhAQggJAABhAQggJAABBASgABCAhBASAACCAlAACEBCCAkAAGEBCCAkAAEEBKAAEIC\nEEBIAAIICUAAIQEIICQAAYQEIICQAAQQEoAAQgIQQEgAAggJQAAhAQggJAABhAQggJAABBAS\ngABCAhBASAACCAlAACEBCCAkAAGEBCCAkAAEEBKAAEICEEBIAAIICUAAIQEIICQAAYQEIICQ\nAAQQEoAAQgIQQEgAAggJQAAhAQggJAABhAQggJAABBASgABCAhBASF48vvl6+91zyreOH4fb\nICQvHqEkQkoEIXnxHcHjrxgIyRBC8uInAkJKBiF5EUP6+f/r1/3nTj8fAf488vXG0bOJ62II\nyYv4od3X/39+eR587hTef/zmczMBroOQvChuNvz+tvT6naUMKT75FeF+AlwIIXlR3v4uP0Qr\nP7TbPvDuQ0K4EELyIm750MUzJvZZSK8g+f3oBgjJi79CKp9T+x3pYChcAyF5UYb05l7d661q\nSHxodwOE5EURUrjZUN452IW0udlQ3q6ACyEkL/YhFbe/KyHt74Rz+/smCMmLMqTXe99/QXb7\nFL4gOwBCAhBASAACCAlAACEBCCAkAAGEBCCAkAAEEBKAAEICEEBIAAII6R6OvkXnk2/beYRf\nw3kd3/Hz5ylfI/k2on4I6R5aQgrv//pmuud2j0tC2h5+h0RJ3RDSPfSF9Pr201tCoqR+COke\nzoR0yYd2hKSFkO7hsfvD57Y/cRd/8KH8sxbe/Y70KCa+LvO6xOEfpbL5saXNyCsXYWYI6R6O\nf+Tu4KfyjkJ6Ht4HOJj4e5nwU30x2+f2/Ztq4xWhGUK6h92Pfj/LkHZPeG7eOB559Ev89c1P\nnO+vtL+5AR0Q0j3sgnluj8r3b994PzG8VX6kWDxESJdBSPfwSUjFj5JfENLRR3qEJICQ7qEe\n0vYmRDjpz4nhrY9/R3qdVFyAkHohpHv4JKTnfnsTUh4I6R6OPjsJtxgqNxvejzz6Zfvx4vaK\nx/cmdprQDiHdwyakze3v8k70/vb3ZkQ8Prr9vb3Ym0+Kfi/C50gqCOke3n4u9P21o2fo5/lZ\nSM9XA7v7FJsP7fYPbS+y/TISIXVDSM7sSjo7QP10eEFIzhBSGgjJmrizezZ5Wxl01A8heXNy\nazeGdO5iS0NIAAIICUAAIQEIICQAAf8Fzum27XtFpG0AAAAASUVORK5CYII=",
      "text/plain": [
       "Plot with title “Hierarchical Clustering of Pixels”"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# going to do hierarchical clustering\n",
    "# Tree of pixels\n",
    "coords <- expand.grid(x = 1:28, y = 1:28)  # Pixel coordinates in 28x28 grid\n",
    "pixel_distances <- dist(coords)            # Compute Euclidean distances between pixels\n",
    "hc <- hclust(pixel_distances, method = \"complete\")  # Perform hierarchical clustering\n",
    "# Plot dendrogram\n",
    "plot(hc, labels = FALSE, main = \"Hierarchical Clustering of Pixels\", xlab = \"Pixel Index\", ylab = \"Height\")\n",
    "# Analyze clustering in light of PCA\n",
    "cat(\"PCA Results\\n\")\n",
    "cat(\"Number of components to retain ~90% variance:\", num_components, \"\\n\")\n",
    "cat(\"Clusters in dendrogram can indicate regions with similar variation in grayscale values, which aligns with PCA capturing variance across these correlated regions.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "853d5386-4643-491d-9e57-60f3c0ff1dba",
   "metadata": {},
   "source": [
    "Pixels that merge at higher levels in the tree are more likely to be similar to each other in terms of their geometric properties, such as spatial distance in the 2D space, forming similar clusters. The number of clusters you obtain depends on the height at which you cut the tree. In the context of PCA, this clustering reflects how the variance captured by the principal components corresponds to the spatial grouping of the pixels. If pixels are close in space, they will likely project similarly onto the principal components, resulting in them being grouped together at higher tree levels."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15380813-0799-48ac-b816-26485159fb4f",
   "metadata": {},
   "source": [
    "3) Can you use some of the tools you have learnt to build a classifier,\n",
    "so if you get a new set of pixels you can predict what is in the\n",
    "picture. This is a the start of a real project, but you don't have all the tools\n",
    " (such as neural networks) which might be more suited for this task.\n",
    "Split your dataset into two (a training set and a test set),\n",
    "build your classifier and figure out\n",
    "how well it does with the test data in predicting the digits. \n",
    "Define the sensitivity and specificity of your classifier.\n",
    "How well does it recognize your own handwriting\n",
    "(make sure your handwriting is not in the training set)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "196a0801-ac95-4af3-b756-b1efbf3e3188",
   "metadata": {},
   "source": [
    "https://www.geeksforgeeks.org/random-forest-approach-in-r-programming/\n",
    "\n",
    "I will use built in random forest approach in R for my classifier\n",
    "- this uses a bootstrap sample to grow a decision tree\n",
    "- can pick how many decision trees (which is important because the training set is so large, we need to be efficient)\n",
    "- I can apply my PCA dataset to reduce the number of features and speed up computation\n",
    "\n",
    "Will be basing my code off the geeksforgeeks website I linked above"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "e561c399-39ee-4a77-b7f6-e6c33cbee3f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#going to use PCA reduced results for this because it will run faster\n",
    "# split dataframe in half into training and test sets\n",
    "split_index <- nrow(reduced_matrix) / 2\n",
    "\n",
    "# Training data\n",
    "train_reduced <- reduced_matrix[1:split_index, ]\n",
    "train_labels <- train_data[1:split_index, 1]  # Labels are in the first column of the original dataset\n",
    "\n",
    "# Test data\n",
    "test_reduced <- reduced_matrix[(split_index + 1):nrow(reduced_matrix), ]\n",
    "test_labels <- train_data[(split_index + 1):nrow(reduced_matrix), 1]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "59fde6d1-efcd-4a84-8c59-945e0e6bdd8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# train the Random Forest on the PCA-reduced training set\n",
    "library(randomForest)\n",
    "rf_model <- randomForest(x = train_reduced, y = as.factor(train_labels), ntree = 1000, importance = TRUE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "df62afaa-d4b1-4102-8d45-c61ac585d172",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Evaluate on the PCA-reduced test set\n",
    "rf_predictions <- predict(rf_model, test_reduced)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "1c15deaf-5bf8-444c-8d3f-2e87fc6c2401",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Confusion Matrix and Statistics\n",
      "\n",
      "          Reference\n",
      "Prediction    0    1    2    3    4    5    6    7    8    9\n",
      "         0 2043    0   13    1    4   10   23    7    9   10\n",
      "         1    0 2260    2    4   10    1    5    8   20    7\n",
      "         2    4   12 1930   34   20    4    7   22   18    7\n",
      "         3    6   12   25 1992    1   55    2    0   58   40\n",
      "         4    4    2   11    3 1864   15    7   18   18   71\n",
      "         5    2    5    4   38    1 1756   19    0   40   13\n",
      "         6   19    6   10    8   23   27 1997    0   12    0\n",
      "         7    0    4   20   22    7    4    0 2124    6   41\n",
      "         8    7   11   52   52   10   13    2    7 1853   21\n",
      "         9    3    0    2   20   57   12    0   48   24 1899\n",
      "\n",
      "Overall Statistics\n",
      "                                          \n",
      "               Accuracy : 0.939           \n",
      "                 95% CI : (0.9356, 0.9422)\n",
      "    No Information Rate : 0.1101          \n",
      "    P-Value [Acc > NIR] : < 2.2e-16       \n",
      "                                          \n",
      "                  Kappa : 0.9321          \n",
      "                                          \n",
      " Mcnemar's Test P-Value : NA              \n",
      "\n",
      "Statistics by Class:\n",
      "\n",
      "                     Class: 0 Class: 1 Class: 2 Class: 3 Class: 4 Class: 5\n",
      "Sensitivity           0.97845   0.9775  0.93282  0.91628  0.93340  0.92567\n",
      "Specificity           0.99593   0.9969  0.99324  0.98943  0.99216  0.99361\n",
      "Pos Pred Value        0.96368   0.9754  0.93780  0.90917  0.92598  0.93504\n",
      "Neg Pred Value        0.99762   0.9972  0.99266  0.99032  0.99300  0.99263\n",
      "Prevalence            0.09943   0.1101  0.09852  0.10352  0.09510  0.09033\n",
      "Detection Rate        0.09729   0.1076  0.09190  0.09486  0.08876  0.08362\n",
      "Detection Prevalence  0.10095   0.1103  0.09800  0.10433  0.09586  0.08943\n",
      "Balanced Accuracy     0.98719   0.9872  0.96303  0.95286  0.96278  0.95964\n",
      "                     Class: 6 Class: 7 Class: 8 Class: 9\n",
      "Sensitivity           0.96848   0.9508  0.90039  0.90043\n",
      "Specificity           0.99446   0.9945  0.99076  0.99121\n",
      "Pos Pred Value        0.95005   0.9533  0.91371  0.91961\n",
      "Neg Pred Value        0.99656   0.9941  0.98919  0.98891\n",
      "Prevalence            0.09819   0.1064  0.09800  0.10043\n",
      "Detection Rate        0.09510   0.1011  0.08824  0.09043\n",
      "Detection Prevalence  0.10010   0.1061  0.09657  0.09833\n",
      "Balanced Accuracy     0.98147   0.9726  0.94557  0.94582\n"
     ]
    }
   ],
   "source": [
    "# Confusion Matrix to evaluate performance\n",
    "library(caret)\n",
    "conf_matrix_rf <- confusionMatrix(rf_predictions, as.factor(test_labels))\n",
    "print(conf_matrix_rf)\n",
    "\n",
    "#this looks to be around 93.9% accurate! which is not too bad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "0b5241de-bda3-4547-b8fd-82526123d6d2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Class: 0  Class: 1  Class: 2  Class: 3  Class: 4  Class: 5  Class: 6  Class: 7 \n",
      "0.9841954 0.9865917 0.9565007 0.9273229 0.9589384 0.9525567 0.9772066 0.9606088 \n",
      " Class: 8  Class: 9 \n",
      "0.9426628 0.9336178 \n",
      " Class: 0  Class: 1  Class: 2  Class: 3  Class: 4  Class: 5  Class: 6  Class: 7 \n",
      "0.9964573 0.9972710 0.9949818 0.9939445 0.9961059 0.9958645 0.9966734 0.9957903 \n",
      " Class: 8  Class: 9 \n",
      "0.9938760 0.9926420 \n"
     ]
    }
   ],
   "source": [
    "# Sensitivity and Specificity\n",
    "rf_sensitivity <- conf_matrix_rf$byClass[, \"Sensitivity\"]\n",
    "rf_specificity <- conf_matrix_rf$byClass[, \"Specificity\"]\n",
    "\n",
    "print(rf_sensitivity)\n",
    "print(rf_specificity)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c99013e5-dfae-43b2-8722-8909d88558fd",
   "metadata": {},
   "source": [
    "The model performs very well across most digits, with high sensitivity, specificity, and precision. Performance is slightly lower for certain digits (e.g., \"8\" and \"9\"), which have balanced accuracies around 94.5%. This could be due to their similarity to other digits (e.g., \"8\" resembling \"3\" or \"9\"). Misclassifications are spread across the digits but are minimal compared to the correct predictions (as indicated by the strong diagonal dominance in the confusion matrix)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "f9477df6-1269-4e13-857d-073576662620",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>42000</li><li>785</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 42000\n",
       "\\item 785\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 42000\n",
       "2. 785\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] 42000   785"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Lets try this with the original not reduced dataset and see how it compares\n",
    "# Split data into training set and test set\n",
    "# Determine the split index (halfway point)\n",
    "split_index <- nrow(train_data) / 2\n",
    "\n",
    "# Split the data into training and test sets\n",
    "training_data <- train_data[1:split_index, ]  # First half for training\n",
    "test_data <- train_data[(split_index + 1):nrow(train_data), ]  # Second half for testing\n",
    "\n",
    "dim(train_data) #there are 42,000 rows, need to be smart about how to manage that much data\n",
    "\n",
    "# Separate labels (digits) and pixel features for training set\n",
    "train_labels <- training_data[, 1]   # Labels: first column\n",
    "train_pixels <- training_data[, -1]  # Features: all columns except the first\n",
    "\n",
    "# Separate labels (digits) and pixel features for test set\n",
    "test_labels <- test_data[, 1]        # Labels: first column\n",
    "test_pixels <- test_data[, -1]       # Features: all columns except the first"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "41fa88fa-017a-47b0-b636-73104a6aa7ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load necessary library\n",
    "library(randomForest)\n",
    "library(caret)\n",
    "\n",
    "# train the Random Forest Classifier\n",
    "# Set a smaller number of trees for faster training (100 trees)\n",
    "rf_model <- randomForest(x = train_pixels, y = as.factor(train_labels), ntree = 100, importance = TRUE)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "3cf0602f-f7a3-459c-82b1-3a10357bd0e1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Confusion Matrix and Statistics\n",
      "\n",
      "          Reference\n",
      "Prediction    0    1    2    3    4    5    6    7    8    9\n",
      "         0 2055    0   13    4    6    8   14    5    6   11\n",
      "         1    0 2281    3    7    3    4    5    5   17    7\n",
      "         2    2   10 1979   41    1    1    3   18   10    9\n",
      "         3    1    7   20 2016    0   33    0    3   16   34\n",
      "         4    3    3    9    1 1915    4    3   11   10   30\n",
      "         5    2    2    3   25    0 1807   16    1   24    6\n",
      "         6   14    2    9    3   16   13 2015    0    6    0\n",
      "         7    0    5   13   29    2    0    0 2146    3   27\n",
      "         8   10    2   19   35    8   16    6    4 1940   16\n",
      "         9    1    0    1   13   46   11    0   41   26 1969\n",
      "\n",
      "Overall Statistics\n",
      "                                          \n",
      "               Accuracy : 0.9582          \n",
      "                 95% CI : (0.9554, 0.9609)\n",
      "    No Information Rate : 0.1101          \n",
      "    P-Value [Acc > NIR] : < 2.2e-16       \n",
      "                                          \n",
      "                  Kappa : 0.9536          \n",
      "                                          \n",
      " Mcnemar's Test P-Value : NA              \n",
      "\n",
      "Statistics by Class:\n",
      "\n",
      "                     Class: 0 Class: 1 Class: 2 Class: 3 Class: 4 Class: 5\n",
      "Sensitivity           0.98420   0.9866  0.95650   0.9273  0.95894  0.95256\n",
      "Specificity           0.99646   0.9973  0.99498   0.9939  0.99611  0.99586\n",
      "Pos Pred Value        0.96843   0.9781  0.95419   0.9465  0.96280  0.95811\n",
      "Neg Pred Value        0.99825   0.9983  0.99524   0.9916  0.99569  0.99529\n",
      "Prevalence            0.09943   0.1101  0.09852   0.1035  0.09510  0.09033\n",
      "Detection Rate        0.09786   0.1086  0.09424   0.0960  0.09119  0.08605\n",
      "Detection Prevalence  0.10105   0.1110  0.09876   0.1014  0.09471  0.08981\n",
      "Balanced Accuracy     0.99033   0.9919  0.97574   0.9606  0.97752  0.97421\n",
      "                     Class: 6 Class: 7 Class: 8 Class: 9\n",
      "Sensitivity           0.97721   0.9606  0.94266  0.93362\n",
      "Specificity           0.99667   0.9958  0.99388  0.99264\n",
      "Pos Pred Value        0.96968   0.9645  0.94358  0.93406\n",
      "Neg Pred Value        0.99752   0.9953  0.99377  0.99259\n",
      "Prevalence            0.09819   0.1064  0.09800  0.10043\n",
      "Detection Rate        0.09595   0.1022  0.09238  0.09376\n",
      "Detection Prevalence  0.09895   0.1060  0.09790  0.10038\n",
      "Balanced Accuracy     0.98694   0.9782  0.96827  0.96313\n"
     ]
    }
   ],
   "source": [
    "# Evaluate on Test Data\n",
    "# Predict labels for the test data\n",
    "rf_predictions <- predict(rf_model, test_pixels)\n",
    "\n",
    "# Confusion matrix to evaluate performance\n",
    "conf_matrix_rf <- confusionMatrix(rf_predictions, as.factor(test_labels))\n",
    "\n",
    "# Print the confusion matrix\n",
    "print(conf_matrix_rf)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6f3c8c0b-ea94-4a55-9b4a-1e734aa407a6",
   "metadata": {},
   "source": [
    "With the whole data set it looks to be around 95% accurate. There are some common misclassifications like: Class 3 has a noticeable number of misclassifications as class 2 or class 9. Class 8 also has some overlap with class 9. Overall it performs much better (~4%) with Class 8 and Class 9 then running the random forest on the PCA reduced set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "f2be3e03-15ba-42e0-8e4f-db033c0049ec",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Class: 0  Class: 1  Class: 2  Class: 3  Class: 4  Class: 5  Class: 6  Class: 7 \n",
      "0.9841954 0.9865917 0.9565007 0.9273229 0.9589384 0.9525567 0.9772066 0.9606088 \n",
      " Class: 8  Class: 9 \n",
      "0.9426628 0.9336178 \n",
      " Class: 0  Class: 1  Class: 2  Class: 3  Class: 4  Class: 5  Class: 6  Class: 7 \n",
      "0.9964573 0.9972710 0.9949818 0.9939445 0.9961059 0.9958645 0.9966734 0.9957903 \n",
      " Class: 8  Class: 9 \n",
      "0.9938760 0.9926420 \n"
     ]
    }
   ],
   "source": [
    "# Compute Sensitivity and Specificity\n",
    "# Extract sensitivity and specificity\n",
    "rf_sensitivity <- conf_matrix_rf$byClass[, \"Sensitivity\"]\n",
    "rf_specificity <- conf_matrix_rf$byClass[, \"Specificity\"]\n",
    "\n",
    "print(rf_sensitivity)\n",
    "print(rf_specificity)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "fec8aef3-e5a5-4c9a-8d7b-7334fd1a5236",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V11 V12 V13 V14 V15 V16 V17 V18 V19 V20 V21\n",
      "1    0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "2    0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "3    0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "4    0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "5    0  0  0  0  0  0  0  0  0   0   1   1   1   1   1   1   0   0   0   0   0\n",
      "6    0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   1   0   0   0   0\n",
      "7    0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "8    0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "9    0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "10   0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "11   0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "12   0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "13   0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "14   0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "15   0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "16   0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "17   0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "18   0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "19   0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "20   0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "21   0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "22   0  0  0  0  0  0  0  0  0   1   1   1   1   1   1   1   1   0   0   0   0\n",
      "23   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "24   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "25   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "26   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "27   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "28   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "29   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "30   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "31   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "32   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "33   0  0  0  0  0  0  0  0  0   0   0   0   0   1   1   1   0   0   0   0   0\n",
      "34   0  0  0  0  0  0  0  0  0   0   0   0   1   0   0   1   0   0   0   0   0\n",
      "35   0  0  0  0  0  0  0  0  0   0   0   1   0   0   0   1   0   0   0   0   0\n",
      "36   0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   1   0   0   0   0   0\n",
      "37   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "38   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "39   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "40   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "41   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "42   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "43   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "44   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "45   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "46   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "47   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "48   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "49   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "50   0  0  0  0  0  0  0  0  0   1   1   1   1   1   1   1   1   1   1   1   1\n",
      "51   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "52   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "53   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "54   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "55   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "56   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "57   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "58   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "59   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "60   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "61   0  0  0  0  0  0  0  0  0   0   0   0   1   1   1   1   1   0   0   0   0\n",
      "62   0  0  0  0  0  0  0  0  0   0   0   1   0   0   0   0   0   1   0   0   0\n",
      "63   0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   0   0   1   0   0\n",
      "64   0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   0   0   1   0\n",
      "65   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "66   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "67   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "68   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "69   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "70   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "71   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   1   0   0   0   0\n",
      "72   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   1   0   0   0   0\n",
      "73   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "74   0  0  0  0  0  0  0  0  0   0   0   0   0   1   1   0   0   0   0   0   0\n",
      "75   0  0  0  0  0  0  0  0  0   0   0   0   1   1   0   0   0   0   0   0   0\n",
      "76   0  0  0  0  0  0  0  0  0   0   0   1   0   0   0   0   0   0   0   0   0\n",
      "77   0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   0   0   0   0   0\n",
      "78   0  0  0  0  0  0  0  0  0   1   1   0   0   0   0   0   0   0   0   0   0\n",
      "79   0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "80   0  0  0  0  0  0  0  0  1   1   1   1   1   1   1   1   1   1   1   1   1\n",
      "81   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "82   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "83   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "84   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "85   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "86   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "87   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "88   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "89   0  0  0  0  0  0  0  0  0   1   1   1   1   1   1   1   1   1   1   1   0\n",
      "90   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "91   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   1   1   0\n",
      "92   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   1   0   0\n",
      "93   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "94   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   1   0   0   0   0\n",
      "95   0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   0   0   0   0   0\n",
      "96   0  0  0  0  0  0  0  0  0   0   0   0   0   0   1   0   0   0   0   0   0\n",
      "97   0  0  0  0  0  0  0  0  0   0   0   0   0   1   0   0   0   0   0   0   0\n",
      "98   0  0  0  0  0  0  0  0  0   0   0   0   1   0   0   1   1   1   0   0   0\n",
      "99   0  0  0  0  0  0  0  0  0   0   0   1   1   1   1   0   0   0   1   0   0\n",
      "100  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "101  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "102  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   1\n",
      "103  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "104  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "105  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "106  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "107  0  0  0  0  0  0  0  0  1   1   0   0   0   0   0   0   0   1   1   0   0\n",
      "108  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   1   1   0   0   0\n",
      "109  0  0  0  0  0  0  0  0  0   0   1   1   1   1   1   1   0   0   0   0   0\n",
      "110  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "111  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "112  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "113  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "114  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "115  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "116  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "117  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "118  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "119  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "120  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "121  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "122  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "123  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "124  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "125  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "126  0  0  0  0  0  0  0  0  1   1   1   1   1   1   1   1   1   1   0   0   0\n",
      "127  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "128  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "129  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "130  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "131  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "132  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "133  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "134  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "135  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "136  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "137  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "138  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "139  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "140  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "141  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "142  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "143  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "144  0  0  0  0  0  0  0  0  0   1   1   1   1   1   1   1   1   1   1   0   0\n",
      "145  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   0   0   0   0\n",
      "146  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   0   0   0   0\n",
      "147  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   0   0   0   0\n",
      "148  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   0   0   0   0\n",
      "149  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   0   0   0   0\n",
      "150  0  0  0  0  0  0  0  0  0   1   0   0   1   1   1   1   1   0   0   0   0\n",
      "151  0  0  0  0  0  0  0  0  0   1   0   1   0   0   0   0   0   1   0   0   0\n",
      "152  0  0  0  0  0  0  0  0  0   1   1   0   0   0   0   0   0   0   1   0   0\n",
      "153  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "154  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "155  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "156  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "157  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "158  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "159  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "160  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "161  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   1   0   0   0\n",
      "162  0  0  0  0  0  0  0  0  0   0   1   1   1   1   1   1   1   0   0   0   0\n",
      "163  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "164  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "165  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "166  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "167  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "168  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "169  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "170  0  0  0  0  0  0  0  0  0   0   0   1   1   1   1   0   0   0   0   0   0\n",
      "171  0  0  0  0  0  0  0  0  0   0   0   1   0   0   0   0   0   0   0   0   0\n",
      "172  0  0  0  0  0  0  0  0  0   1   1   0   0   0   0   0   0   0   0   0   0\n",
      "173  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   0   0   0   0\n",
      "174  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "175  0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "176  0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "177  0  0  0  0  0  0  1  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "178  0  0  0  0  0  0  1  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "179  0  0  0  0  0  0  1  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "180  0  0  0  0  0  0  1  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "181  0  0  0  0  0  0  1  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "182  0  0  0  0  0  0  1  0  0   0   0   0   0   1   1   1   1   1   0   0   0\n",
      "183  0  0  0  0  0  0  1  0  0   0   0   0   1   0   0   0   0   0   1   1   0\n",
      "184  0  0  0  0  0  0  1  0  0   0   1   1   0   0   0   0   0   0   0   1   0\n",
      "185  0  0  0  0  0  0  1  0  0   1   0   0   0   0   0   0   0   0   0   1   0\n",
      "186  0  0  0  0  0  0  1  0  1   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "187  0  0  0  0  0  0  1  1  1   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "188  0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "189  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "190  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   1   0   0   0\n",
      "191  0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   1   1   0   0   0\n",
      "192  0  0  0  0  0  0  0  0  0   0   0   1   1   1   1   1   1   0   0   0   0\n",
      "193  0  0  0  0  0  0  0  0  0   0   0   0   1   1   1   1   0   0   0   0   0\n",
      "194  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "195  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "196  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "197  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "198  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "199  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "200  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "201  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "202  0  0  0  0  0  0  0  0  1   1   1   1   1   1   1   1   1   1   1   1   0\n",
      "203  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "204  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "205  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "206  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   1   0   0\n",
      "207  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "208  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   1   1   0   0   0\n",
      "209  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   1   1   0   0   0   0\n",
      "210  0  0  0  0  0  0  0  0  0   0   0   0   0   0   1   1   0   0   0   0   0\n",
      "211  0  0  0  0  0  0  0  0  0   0   0   0   0   0   1   0   0   0   0   0   0\n",
      "212  0  0  0  0  0  0  0  0  0   0   0   0   0   1   0   0   0   0   0   0   0\n",
      "213  0  0  0  0  0  0  0  0  0   0   0   0   1   0   0   0   0   0   0   0   0\n",
      "214  0  0  0  0  0  0  0  0  0   0   0   0   1   0   0   0   0   0   0   0   0\n",
      "215  0  0  0  0  0  0  0  0  0   0   0   1   0   0   0   0   0   0   0   0   0\n",
      "216  0  0  0  0  0  0  0  0  0   0   0   1   0   0   0   0   0   0   0   0   0\n",
      "217  0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   0   0   0   0   0\n",
      "218  0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   0   0   0   0   0\n",
      "219  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   0   0   0   0\n",
      "220  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "221  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "222  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "223  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "224  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "225  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "226  0  0  0  0  0  0  0  0  0   1   1   1   1   1   1   1   0   0   0   0   0\n",
      "227  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   1   0   0   0   0\n",
      "228  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "229  0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "230  0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "231  0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "232  0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "233  0  0  0  0  0  0  0  1  0   0   0   0   0   0   0   0   1   0   0   0   0\n",
      "234  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   1   0   0   0   0\n",
      "235  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   1   0   0   0   0\n",
      "236  0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   1   0   0   0   0   0\n",
      "237  0  0  0  0  0  0  0  0  0   0   0   1   1   1   1   0   0   0   0   0   0\n",
      "238  0  0  0  0  0  0  0  0  0   0   0   0   1   1   1   1   1   0   0   0   0\n",
      "239  0  0  0  0  0  0  0  0  0   0   0   0   0   1   0   0   0   1   0   0   0\n",
      "240  0  0  0  0  0  0  0  0  0   0   0   0   1   0   0   0   0   0   1   0   0\n",
      "241  0  0  0  0  0  0  0  0  0   0   0   1   0   0   0   0   0   0   0   1   0\n",
      "242  0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   0   0   0   1   0\n",
      "243  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   0   0   1   0\n",
      "244  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   0   0   1   0\n",
      "245  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   0   1   0   0\n",
      "246  0  0  0  0  0  0  0  0  1   0   0   0   0   0   0   0   0   1   0   0   0\n",
      "247  0  0  0  0  0  0  0  0  0   1   0   0   0   0   0   0   0   1   0   0   0\n",
      "248  0  0  0  0  0  0  0  0  0   0   1   1   1   1   1   1   1   0   0   0   0\n",
      "249  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "250  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "251  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "252  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "253  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "254  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "255  0  0  0  0  0  0  0  0  0   0   0   0   0   1   1   1   1   1   1   0   0\n",
      "256  0  0  0  0  0  0  0  0  0   0   0   0   1   0   0   0   0   0   0   1   0\n",
      "257  0  0  0  0  0  0  0  0  0   0   0   1   0   0   0   0   0   0   0   0   1\n",
      "258  0  0  0  0  0  0  0  0  0   0   1   1   0   0   0   0   0   0   0   0   1\n",
      "259  0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   0   0   0   0   1\n",
      "260  0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   0   0   0   0   1\n",
      "261  0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   0   0   0   0   1\n",
      "262  0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   0   0   0   0   1\n",
      "263  0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   0   0   0   0   1\n",
      "264  0  0  0  0  0  0  0  0  0   0   1   0   0   0   0   0   0   0   0   0   1\n",
      "265  0  0  0  0  0  0  0  0  0   0   0   1   1   1   0   0   0   0   0   0   1\n",
      "266  0  0  0  0  0  0  0  0  0   0   0   0   1   1   1   1   1   1   1   1   1\n",
      "267  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "268  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "269  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "270  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "271  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "272  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "273  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "274  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "275  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   1\n",
      "276  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "277  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "278  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "279  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "280  0  0  0  0  0  0  0  0  0   0   0   0   0   0   0   0   0   0   0   0   0\n",
      "    V22 V23 V24 V25 V26 V27 V28\n",
      "1     0   0   0   0   0   0   0\n",
      "2     0   0   0   0   0   0   0\n",
      "3     0   0   0   0   0   0   0\n",
      "4     0   0   0   0   0   0   0\n",
      "5     0   0   0   0   0   0   0\n",
      "6     0   0   0   0   0   0   0\n",
      "7     0   0   0   0   0   0   0\n",
      "8     0   0   0   0   0   0   0\n",
      "9     0   0   0   0   0   0   0\n",
      "10    0   0   0   0   0   0   0\n",
      "11    0   0   0   0   0   0   0\n",
      "12    0   0   0   0   0   0   0\n",
      "13    0   0   0   0   0   0   0\n",
      "14    0   0   0   0   0   0   0\n",
      "15    0   0   0   0   0   0   0\n",
      "16    0   0   0   0   0   0   0\n",
      "17    0   0   0   0   0   0   0\n",
      "18    0   0   0   0   0   0   0\n",
      "19    0   0   0   0   0   0   0\n",
      "20    0   0   0   0   0   0   0\n",
      "21    0   0   0   0   0   0   0\n",
      "22    0   0   0   0   0   0   0\n",
      "23    0   0   0   0   0   0   0\n",
      "24    0   0   0   0   0   0   0\n",
      "25    0   0   0   0   0   0   0\n",
      "26    0   0   0   0   0   0   0\n",
      "27    0   0   0   0   0   0   0\n",
      "28    0   0   0   0   0   0   0\n",
      "29    0   0   0   0   0   0   0\n",
      "30    0   0   0   0   0   0   0\n",
      "31    0   0   0   0   0   0   0\n",
      "32    0   0   0   0   0   0   0\n",
      "33    0   0   0   0   0   0   0\n",
      "34    0   0   0   0   0   0   0\n",
      "35    0   0   0   0   0   0   0\n",
      "36    0   0   0   0   0   0   0\n",
      "37    0   0   0   0   0   0   0\n",
      "38    0   0   0   0   0   0   0\n",
      "39    0   0   0   0   0   0   0\n",
      "40    0   0   0   0   0   0   0\n",
      "41    0   0   0   0   0   0   0\n",
      "42    0   0   0   0   0   0   0\n",
      "43    0   0   0   0   0   0   0\n",
      "44    0   0   0   0   0   0   0\n",
      "45    0   0   0   0   0   0   0\n",
      "46    0   0   0   0   0   0   0\n",
      "47    0   0   0   0   0   0   0\n",
      "48    0   0   0   0   0   0   0\n",
      "49    0   0   0   0   0   0   0\n",
      "50    0   0   0   0   0   0   0\n",
      "51    0   0   0   0   0   0   0\n",
      "52    0   0   0   0   0   0   0\n",
      "53    0   0   0   0   0   0   0\n",
      "54    0   0   0   0   0   0   0\n",
      "55    0   0   0   0   0   0   0\n",
      "56    0   0   0   0   0   0   0\n",
      "57    0   0   0   0   0   0   0\n",
      "58    0   0   0   0   0   0   0\n",
      "59    0   0   0   0   0   0   0\n",
      "60    0   0   0   0   0   0   0\n",
      "61    0   0   0   0   0   0   0\n",
      "62    0   0   0   0   0   0   0\n",
      "63    0   0   0   0   0   0   0\n",
      "64    0   0   0   0   0   0   0\n",
      "65    0   0   0   0   0   0   0\n",
      "66    0   0   0   0   0   0   0\n",
      "67    0   0   0   0   0   0   0\n",
      "68    0   0   0   0   0   0   0\n",
      "69    0   0   0   0   0   0   0\n",
      "70    0   0   0   0   0   0   0\n",
      "71    0   0   0   0   0   0   0\n",
      "72    0   0   0   0   0   0   0\n",
      "73    0   0   0   0   0   0   0\n",
      "74    0   0   0   0   0   0   0\n",
      "75    0   0   0   0   0   0   0\n",
      "76    0   0   0   0   0   0   0\n",
      "77    0   0   0   0   0   0   0\n",
      "78    0   0   0   0   0   0   0\n",
      "79    0   0   0   0   0   0   0\n",
      "80    0   0   0   0   0   0   0\n",
      "81    0   0   0   0   0   0   0\n",
      "82    0   0   0   0   0   0   0\n",
      "83    0   0   0   0   0   0   0\n",
      "84    0   0   0   0   0   0   0\n",
      "85    0   0   0   0   0   0   0\n",
      "86    0   0   0   0   0   0   0\n",
      "87    0   0   0   0   0   0   0\n",
      "88    0   0   0   0   0   0   0\n",
      "89    0   0   0   0   0   0   0\n",
      "90    0   0   0   0   0   0   0\n",
      "91    0   0   0   0   0   0   0\n",
      "92    0   0   0   0   0   0   0\n",
      "93    0   0   0   0   0   0   0\n",
      "94    0   0   0   0   0   0   0\n",
      "95    0   0   0   0   0   0   0\n",
      "96    0   0   0   0   0   0   0\n",
      "97    0   0   0   0   0   0   0\n",
      "98    0   0   0   0   0   0   0\n",
      "99    0   0   0   0   0   0   0\n",
      "100   0   0   0   0   0   0   0\n",
      "101   0   0   0   0   0   0   0\n",
      "102   0   0   0   0   0   0   0\n",
      "103   0   0   0   0   0   0   0\n",
      "104   0   0   0   0   0   0   0\n",
      "105   0   0   0   0   0   0   0\n",
      "106   0   0   0   0   0   0   0\n",
      "107   0   0   0   0   0   0   0\n",
      "108   0   0   0   0   0   0   0\n",
      "109   0   0   0   0   0   0   0\n",
      "110   0   0   0   0   0   0   0\n",
      "111   0   0   0   0   0   0   0\n",
      "112   0   0   0   0   0   0   0\n",
      "113   0   0   0   0   0   0   0\n",
      "114   0   0   0   0   0   0   0\n",
      "115   0   0   0   0   0   0   0\n",
      "116   0   0   0   0   0   0   0\n",
      "117   0   0   0   0   0   0   0\n",
      "118   0   0   0   0   0   0   0\n",
      "119   0   0   0   0   0   0   0\n",
      "120   0   0   0   0   0   0   0\n",
      "121   0   0   0   0   0   0   0\n",
      "122   0   0   0   0   0   0   0\n",
      "123   0   0   0   0   0   0   0\n",
      "124   0   0   0   0   0   0   0\n",
      "125   0   0   0   0   0   0   0\n",
      "126   0   0   0   0   0   0   0\n",
      "127   0   0   0   0   0   0   0\n",
      "128   0   0   0   0   0   0   0\n",
      "129   0   0   0   0   0   0   0\n",
      "130   0   0   0   0   0   0   0\n",
      "131   0   0   0   0   0   0   0\n",
      "132   0   0   0   0   0   0   0\n",
      "133   0   0   0   0   0   0   0\n",
      "134   0   0   0   0   0   0   0\n",
      "135   0   0   0   0   0   0   0\n",
      "136   0   0   0   0   0   0   0\n",
      "137   0   0   0   0   0   0   0\n",
      "138   0   0   0   0   0   0   0\n",
      "139   0   0   0   0   0   0   0\n",
      "140   0   0   0   0   0   0   0\n",
      "141   0   0   0   0   0   0   0\n",
      "142   0   0   0   0   0   0   0\n",
      "143   0   0   0   0   0   0   0\n",
      "144   0   0   0   0   0   0   0\n",
      "145   0   0   0   0   0   0   0\n",
      "146   0   0   0   0   0   0   0\n",
      "147   0   0   0   0   0   0   0\n",
      "148   0   0   0   0   0   0   0\n",
      "149   0   0   0   0   0   0   0\n",
      "150   0   0   0   0   0   0   0\n",
      "151   0   0   0   0   0   0   0\n",
      "152   0   0   0   0   0   0   0\n",
      "153   0   0   0   0   0   0   0\n",
      "154   0   0   0   0   0   0   0\n",
      "155   0   0   0   0   0   0   0\n",
      "156   0   0   0   0   0   0   0\n",
      "157   0   0   0   0   0   0   0\n",
      "158   0   0   0   0   0   0   0\n",
      "159   0   0   0   0   0   0   0\n",
      "160   0   0   0   0   0   0   0\n",
      "161   0   0   0   0   0   0   0\n",
      "162   0   0   0   0   0   0   0\n",
      "163   0   0   0   0   0   0   0\n",
      "164   0   0   0   0   0   0   0\n",
      "165   0   0   0   0   0   0   0\n",
      "166   0   0   0   0   0   0   0\n",
      "167   0   0   0   0   0   0   0\n",
      "168   0   0   0   0   0   0   0\n",
      "169   0   0   0   0   0   0   0\n",
      "170   0   0   0   0   0   0   0\n",
      "171   0   0   0   0   0   0   0\n",
      "172   0   0   0   0   0   0   0\n",
      "173   0   0   0   0   0   0   0\n",
      "174   0   0   0   0   0   0   0\n",
      "175   0   0   0   0   0   0   0\n",
      "176   0   0   0   0   0   0   0\n",
      "177   0   0   0   0   0   0   0\n",
      "178   0   0   0   0   0   0   0\n",
      "179   0   0   0   0   0   0   0\n",
      "180   0   0   0   0   0   0   0\n",
      "181   0   0   0   0   0   0   0\n",
      "182   0   0   0   0   0   0   0\n",
      "183   0   0   0   0   0   0   0\n",
      "184   0   0   0   0   0   0   0\n",
      "185   0   0   0   0   0   0   0\n",
      "186   0   0   0   0   0   0   0\n",
      "187   0   0   0   0   0   0   0\n",
      "188   0   0   0   0   0   0   0\n",
      "189   0   0   0   0   0   0   0\n",
      "190   0   0   0   0   0   0   0\n",
      "191   0   0   0   0   0   0   0\n",
      "192   0   0   0   0   0   0   0\n",
      "193   0   0   0   0   0   0   0\n",
      "194   0   0   0   0   0   0   0\n",
      "195   0   0   0   0   0   0   0\n",
      "196   0   0   0   0   0   0   0\n",
      "197   0   0   0   0   0   0   0\n",
      "198   0   0   0   0   0   0   0\n",
      "199   0   0   0   0   0   0   0\n",
      "200   0   0   0   0   0   0   0\n",
      "201   0   0   0   0   0   0   0\n",
      "202   0   0   0   0   0   0   0\n",
      "203   0   0   0   0   0   0   0\n",
      "204   0   0   0   0   0   0   0\n",
      "205   0   0   0   0   0   0   0\n",
      "206   0   0   0   0   0   0   0\n",
      "207   0   0   0   0   0   0   0\n",
      "208   0   0   0   0   0   0   0\n",
      "209   0   0   0   0   0   0   0\n",
      "210   0   0   0   0   0   0   0\n",
      "211   0   0   0   0   0   0   0\n",
      "212   0   0   0   0   0   0   0\n",
      "213   0   0   0   0   0   0   0\n",
      "214   0   0   0   0   0   0   0\n",
      "215   0   0   0   0   0   0   0\n",
      "216   0   0   0   0   0   0   0\n",
      "217   0   0   0   0   0   0   0\n",
      "218   0   0   0   0   0   0   0\n",
      "219   0   0   0   0   0   0   0\n",
      "220   0   0   0   0   0   0   0\n",
      "221   0   0   0   0   0   0   0\n",
      "222   0   0   0   0   0   0   0\n",
      "223   0   0   0   0   0   0   0\n",
      "224   0   0   0   0   0   0   0\n",
      "225   0   0   0   0   0   0   0\n",
      "226   0   0   0   0   0   0   0\n",
      "227   0   0   0   0   0   0   0\n",
      "228   0   0   0   0   0   0   0\n",
      "229   0   0   0   0   0   0   0\n",
      "230   0   0   0   0   0   0   0\n",
      "231   0   0   0   0   0   0   0\n",
      "232   0   0   0   0   0   0   0\n",
      "233   0   0   0   0   0   0   0\n",
      "234   0   0   0   0   0   0   0\n",
      "235   0   0   0   0   0   0   0\n",
      "236   0   0   0   0   0   0   0\n",
      "237   0   0   0   0   0   0   0\n",
      "238   0   0   0   0   0   0   0\n",
      "239   0   0   0   0   0   0   0\n",
      "240   0   0   0   0   0   0   0\n",
      "241   0   0   0   0   0   0   0\n",
      "242   0   0   0   0   0   0   0\n",
      "243   0   0   0   0   0   0   0\n",
      "244   0   0   0   0   0   0   0\n",
      "245   0   0   0   0   0   0   0\n",
      "246   0   0   0   0   0   0   0\n",
      "247   0   0   0   0   0   0   0\n",
      "248   0   0   0   0   0   0   0\n",
      "249   0   0   0   0   0   0   0\n",
      "250   0   0   0   0   0   0   0\n",
      "251   0   0   0   0   0   0   0\n",
      "252   0   0   0   0   0   0   0\n",
      "253   0   0   0   0   0   0   0\n",
      "254   0   0   0   0   0   0   0\n",
      "255   0   0   0   0   0   0   0\n",
      "256   0   0   0   0   0   0   0\n",
      "257   0   0   0   0   0   0   0\n",
      "258   0   0   0   0   0   0   0\n",
      "259   0   0   0   0   0   0   0\n",
      "260   0   0   0   0   0   0   0\n",
      "261   0   0   0   0   0   0   0\n",
      "262   0   0   0   0   0   0   0\n",
      "263   0   0   0   0   0   0   0\n",
      "264   0   0   0   0   0   0   0\n",
      "265   0   0   0   0   0   0   0\n",
      "266   0   0   0   0   0   0   0\n",
      "267   0   0   0   0   0   0   0\n",
      "268   0   0   0   0   0   0   0\n",
      "269   0   0   0   0   0   0   0\n",
      "270   0   0   0   0   0   0   0\n",
      "271   0   0   0   0   0   0   0\n",
      "272   0   0   0   0   0   0   0\n",
      "273   0   0   0   0   0   0   0\n",
      "274   0   0   0   0   0   0   0\n",
      "275   0   0   0   0   0   0   0\n",
      "276   0   0   0   0   0   0   0\n",
      "277   0   0   0   0   0   0   0\n",
      "278   0   0   0   0   0   0   0\n",
      "279   0   0   0   0   0   0   0\n",
      "280   0   0   0   0   0   0   0\n"
     ]
    }
   ],
   "source": [
    "handwriting <- read.csv(\"digits.csv\", header = FALSE) # import\n",
    "print(handwriting)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "b4fb5e90-e68b-4029-9350-640470291ef6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>10</li><li>784</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 10\n",
       "\\item 784\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 10\n",
       "2. 784\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1]  10 784"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Function to process the handwriting data\n",
    "process_handwriting <- function(data) {\n",
    "  digits <- list()  # To store processed digit images\n",
    "  \n",
    "  # Split into individual 28x28 grids\n",
    "  for (i in 1:10) {\n",
    "    start_row <- (i - 1) * 28 + 1\n",
    "    end_row <- i * 28\n",
    "    digit_matrix <- as.matrix(data[start_row:end_row, ])\n",
    "    \n",
    "    # Flatten the 28x28 grid into a 1D array of 784 values\n",
    "    flattened <- as.vector(t(digit_matrix))\n",
    "    digits[[i]] <- flattened\n",
    "  }\n",
    "  \n",
    "  # Combine all digit arrays into a data frame\n",
    "  handwriting_processed <- do.call(rbind, digits)\n",
    "  colnames(handwriting_processed) <- paste0(\"pixel\", 0:783)\n",
    "  handwriting_processed <- as.data.frame(handwriting_processed)\n",
    "  \n",
    "  return(handwriting_processed)\n",
    "}\n",
    "\n",
    "# Process the handwriting data\n",
    "handwriting_processed <- process_handwriting(handwriting)\n",
    "\n",
    "# look\n",
    "dim(handwriting_processed)\n",
    "# looks about right "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "dccf77ab-4c6a-46d7-add6-09154599d0d6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   Expected Predicted\n",
      "1         0         7\n",
      "2         1         1\n",
      "3         2         7\n",
      "4         3         1\n",
      "5         4         4\n",
      "6         5         7\n",
      "7         6         3\n",
      "8         7         1\n",
      "9         8         3\n",
      "10        9         5\n"
     ]
    }
   ],
   "source": [
    "# Predict the digit classes for handwriting data\n",
    "handwriting_predictions <- predict(rf_model, newdata = handwriting_processed)\n",
    "\n",
    "# Display the predictions\n",
    "expected_digits <- 0:9\n",
    "results <- data.frame(Expected = expected_digits, Predicted = handwriting_predictions)\n",
    "print(results)\n",
    "\n",
    "# the classifier is predicting mostly 7 for my digits.\n",
    "# probably because in my handwriting it is either 0 or 1\n",
    "# I need to scale my handwriting data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "90119272-bbe1-4888-bd92-6586e30355c6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   Expected Predicted\n",
      "1         0         7\n",
      "2         1         1\n",
      "3         2         7\n",
      "4         3         3\n",
      "5         4         4\n",
      "6         5         7\n",
      "7         6         3\n",
      "8         7         1\n",
      "9         8         3\n",
      "10        9         5\n"
     ]
    }
   ],
   "source": [
    "# Scale the binary values to match the training data range\n",
    "handwriting_processed <- handwriting_processed * 255\n",
    "# Try again\n",
    "# Predict the digit classes for handwriting data\n",
    "handwriting_predictions <- predict(rf_model, newdata = handwriting_processed)\n",
    "\n",
    "expected_digits <- 0:9\n",
    "results <- data.frame(Expected = expected_digits, Predicted = handwriting_predictions)\n",
    "print(results)\n",
    "# this looks a bit better?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15225f8d-a967-49a3-b49f-aa01b584bca7",
   "metadata": {},
   "source": [
    "This classifier does not do a good job with my handwriting. Out of all of the digits it only predicted \"1, 3, 4\" correctly. \n",
    "\n",
    "*I wonder if KNN would do a better job*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "206525f3-095b-4a8f-9157-01649dc98966",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Actual\n",
      "Predicted 0 1 2 3 4 5 6 7 8 9\n",
      "        0 1 0 0 0 0 1 0 0 0 1\n",
      "        1 0 0 0 0 0 0 0 0 0 0\n",
      "        2 0 1 1 0 0 0 0 1 0 0\n",
      "        3 0 0 0 1 0 0 0 0 0 0\n",
      "        4 0 0 0 0 0 0 0 0 0 0\n",
      "        5 0 0 0 0 0 0 0 0 0 0\n",
      "        6 0 0 0 0 0 0 0 0 0 0\n",
      "        7 0 0 0 0 0 0 0 0 0 0\n",
      "        8 0 0 0 0 1 0 1 0 1 0\n",
      "        9 0 0 0 0 0 0 0 0 0 0\n",
      "   Expected Predicted\n",
      "1         0         7\n",
      "2         1         1\n",
      "3         2         7\n",
      "4         3         1\n",
      "5         4         4\n",
      "6         5         7\n",
      "7         6         3\n",
      "8         7         1\n",
      "9         8         3\n",
      "10        9         5\n"
     ]
    }
   ],
   "source": [
    "# KNN code \n",
    "# Load necessary library\n",
    "library(class)\n",
    "\n",
    "# Assuming 'train_reduced' and 'test_reduced' are your reduced feature sets, \n",
    "# and 'train_labels' and 'test_labels' are your corresponding labels\n",
    "\n",
    "#add labels for my own handwriting\n",
    "handwriting_labels <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\n",
    "# Number of neighbors to use for KNN\n",
    "k <- 3  # You can experiment with different values for k\n",
    "\n",
    "# Apply KNN on the training and handwriting data\n",
    "knn_pred <- knn(train = train_pixels, test = handwriting_processed, cl = train_labels, k = k)\n",
    "\n",
    "# Evaluate the performance by comparing predictions with actual test labels\n",
    "confusion_matrix <- table(Predicted = knn_pred, Actual = handwriting_labels)\n",
    "print(confusion_matrix)\n",
    "\n",
    "# Display the predictions\n",
    "expected_digits <- 0:9\n",
    "results <- data.frame(Expected = expected_digits, Predicted = handwriting_predictions)\n",
    "print(results)\n",
    "\n",
    "\n",
    "# KNN isnt much better"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1039d40-b818-496b-9840-c801c201d76f",
   "metadata": {},
   "source": [
    "Interesting, we can see that KNN isn't any better at predicting my handwriting either!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15c4c6ca-f50c-4c4b-9cd6-cc592fb5002b",
   "metadata": {},
   "source": [
    "4) You can try simple things like take average of all data for each number and\n",
    "then take a \"dot\" product with your test set, and identify the pixels. This might\n",
    "work, maybe for some digits, and not others."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2659c9cb-699c-48a8-bae1-d30542c43ac5",
   "metadata": {},
   "source": [
    "Per the professor's email, the above is a hint, not a question"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45c15a05-19a9-4296-a0a1-bb2c62a7ceb6",
   "metadata": {},
   "source": [
    "### Project 3\n",
    "Dataset 3: a) Mnemiopsis_col_data.csv b) Mnemiopsis_count_data.csv\n",
    "\n",
    "This is gene expression data,  The columns represent samples, whose information is\n",
    "in the col_data file. The count_data file contains counts for each gene (rows).\n",
    "The file, info_gene.txt contains information about the organism and some links to\n",
    "look up gene functions.\n",
    "It will be a good experience to learn to use the genome resources,\n",
    "as this is the kind of struggles most researchers go through when\n",
    "they start looking at genes.\n",
    "\n",
    "\n",
    "1) Build hierarchical trees based on the columns and for the rows (exclude rows\n",
    "that are \"low\" expression)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e881d87d-c446-4fab-a14b-3e6d81de4a4a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "Attaching package: ‘dplyr’\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:stats’:\n",
      "\n",
      "    filter, lag\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:base’:\n",
      "\n",
      "    intersect, setdiff, setequal, union\n",
      "\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 8</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>aboral1</th><th scope=col>aboral2</th><th scope=col>aboral3</th><th scope=col>aboral4</th><th scope=col>oral1</th><th scope=col>oral2</th><th scope=col>oral3</th><th scope=col>oral4</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>ML000110a</th><td> 69</td><td>175</td><td>141</td><td>139</td><td>108</td><td>146</td><td>133</td><td> 63</td></tr>\n",
       "\t<tr><th scope=row>ML000111a</th><td>  0</td><td>  0</td><td>  0</td><td>  0</td><td>  0</td><td>  1</td><td>  0</td><td>  0</td></tr>\n",
       "\t<tr><th scope=row>ML000112a</th><td>  1</td><td> 10</td><td>  8</td><td>  3</td><td>  2</td><td> 13</td><td>  6</td><td>  1</td></tr>\n",
       "\t<tr><th scope=row>ML000113a</th><td>383</td><td>546</td><td>402</td><td>471</td><td>290</td><td>190</td><td>282</td><td>317</td></tr>\n",
       "\t<tr><th scope=row>ML000114a</th><td>188</td><td>214</td><td>257</td><td>230</td><td>289</td><td>215</td><td>162</td><td>128</td></tr>\n",
       "\t<tr><th scope=row>ML000115a</th><td>493</td><td>455</td><td>540</td><td>501</td><td>413</td><td>403</td><td>419</td><td>452</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 8\n",
       "\\begin{tabular}{r|llllllll}\n",
       "  & aboral1 & aboral2 & aboral3 & aboral4 & oral1 & oral2 & oral3 & oral4\\\\\n",
       "  & <int> & <int> & <int> & <int> & <int> & <int> & <int> & <int>\\\\\n",
       "\\hline\n",
       "\tML000110a &  69 & 175 & 141 & 139 & 108 & 146 & 133 &  63\\\\\n",
       "\tML000111a &   0 &   0 &   0 &   0 &   0 &   1 &   0 &   0\\\\\n",
       "\tML000112a &   1 &  10 &   8 &   3 &   2 &  13 &   6 &   1\\\\\n",
       "\tML000113a & 383 & 546 & 402 & 471 & 290 & 190 & 282 & 317\\\\\n",
       "\tML000114a & 188 & 214 & 257 & 230 & 289 & 215 & 162 & 128\\\\\n",
       "\tML000115a & 493 & 455 & 540 & 501 & 413 & 403 & 419 & 452\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 8\n",
       "\n",
       "| <!--/--> | aboral1 &lt;int&gt; | aboral2 &lt;int&gt; | aboral3 &lt;int&gt; | aboral4 &lt;int&gt; | oral1 &lt;int&gt; | oral2 &lt;int&gt; | oral3 &lt;int&gt; | oral4 &lt;int&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|\n",
       "| ML000110a |  69 | 175 | 141 | 139 | 108 | 146 | 133 |  63 |\n",
       "| ML000111a |   0 |   0 |   0 |   0 |   0 |   1 |   0 |   0 |\n",
       "| ML000112a |   1 |  10 |   8 |   3 |   2 |  13 |   6 |   1 |\n",
       "| ML000113a | 383 | 546 | 402 | 471 | 290 | 190 | 282 | 317 |\n",
       "| ML000114a | 188 | 214 | 257 | 230 | 289 | 215 | 162 | 128 |\n",
       "| ML000115a | 493 | 455 | 540 | 501 | 413 | 403 | 419 | 452 |\n",
       "\n"
      ],
      "text/plain": [
       "          aboral1 aboral2 aboral3 aboral4 oral1 oral2 oral3 oral4\n",
       "ML000110a  69     175     141     139     108   146   133    63  \n",
       "ML000111a   0       0       0       0       0     1     0     0  \n",
       "ML000112a   1      10       8       3       2    13     6     1  \n",
       "ML000113a 383     546     402     471     290   190   282   317  \n",
       "ML000114a 188     214     257     230     289   215   162   128  \n",
       "ML000115a 493     455     540     501     413   403   419   452  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 2</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>type</th><th scope=col>condition</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>aboral-1</th><td>Mleidyi</td><td>aboral</td></tr>\n",
       "\t<tr><th scope=row>aboral-2</th><td>Mleidyi</td><td>aboral</td></tr>\n",
       "\t<tr><th scope=row>aboral-3</th><td>Mleidyi</td><td>aboral</td></tr>\n",
       "\t<tr><th scope=row>aboral-4</th><td>Mleidyi</td><td>aboral</td></tr>\n",
       "\t<tr><th scope=row>oral-1</th><td>Mleidyi</td><td>oral  </td></tr>\n",
       "\t<tr><th scope=row>oral-2</th><td>Mleidyi</td><td>oral  </td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 2\n",
       "\\begin{tabular}{r|ll}\n",
       "  & type & condition\\\\\n",
       "  & <chr> & <chr>\\\\\n",
       "\\hline\n",
       "\taboral-1 & Mleidyi & aboral\\\\\n",
       "\taboral-2 & Mleidyi & aboral\\\\\n",
       "\taboral-3 & Mleidyi & aboral\\\\\n",
       "\taboral-4 & Mleidyi & aboral\\\\\n",
       "\toral-1 & Mleidyi & oral  \\\\\n",
       "\toral-2 & Mleidyi & oral  \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 2\n",
       "\n",
       "| <!--/--> | type &lt;chr&gt; | condition &lt;chr&gt; |\n",
       "|---|---|---|\n",
       "| aboral-1 | Mleidyi | aboral |\n",
       "| aboral-2 | Mleidyi | aboral |\n",
       "| aboral-3 | Mleidyi | aboral |\n",
       "| aboral-4 | Mleidyi | aboral |\n",
       "| oral-1 | Mleidyi | oral   |\n",
       "| oral-2 | Mleidyi | oral   |\n",
       "\n"
      ],
      "text/plain": [
       "         type    condition\n",
       "aboral-1 Mleidyi aboral   \n",
       "aboral-2 Mleidyi aboral   \n",
       "aboral-3 Mleidyi aboral   \n",
       "aboral-4 Mleidyi aboral   \n",
       "oral-1   Mleidyi oral     \n",
       "oral-2   Mleidyi oral     "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Load libraries\n",
    "library(dplyr)\n",
    "library(tidyr)\n",
    "library(ggplot2)\n",
    "\n",
    "\n",
    "# Load data\n",
    "col_data <- read.csv(\"Mnemiopsis_col_data.csv\", header = TRUE, row.names = 1)\n",
    "count_data <- read.csv(\"Mnemiopsis_count_data.csv\", header = TRUE, row.names = 1)\n",
    "head(count_data)\n",
    "head(col_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b4743aea-e4eb-46da-991e-9639e4849693",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 2</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>type</th><th scope=col>condition</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>aboral1</th><td>Mleidyi</td><td>aboral</td></tr>\n",
       "\t<tr><th scope=row>aboral2</th><td>Mleidyi</td><td>aboral</td></tr>\n",
       "\t<tr><th scope=row>aboral3</th><td>Mleidyi</td><td>aboral</td></tr>\n",
       "\t<tr><th scope=row>aboral4</th><td>Mleidyi</td><td>aboral</td></tr>\n",
       "\t<tr><th scope=row>oral1</th><td>Mleidyi</td><td>oral  </td></tr>\n",
       "\t<tr><th scope=row>oral2</th><td>Mleidyi</td><td>oral  </td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 2\n",
       "\\begin{tabular}{r|ll}\n",
       "  & type & condition\\\\\n",
       "  & <chr> & <chr>\\\\\n",
       "\\hline\n",
       "\taboral1 & Mleidyi & aboral\\\\\n",
       "\taboral2 & Mleidyi & aboral\\\\\n",
       "\taboral3 & Mleidyi & aboral\\\\\n",
       "\taboral4 & Mleidyi & aboral\\\\\n",
       "\toral1 & Mleidyi & oral  \\\\\n",
       "\toral2 & Mleidyi & oral  \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 2\n",
       "\n",
       "| <!--/--> | type &lt;chr&gt; | condition &lt;chr&gt; |\n",
       "|---|---|---|\n",
       "| aboral1 | Mleidyi | aboral |\n",
       "| aboral2 | Mleidyi | aboral |\n",
       "| aboral3 | Mleidyi | aboral |\n",
       "| aboral4 | Mleidyi | aboral |\n",
       "| oral1 | Mleidyi | oral   |\n",
       "| oral2 | Mleidyi | oral   |\n",
       "\n"
      ],
      "text/plain": [
       "        type    condition\n",
       "aboral1 Mleidyi aboral   \n",
       "aboral2 Mleidyi aboral   \n",
       "aboral3 Mleidyi aboral   \n",
       "aboral4 Mleidyi aboral   \n",
       "oral1   Mleidyi oral     \n",
       "oral2   Mleidyi oral     "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Rename the rows in col data\n",
    "# Replace hyphens (-) with an empty string in the row names\n",
    "rownames(col_data) <- gsub(\"-\", \"\", rownames(col_data))\n",
    "head(col_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "339d29f5-7443-4bb3-a842-a0d1c0009fd3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filter low expression genes (e.g., genes with mean expression < 10)\n",
    "filtered_data <- count_data[rowMeans(count_data) >= 10, ]\n",
    "\n",
    "# Normalize data with a log transform\n",
    "normalized_data <- log1p(filtered_data)\n",
    "\n",
    "# Hierarchical clustering for samples (columns)\n",
    "sample_dist <- dist(t(normalized_data), method = \"euclidean\")  # Transpose for column-based distance\n",
    "sample_clust <- hclust(sample_dist, method = \"complete\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "94d47579-5c7f-47b4-889d-98f29fc05916",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Hierarchical clustering for genes (rows)\n",
    "gene_dist <- dist(normalized_data, method = \"euclidean\")\n",
    "gene_clust <- hclust(gene_dist, method = \"complete\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c907d06a-1b57-4f84-9d93-657b88025f98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAAACVBMVEX+/v4AAAD+/v5sl/vG\nAAAAA3RSTlP//wDXyg1BAAAACXBIWXMAABJ0AAASdAHeZh94AAAgAElEQVR4nO2di3arOg5A\nr/n/j57JaQLmIbAtCcuw95o5pYkfiqxdwEl7/5sAQM1/vQMAeAKIBGAAIgEYgEgABiASgAGI\nBGAAIgEYgEgABiASgAGIBGAAIgEYgEgABiASgAGIBGAAIgEYgEgABiASgAGIBGAAIgEYgEgA\nBiASgAGIBGAAIgEYgEgABiASgAGIBGAAIgEYgEgABiASgAGIBGAAIgEYgEgABiASgAGIBGAA\nIgEYgEgABiASgAGIBGAAIgEY0Fuk9KWx6+mYFaM2hvBGmtfr2euCSOdjwRZEOqSvSKkht6vO\nV6OWDjvOgnVGu2CPXZeuIv1S2rYwpyLlw2vGgpyUpbat92qU8i7x6S7SfKTorR92nAXritWC\nPXBduouUhEf+HXy/zc9cq5+Ky7qkzSDL4fbB9SDZ9/PhfszjNufBPpB11vJHl4P85b9pXULc\nI22+XS73VmxvqbYNV6MuhycDb787mGi6biME+0AOXlhBZo+6P29dEGmwBevJwQsryOxR9+et\nS6jt75QJknZfNt+sv+RJOl6ws0GOFmMZR2xzGuwDOXhhJZk96P68dekt0u6sVGKLkNV8hOVw\n2rS5HPH80fVqnAT7QLLXt8+UnNlN9+XRJ61Lf5Gm+WVP8xpVipSt7PL073DatLFbsPNgH8ix\nSHJm37Qu3Xft5qPpJ5Scg6PUdVuwq2AfSJblLCdyZt+0LpFEOkrlZXoPsnO43NtntQt2GewT\nacisrvc469JdpOVMlP8ok0W6cGya1jlN2SOlA8srdfHgK0RaK1CS2bz3apQnrQsiDbZgXUnr\nVz+VZTbvvRrlSesS4n2k7IWmq3ukdfPVGAejpu0jRwNvn9qOedjmMthnsk1tSWYP+j5vXXrv\n2u1XZcozcfDjbZXHZZCDMXcP5gfr7zcLth3zqM1VsA/ll9mDTO1e/pvWpbdIVfSt0Ef7MTAx\n1gWRSqeNsV6wEGpdEKls2t0lCXQn1LogUtm0YRYMZkKtCyIFnxnOiLMuQ4kEEBVEAjAAkQAM\nQCQAAxAJwABEAjAAkQAMQCQAAxAJwABEAjAAkQAMQCQAAxAJwABEAjAAkQAMQCQAAxAJwABE\nAjAAkQAMQCQAAxAJwABEAjAAkQAMQCQAAxAJwABEAjAAkQAMQCQAAxAJwABEAjAAkQAMQCQA\nAxAJwABEAjAAkQAMQCQAA24QKch/LRdOYI20IBJMrJEeRIKJNdKDSDCxRnoQCSbWSA8iwcQa\n6UEkmFgjPYgEE2ukB5FgYo30IBJMrJEeRIKJNdKDSDCxRnoQCSbWSA8iwcQa6UEkmFgjPYgE\nE2ukB5FgYo30IBJMrJEeRIKJNdKDSDCxRnoQCSbWSA8iPZr0x3W7G2J5Noj0YNLCVctb4nky\nkURK0fDMyg0sr+DyteRPk9MWQonkGUUD0eKpJavaKpF8orlh8J4gkky0eGpBpBtBJJlo8dTS\nemnnFY/74D1BJJlo8VRTfmuCSFoQSSZaPA2U3uEjkhZEkokWjyOIpAWRZKLFY4y0K41ILSCS\nTLR4qvkTpOTaDpG0IJJMtHhq+TvVsNlwC4gkEy2eWj76/EnE9rc7iCQTLZ5avhd28+FZU+HY\nnNFzKoJIMtHiqQWRbgSRZKLFUwsfEboRRJKJFk81v1sjNhv8QSSZaPHUM4t02VA4Nmf8nAog\nkky0eBxBJC2IJBMtHkcQSQsiyUSLxxFE0oJIMtHicQSRtCCSTLR4HEEkLYgkEy0eRxBJCyLJ\nRIvHEUTSgkgy0eJxBJG0IJJMtHgcQSQtiCQTLR5HEEkLIslEi8cRRNKCSDLR4nEEkbQgkky0\neBxBJC2IJBMtHkcQSQsiyUSLxxFE0oJIMtHicQSRtCCSTLR4HEEkLYgkEy0eRxBJCyLJRIvH\nEUTSgkgy0eJxBJG0IJJMtHgcQSQtiCQTLR5HEEkLIslEi8cRRNKCSDLR4nEEkbQgkky0eBxB\nJC2IJBMtHkcQSQsiyUSLxxFE0oJIMtHicQSRtCCSTLR4HEEkLYgkEy0eRxBJCyLJRIvHEUTS\ngkgy0eJxBJG0IJJMtHgcQSQtiCQTLR5HEEkLIslEi8cRRNKCSDLR4nEEkbQgkky0eBxBJC2I\nJBMtHkcQSQsiyUSLxxFE0oJIMtHicQSRtCCSTLR4HEEkLYgkEy0eRxBJCyLJRIvHEUTSgkgy\n0eJxBJG0IJJMtHgcQSQtiCQTLR5HEEkLIslEi8cRRNKCSDLR4nEEkbQgkky0eBxBJC2IJBMt\nHkcQSQsiyUSLxxFE0oJIMtHicQSRtCCSTLR4HEEkLYgkEy2eNtKHy0bCsTnPyOkBiCQTLZ5a\n/vmTUolJiKQFkWSixVPLR5/0s+miqXBsH5Pn4D1BJJlo8dTyJ9J8eNpUODZn9JyKIJJMtHhq\nQaQbQSSZaPHUgkg3gkgy0eKpZd5nuN5tQCQtiCQTLZ5acpGumgrH9jF5Dt4ThUhlG6uINAKI\npKVZpLRw1bJ4yNZYnIgWjzEpHa8hIrXQKtKS+6rrb5uGNxEtnnrmteEeyZt2kY4Oj5sWj9kY\nixfR4qlmOdcgkjeIJBMtnlqyfQZE8oZLO5lo8dSSfToIkbxhs0EmWjy1/E5GCZH8YftbJlo8\ntcz3RwmR3OENWZlo8VSzmIRI3iCSTLR4qlk2vxHJm3aRmt6jsGl4E9HicQSRtOg2G75HFy2L\nh2yNxYlo8TiCSFo07yM1vEdh0/AmosXjCCJpUb0hW/8ehU3Dm4gWjyOIpEX3yQbxPQrpA5Hn\nYzbG4kW0eBxBJC3KjwjVvkdh0/AmosXjCCJpUWw2fL/wEaEHgEhatCJVvkdh0/AmosXjCCJp\n4Q1ZmWjxOIJIWhBJJlo8jiCSFkSSiRaPI4ikBZFkosXjCCJpUfxiX+kbRYgUH0TSgkgy0eJx\nBJG0qLe/C1qaN7yJaPE4gkhaEEkmWjyOIJIWRJKJFo8jiKSFXTuZaPE4gkhaEEkmWjyOIJIW\nRJKJFo8jiKQFkWSixeMIImlBJJlo8TiCSFoQSSZaPI4gkhZEkokWjyOIpAWRZKLF4wgiaUEk\nmWjxOIJIWhBJJlo8jiCSFkSSiRaPI4ikBZFkosXjCCJpQSSZaPE4gkhaEEkmWjyOIJIWRJKJ\nFo8jiKQFkWSixeMIImlBJJlo8TiCSFoQSSZaPI4gkhZEkokWjyOIpAWRZKLF48iJSCkytybp\nFESSiRaPI2ci3RpIHYFiQySZaPE4gkhaEEkmWjyOIJIWRJKJFo8jUUQa95YKkWSixeNIGJGG\nHR2RZKLF4wgiaUEkmWjxOIJIWhBJJlo8jiCSFkSSiRaPI4ikBZFkosXjCCJpQSSZaPE4gkha\nEEkmWjyOIJIWRJKJFo8jiKQFkWSixeMIImlBJJlo8TiCSFoQSSZaPI4gkhZEkokWTwOlH9ZE\nJC2IJBMtnmrKP/eMSFoQSSZaPLUs/lyahEhaEEkmWjy1ZPYgkvfoiCQTLZ5aEOnG0RFJJlo8\ntXBpd+PoiCQTLZ5q2Gy4b3REkokWTwNsf981OiLJRIvHEUTSgkgy0eIxRvr7OojUAiLJRIun\nntkQNhu8R0ckmWjxVLOcaxDJe3REkokWTy0fe74mIZL36IgkEy2eWv7Zk77/XjQVjvff+oJI\nJyBSJ34no4RI/qMjkky0eGqZ748SIrmPjkgy0eKpZjEJkbxHRySZaPFUs2x+I5L36IgkEy0e\nRxBJCyLJRIvHEUTSgkgy0eJxBJG0IJJMtHgcQSQtiCQTLR5HEEkLIslEi8cRRNKCSDLR4nEE\nkbQgkky0eBxBJC2IJBMtHkcQSQsiyUSLxxFE0oJIMtHicQSRtCCSTLR4HEEkLYgkEy0eRxBJ\nCyLJRIvHEUTSgkgy0eJxBJG0IJJMtHgcQSQtiCQTLR5HEEkLIslEi8cRRNKCSDLR4nEEkbQg\nkky0eBxBJC2IJBMtHkcQSQsiyUSLxxFE0oJIMtHicQSRtCCSTLR4HEEkLYgkEy0eRxBJCyLJ\nRIvHEUTSgkgy0eJxBJG0IJJMtHgcQSQtiCQTLR5HEEkLIslEi8cRRNKCSDLR4nEEkbQgkky0\neBxBJC2IJBMtHkcQSQsiyUSLxxFE0oJIMtHicQSRtLxZpKTk5nA9QSQtrxapa/dQIJIWROrV\nPRSIpAWRenUPBSJpQaRe3UOBSFoUIpXeciNSfBBJS7NI5btXiBQfRNLSKtLiz6VJiBQfRNLS\nLtLR4XHT4jEbY2kFkWYQSQsi9eoeCkTSwqVdr+6hQCQtbDb06h4KRNLC9nev7qFAJC28Idur\neyi2IvX6mC4inYBI8dmJdNnKP46xRufSrlf3UCCSFjYbenUPBSJpYfu7V/e7KLpsQCQtvCHb\nq7s/Kds2uGq6OUakWpxEatrrQSRbPplPP5summ6OEakWLu16dffnT6T58LTp5vgpIt33NzfY\nbOjV3Z+BRPKq8bOBgojE9jci2ZFOvzUb12eSf/CGbK/u/sw/6a5/3iGSFkTq1d2fXKSrpptj\nRKoFkXp1DwUiaUGkXt27I93dI1ILiu3v0j0WRIpPd5GctqkR6Q4Qaaa/SCfPacZtfK4exftI\nxS3NGxrxdJEaf9ghUguI1Ku7P4iESLfwdJEa1wiRWmDXrlf3G0AkRLoDRFpabo4RqRZE6tU9\nFIikBZF6dQ8FImlBpF7dQ4FIWhCpV/dQIJIWROrVPRSIpAWRenUPBSJpQaRe3UOBSFoQqVf3\nUCCSFkTq1T0UiKQFkXp1DwUiaUGkXt1DgUhaEKlX91AgkhZE6tU9FIikBZF6dQ/FC0Q6/bMQ\n6j8OgUjduofiDSLVNK7nzSIpGSzcUxBJOREitTNYuKcgknIiRGpnsHBPQSTlRIjUzmDhnoJI\nyokQqZ3Bwj0FkZQTIVI7g4V7CiIpJ0KkdgYL9xREUk6ESO0MFu4piKScCJHaGSzcUxBJOREi\ntTNYuKcgknIiRGpnsHBPQSTlRIjUzmDhnoJIyokQqZ3Bwj2lv0hNXI9bEzwi9WGwcE8JIFJL\nr5oWiOSFdjpEMpwfka5BpPggUlGLE14oktXvRCKS4fxPEun3WnTltSecSEbT9RDpjjVCpBZe\nKNLvBSJSNu7mGJFq+Ylk9kcg9oQT6VuHw4l00xohUgtHImnGOyCgSP9UGlok66E3x4hUy8Gl\nnTUhRTJ4uT0v7czH3Rw/Q6TVTxxEigoiGc7vI1LehO1va9j+3oNIRS1OyEV6z2aDCV3CZbMh\n73X9fJ9Lu9eJNNwZiV27Va/r59O02e086cM9Uj2jXtpxj7Tqdf387sUgkiVHGW4Z5Hb81+jv\nxwsi1fJakfQmPVSkza3FcSvz+Z8kktcqIZIh7muESG18RSq9H2sBkWy4Z40QqQ1EUg1yJ7eK\nVIHJ/E8RyZOAIv12RdVjPIW9SA1dNfO7ibQ9vSJSOAYL9xREKhjulMM3ZG1LJKBINotvMUjt\nnO5rhEhtHItkukyIZIf/GiFSG6vt779/6/J4TUCRTKbqs/3996/fGsUUqWbzYxmq2xlp+Wq5\nSgFFMvmh3ueMtHz1WaOgIlUNlh0gUnwQadNVMz8iXYNIhnNWrlHpiReRaifZst5s+H15/D3S\nZHC33mmz4felRI/ijQlEqp1ky9Ev9r1ms0E3YZ/Nhoo1Wqrz0qTHiyTvSDROsmX9hqzxpup3\nUPOGatLmq2qQmylfo/wvf7xepIIRDUVyAZE6gUiI5MxbROLS7m6R/i66Hd4yn0KKNOQ9Uv0a\nsdmASN4MuGvXskaK7e/97bmSizgL4yuASzvPKOwZLNxTjkRym+LoSUS6BpFicny6QKQ2ViIl\n8/eQ/o1q3tCAAS/tvrM6rxEitbF9Q/YlIo242fA3KSKVz9RJpOVNYM2AewKKlDZfVYPcSdUa\nFd/qI1L9JFsQST3InSBS+UzzC0ckN94hUsVKPlKkv4G7iaS+Cd8SUKRh75Hq1giRNiKdv8Nl\nutmg38zaEU2k8guei3GsAqqatCZwRNqKdDq4mUiTi0fhRLKiT7jea4RIbbz7DdnxzkhOIJJ2\nb+ClIg17aefE80VK8jCI1Iy0lVM7yGNAJCORDncxjIgpkt6ku0W6Z40QqQ1EUg1yJ4hUN1PH\nSzv73aB/o5o3VDOkSN9ZnddoFhWRqkAk1SD34y/S9FfXw4r0G+sr0vfHAiK58KsW7Rj3g0jX\nE61F+nsIkcKCSIcjNYBIRSCS6azRRWrqgkgF7G9kW/GIrh1EOh+ppou1SJuqeZxIVgOFAJHO\nR6rpYi7S7/hukTx/8iOS0Xz3rFE3kc56ItKESGbzPVak65fkKdJv5oE+a4dIUekpUvre0liN\nWi3ShEhdCRaOis4idb20Q6TOBAtHBSIhki9l+/I7OkSq4gUiiWuDSHfQNici1fS474x0OBQi\n3QEiNY9U0+WmzYbDoRDpDhCpeaSaLuk3rcFFNCKVD3QfiNQ8UnGPRSST6fLgEel8oPtApOaR\ninv0FunXCJEcQaTmkYp79Bbp939EcgSRmkcqa57f7niJ9B1duLvqLpJ4t7dtd3DUNqGu+41z\nIlJFB/8zUjp6QVFEOt04Wbc8OGqbUtf9xjkRqabHq0Va/Lk0CZHig0j9RDo6PG56cNQ2p677\njXMiUk0PRNodHjc9OGqbU9f9xjkRqaaHrUhpNJG4tLPu1ZG9SCXbSOcjFfd4tUhsNtj36siB\nSLe99HKRthvYIiOJNL+s63YHR20T6rrfOCci1fQoF6lsuNFEKgWR4tNNpMPziGrsnUhpLdLB\n+SuwSNtAv48qB1UGdd+c7xGp5DrrcgTXM9K0FWnXfuor0i8Bl9MjUnzaRdK3eLlIFT9yDo7a\nptR1v3FORKpo4SDSXJTxRVpOyJcmIVJ8AohU8GO5XKRpIJHmoBDJqFdHIoh03RyRdkdtc+q6\n3zgnIlW0eLtIXNpZ9+pIR5HSu0Vis8G+V0f6ifTvl1fTi0Vi+9u8V0e6ifS9pFlMep9IxSBS\nfBAJkXxBpNKObS3uE0maAJFuAZFKOwrPX7835L7Z8BV1EkUqvNk/BZE85kSkZbirPSn/Xbtr\nkeY42kEkjzmfIFJZYRls2SJSIYgUnyORil7FUCLl5NMjkj+IVNrxcmCpxfxZu8sBTc5Iu7gQ\n6Q4QqbTj5cBSA/ddO0QSB7oPRCrteDmw9Px80XU5YLlI82iIdDrQfSBSacfLgaXnPS7t5p2F\nYpHY/vYFkUo7Xg4sPR9EJN6QdQWRDpsfcTWwNDMiFYJI8akVqfCxbrt2iFQ20H0g0nnz88eK\nFt/jfSREKhvoPsYXSb7syhtlzadakc4u8BDJDkTqRMWnffK6SociHd4W7QdHJD/MqgqR6vhW\n6PT796xp1kkQ6XQasVmVSOf7FlUifQf5SfT3etLq+fSbFJFuYHyR5sPTplmnW0VaFXWSm55c\nPR63nESRNuEh0i08WKTjq7O7RVqdkeSm6fDwOJw2kS4NPQeRPOYcQqRV06zTvZd2y0VdN5HS\nr9X5wOcgksecUURKeZmeNs07GYqULkVyPyNlV47SGenvwg6RPHmKSFdN8063izTHKTetFmn5\nEYJIbgO5zxlDpApWIqUnnJFSdt2GSE4DuTNOpF9ykaZOIp3v2mXNz7OLSPcN5M44kX4ZSaSL\n7FaItDyKSDEZJ9IvLxXpz6AJkaIyTqRf/ETac9QfkQpApPg4iiRPlfW/Q6SESNYDuTNOpF/e\nK1LK37JVgEgejBPpl5eL9AtAASJ5ME6kX7qJtL6JkedKmx5iNBcirfoiUnTGifRLmDPS5vRx\nFOB5NFcibYYaSqTtybV5IKuI3Bkn0i9xRJq21b8L8DyaJ4tkVVjjlOc4kX7ZXjndJtKqzH8i\nHTRvECll2whPEcmmssYpz3Ei/bI6I01LXc8PnhSa7oz0re+s0A9Eyie/urjJtDwUiXukgcpz\nnEi/XIm0abTuq760S5ciZQ/uL/Z2wyHSTQO5M06kX45EymrrWqS05fdckUirS6+DMyEifUCk\n+ByKtDxeINLxgMoz0m9eW5GWoTJVESki40T65d0iTYOItD/jNw5kFVHBVLqQEWknUtqzPFMp\n0unqVIm0NB1BpHADuU+GSHuRxDl3fh2IlNX5el++TqSNMAOLNFB5amZ7nEgnZ4A2kbLhsjPS\n30hHIuVDlop0wPgiyetQOdAQjBPpl0uR9g1XPepF+n1ZF/1kKtLBXmJehtmjw4i0u/qVW7fh\n/SLqCBbONd1E2i+jv0jZpeqIIhWa1PZqglVusHCu0Ym0/2n2++5SpMnz0g6RmuYIRLBwrlGf\nkTbP/Yq1RaS0E2kby+bKbG3AVpsCkY6GqQWRjsfTpfchIs0vXyPStpRXbdO0y/Wvzbb49yId\nRD+Vi5Q3WG0LtoFIHgQL5xpBpGn2Yd9w1WP73P6MtGmzOhtk0mQizS13UpeKJDCX4oAiTXmK\nrlu3zeHDm89IUy7SuhanVY/NIHNhnoo0N92KlJaW6SiWN4vk1FrX62LMg6Ip7WoejDOXIqW1\nJ6u+hyJNv7PO8UTFIk3TLpaNSJtFerZI5TGGESnVRr7uOxZXImWFv24+lYu0LWUzkbZTX4q0\nRIBIJr0uh2w1aWiRVgWvEGl7abc66ivSHMFwIpWXFiL1YHVGii7SqoFKpOWRUUTKM3Xdum0O\nY14r0qrk1pWXN8l6TLsFVouUebwXaf2z2UCk0uI8gc2GsyER6e/JjUjbHvO3czmeifQr2pR/\nu9Ty8qSrSOngbSZNBhHpdMzG7L5WpPnZM5F+zy8T5qekTKT9eWPairSXoFSkaVCRSiONI5KC\nYOFcE1Wk5blpeXQl0ne2GpHSsUZjiLQkuqR12xy2aIZ8lEi/g3qRkiRSKhZpQqSZ/Br2OlZE\n6sGpSNldytK4RqRdveZi7p67Fmlp0izS8cMKEMljzOeJNGWFVi7St9MqHY0ipfyMNM3920QS\nXNJkEJHEIRXpfYpIX5n+6m5zbbacoESRfs3ydHyFyCwrFGlaPr36jWF5Jl+nZ4s04D2ShmDh\nXJNZsddoueWfG68rdx5gueISz0g/kYSKz3+Arav9dxpbPfIXTspuuUpFOp68HXbtPAgWzjXL\nyWZbW5lIq+rPK3faipQyByZRpN/3mwm/o++fyESasuu5l4nk01rX62rQ5uQ+S6Rffa9ubNYi\nLcW9iLS53Zpbr0SSphOV3om0naPNoVWMLSDSxZhNIz9MpOlapPmuZi/SaoJCkQ62pzcipWUX\n/DfJ/o4LkXznqBryXZsNxwV2INJSeGuRlg2Ec5EWH6SqPnv4QKTrES/RZBCRroZ8l0iH9yyz\nSHO5pZRL9VfNU51Ifw8ee7LdaFjHkrfLRPqF0o4mg4h0NeSLRVp2GeYvyxWZKNK2mOdBp6yn\ndMZZe3LwZN5gWkSan0akpta6XiVjvuse6ViktPIpf+Kvx7Jz9q3HtQvfK7+dSJNc9aeWzYe5\nSH8zIFJja12vq0GbkzusSPvC3Yr01zpld0zZdda6ytfDZCKlxQKppMsKPxsCkVStdb3cCBbO\nNce7dgeXdtmF2lzAaSXQb8MtF2k5bRSKVFj4uUibr03jKUAkD4KFc40s0kG1ZdsIm7LOv07b\np+b96fW5Ssfmam+/a141mAJEOhm0ObkPEemwcNciTesTz3mZrs9BBbNdcXD+RKSm1rpeJWO+\na7OhpA6lE0p22y/2mab9Y1YYjKfIICJdDfmu7W9VIf8u7U4b7dqbohtSkUFEuhryXSKVFKJ4\nVlndIx33dDwj6QfVZBCRroZ8lUgWxepyprkHRQYR6WLMl90jvRtFBhHpeDxddhFpTBQZRCQP\ngoVzDSL9Q5FBRPIYGpGGRJNBRJLHbE/vuCK9WiVNBhHpZMjUOjIiDYlm3RDpbMhWkxBpUNoz\niEhnQ75PpHejyCAinQ05vEilBZLmL10LuTvtmUaksyEHF6m8QuY3n7uVcAzac41Ip2M25jaG\nSEvwly/jJxL3SK0gkgcxwsnqolikl9OebETyIEY4FyIdVFCn8g2DItmI5EGMcFL5pd2v1ctR\nJBuRPAgSTl2J/NtqeLdNilyHEynuHBWECaemQNL0+pOSItOI5EGwcMpApEdtNsSdo4Jg4ZTx\n96ZZ71LuS3v2EMmDYOGU8XaJPrRnD5E8CBZOIXywAZGCVW6wcMrpXci9ac8cInkQLJxy3n55\n1545RPIgWDgFfD8j9HbaE4hIBpP7LtEtpL9/Xn5GUiQQke6ZfASReCNJkUBEumdyRBoBRQIV\nIpVOjkiFbXqSkvY/d/cI2hPYLFL57IhU2KYz3ao3EO3ZaxUplX9EH5EK23Tn5VsNqY9IR4fH\nTcsHbH4piGRC7zrujSJ1UURKf5uvQ/4+0nNEertJiswFubRLS8OmV4NIanoXcQQU6Quy2YBI\nvflbgZejyF+Q7W9E6szvI0LvdkmRwChvyKbdgf0cXjxGpN513B1FAp1Eqg8vpeXfhvnautmA\nSI+hPYGKe6Rf6i9btk5RASJp4fNBqddmw5z5q5atU9REc8McqsnDi4RFH9rTp3ofqexyrKjO\nlC8GkfS8fKPhH+3ZCyKSFkTSg0jPEokzUh/S63+tL/X70GrR5+NKo9O8GETSkl7/JtKH9vwF\n+WTD9P20He8jdSJxafehPYH6TzZYbX+nSWESIilh9/sf7QmM8skGROoLIv2jPYGIpOcJIvF7\n5h8U+UMkPY8QCY0+tKcvjkhlW4DKOVx4hEhsNXxoz18gkaLPoZo8ukhc2f2jPYFxRFKVGiIp\nQaR/tCcQkfQ8QiT40J7AOCKpag2RlPCxhn+0JzCOSKoXg0hK8Ogf7QmMI1L4OVSThxfp1KQO\nll1MuQnYKsD2BCLSPZNHF0msxN0z0+Gvpa9OaZsn/97VqK7noi7VQxdM3EQkkRQvBZGUlJwC\n0uo3ZjbPnhT+t/2/FkZFPw/091s8ZjK1JzCQSCn712sOF54hUmWlbR49q+Rvh8m46NdzGA3T\nTByR0uarxxw+vEuk+jr+zjD9RApMewIRSc+rRPJd/xUAAAj+SURBVPpe4KWKm/26GbrSnkBE\n0vMekRrvcf4mGEGl9gTGEYl7pJ4MUeb+tCcwkEjlu3bOOanlESLBh/YERhLJdEREqqJ3BQeh\nPYGIpCdYOE30ruAgtCcQkfQEC6eJ3hUchPYEIpKeYOE00buCg9CeQETSEyycJnpXcBDaE4hI\neoKF00TvCg5CewIRSU+wcJroXcFBaE8gIukJFk4TvSs4CO0JRCQ9wcJponcFB6E9gYikJ1g4\nTfSu4CC0JxCR4EPvCg5CewIRCT70ruAgtCcQkeBD7woOQnsCEQk+9K7gILQnEJHgQ+8KDkJ7\nAhEJPvSu4CC0JxCR4EPvCg5CewIRCT70ruAgtCcQkeBD7woOQnsCEQk+9K7gGCgSiEjwoXcJ\nB6E9gYgEH3pXcBDaE4hI8KF3BQehPYGIBB96V3AQ2hOISArmzJ9M9q+JaoluoXcFB6E9gYjU\nTpqnkSdLn/+l0yYh6F3BQWhPICIpo0ink6VNw7D0ruAgtCcQkbRRnJ5uEGks2hOISNooEOlB\ntCcQkdpZTDq9R9ocxKR3BQehPYGIpOD3n98+W4D5P7MVm94VHIT2BCISfOhdwUFoTyAiwYfe\nFRyE9gQiUnsUBQtgs0g3cG+9hqU9gYgEH3pXcBDaE4hIFoQLqJreFRyE9gQikoqSBdAv0g30\nqdtwtCcQkTSki/djS9v0p3cFB6E9gYikIU3XlpS06U/vCg5CewIRSQMiPYz2BCKSBkR6GO0J\nRCQNiPQw2hOISCr+GXKR/5I23eldwUFoTyAiwYfeFRyE9gQikoYwgajpXcFBaE8gImkIE4ia\n3hUchPYEIpKKOJEo6V3BQWhPICJpKFkAg0W6gR5VG5D2BA4pEpjTu4KD0J5ARIIPvSs4CO0J\nRCQdJelXLtEt9KzeQLQnEJFUpOxfTZvu9K7gGCgSiEga0uZra5v+9C7hGCgSiEgaEOlhtCcQ\nkTQg0rNQJBCRVHCP9CzaE4hIOkrSr1yiW+hZvXFQJBCR4EPvEo6BIoGIBB96l3AQ2hOISDpK\n0q9colvoWb1xUCQQkVSw2fAs2hOISBrY/n4WigQOJdL8Ui+HvKlqEelZKBI4kkjL3+JBJGt6\nl3AMFAkcSKTMIXFIo6y0xKRq051epRsLRQKHE+n8b8Td+eO/ZAWMVsmfews2KooEPkyk+T/r\najTna+hdwjFQJHAgkTKTzv9GguWcZYT5IxLN9C7hGCgSOJJIRf8V8b9md1VtyQoYrJI/Xeo2\nHIoEDiVS+ZT37dpdnv9K2vSndwnHQJHAZ4p0F2m6tqSkTX96l3AMFAkcSKSSV2yUleKQJkR6\nEJoEDiRSQBDpWSgSOKZIUXbJEOlZKBI4mEglr9ggK+XxTAWbiAVtutOjbOOhSOBYIj1nlywa\nvUs4BooEDifSQy6lotG7hEOgSSAiwYfeNRwDRQIRCT70LuEQaBKISPChdw2HQJPAsUR6zi5Z\nNHrXcAB0CRxMJHCidxWHQJPAsUSK8kbsA+ldxCFQ5A+R4B+9azgCmvyNJRImedG7hgOgS6BC\npNL5Lc9IBS/aKDEv4+aiDYgygc0ilYdARQ9At/r1oO4F2SSwVaQlgMtQEGkAvGq6C9lfEi1p\nbUK7SEeHx00bpxDmvX7phul5DW5F3YWC12adwMFESgUjlrSBDXJJulV7SUHnT6fsNHMVtjx6\n+dx1jHVplzZfW9tAE+JKLyU+P3BQ9d9Hywt41/Kke+moXtcqY202IFJnxKSm7U/U7E+iHZ9A\nLqc6bHJyvilacK8T0mjb3wVDIpIbJ2ekTSFsvl+dsEoqWKirk66974qHfEOWe6QOiD8zDy1a\n39ws/YtOBJJF8vmwt0ZuIlXcTzYMbNAGqjiz6OCWf9ezwqLjy6/YFk16kUK8CPDlcpMhe+DA\noopLutoA4hSgYtfO6a4NoiEu9e6J4zPT7oRVWzAnXcOUISKBE++qEMX2d/4F4N203yOpL3wB\nnoPufSREAviHZtcu/fucrVkoAOOi2/5+x30kwCXK95EQCeDDDR8RAng+iARgACIBGIBIAAYg\nEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIB\nGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoAB\niARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBI\nAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARg\nACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYg\nEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAY8R6T0f+rae0UC\nBaRUu2CxeYpIKdWuzJNWcThSql+w2DxEpO+K1CzMc9ZwPOZ1eo5JjxFp/bWiC9zPkvvHrMJj\nRErr7+ZT1Pfe6fvA/P1vCVP+w/EpixqdtBVpt1zTcCvzEJGm/Hr7Z86UX4svPi1OrZUbYr0e\nwTbP2ZpsDlfPhuYpIuUqZWectPo3P/p+O+VH8ZfrGWzynK/CsCvzHJGm9QVepsx2VZbD3RNw\nB/k128EqDLkyjxJpWl0MFIm0vubrFffL2ImUDpQabGWeJdL6em4qECnvOsJ6PYLNZsN+62HA\nlXmISKvt79U90jQVijTtvgUv6kSaRliZx4iUli+nIm02G1Y3t/GX6yHkO9vSFsNgK/MQkfKN\n03l10qFIB9vf41yJP4XVexL5Kvw9OY23Mk8RaZXvZVUOLu0W3Zam+QHcwne91qsw8Mo8RqQy\nRlgSGBFEAjAAkQAMQCQAA14mEoAPiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARg\nACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYgEoABiARgACIBGIBIAAYg\nEoABiARgACIBGIBIAAb8D7gamLi/c6tRAAAAAElFTkSuQmCC",
      "text/plain": [
       "Plot with title “Gene Dendrogram”"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot dendrograms\n",
    "par(mfrow = c(1, 2))  # Side-by-side plots\n",
    "plot(sample_clust, main = \"Sample Dendrogram\", xlab = \"Samples\", sub = \"\", cex = 0.8)\n",
    "plot(gene_clust, main = \"Gene Dendrogram\", xlab = \"Genes\", sub = \"\", cex = 0.8)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47dadd06-933c-4eb5-856a-f8e8aa9e6df2",
   "metadata": {},
   "source": [
    "2) Draw a heat map of the expression data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "618705cf-cadb-477d-a596-5d85bcd601a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAABMlBMVEUAAABFdbRJebZOfbhS\ngrtXhr1ci79gj8JllMRpmMZunclzoct3ps58qtCAr9KFs9WKuNeOvNmTwNuYw92cxt+hyuGm\nzeKr0OSw0+a01ui52em+3OvD4O3I4+/M5vDR6fLW7PTXMCfZNSrbOy3b7/bdQDDfRjPg8/fh\n8/TiTDbj9PHkUTnl9e3mVzzn9eroXT/p9ubrYkLr9+PtaEXt+N/vbUjv+Nzw+djxc0vy+tX0\neU70+9L2flH2+874hFT4/Mv6ilf6/cf8j1r8lF38mWH8nmT8o2f8qGv8rW78snH8/cT9t3X9\nvHj9wXv9xn/9y4L90IX91Yn92oz+34/+4ZL+45X+5Zj+55v+6Z7+66H+7aP+76b+8Kn+8qz+\n9K/+9rL++LX++rf+/Lr+/r3+/sD///8D0PLcAAAACXBIWXMAABJ0AAASdAHeZh94AAAgAElE\nQVR4nO3dB7cbx5UtYIzfeGRbOWeJ7w09pGVaI8uSaJqiKCpTEoMCcw74/3/hWeQF0BnV3fX1\n7cKtvZYtXoRGoVG7zzn7hF4sMzIyRmOx3wvIyNgFZCJlZERAJtIwLB5h2LsGvbX9iOEvifex\nGVXkMzsEQ/kwZyJllo1CPnkDsGLCECLFX0r4SzKRHPLJG4D1nuu7+fZls2YiTYF88vpjUSfS\n2lv77T+LRf3xyusLfzz6T+lte39U3l90CTf/Lj2yLLx780l1ItWOWjhk4e2Vj2s8eMYe8hnp\nj9o+KsQ9pSCoFg91Ean2tvL7m467WB2k8cm6HaqvqnSgFZFK6Ph6GQXkE9IfTURaFhhRfqT4\n8vI+rDBhWdnp1eMu2/9dffeyQp8qLwr/33DUzVGaXjQoONx95BPSH6Wr+ebvZcuGX7YRqeIy\nNbyvdtzS481vqByxRqTmVVXf13gNqC8tY4V8PvqjgUjVbbq+fBdos6zvv0V1Y1Z3a/G49c9r\neEMzkYr/Kq+qeeUVIjWxMG+cMvL56I9MpEykGvL56I8NNUYSqbSfl8X3FZ6ub/nazh5OpMf/\n3UKk+osykWrI52MA6kSqPlXadQ1vXFZe1Eak1k8uvbYvkbpWWydS01fKRKoin48BKF7P9/5e\nNm3HGs+6iNTwhu7dXONh6d2tRKofdVFfeceLqpeOjEfIJ2QINu5RydNqINLmRbX3VfiweWmR\nSIUXF5+vvLbh3Z1EKh91Wft3lUiVFxW/UsZj5BMyCIv17ir8vfePwn+WlT3XRaTaMcrvL+7f\nwr/rH7SVSLWjFqxNE5GKLyqtM6OAfEZmgVS2ZirrnB75vMwCqWzQVNY5PfJ5mQVS2aCprHN6\n5PMyC6SyQVNZ5/TI5yUjIwIykTIyIiATKSMjAjKRMjIiYAeJtMhg2O/fdr7YwVOzg19pLsin\nthU7eGp28CuNwX4bsTbs93mJjF37Psud/EpjMNPTMdNlDcaufZ/lTn6lMZjp6ZjpsgZj177P\ncie/0hjM9HTMdFmDsWvfZ7mTX2kMZno6Zrqswdi177Pcya80BjM9HTNd1mDs2vdZ7uRXGoOZ\nno6ZLmswdu37LHfyK43BTE/HTJc1GLv2fZY7+ZXGYKanY6bLGoxd+z7LnfxKYzDT0zHTZQ3G\nrn2f5U5+pTGY6emY6bIGY9e+z3Inv9IYzPR0zHRZg7Fr32e5k19pDGZ6Oma6rMHYte+z3Mmv\nNAYzPR0zXdZg7Nr3We7kVxqDmZ6OmS5rMHbt+yx38iuNwUxPx0yXNRi79n2WO/mVxmCmp2Om\nyxqMXfs+y538SmMw09Mx02UNxq59n+VOfqUxmOnpmOmyBmMm32e/+55bsd8nZjxm+hVmuqzB\nmMn3mckyapjrunpgpl9hpssajJl8n5kso4a5rqsHZvoVZrqswZjJ95nJMmqY67p6YKZfYabL\nGoyZfJ+ZLKOGua6rB2b6FWa6rMGYyfeZyTJqmOu6emCmX2GmyxqMmXyfmSyjhrmuqwdm+hVm\nuqzBmMn3mckyapjrunrAfIX9Tkss5paZmMlyZrKMGua6rh5ARCJHTWsFJcxkOTNZRg1zXVcP\nZCJNgpksZybLqGGu6+qBTKRJMJPloGXstxu/mIEnn4k0CWayHEUkc9i8gp39XoMxk+VkIiW2\ngl39XoMxk+VkIiW2gl39XoMxk+VkIiW2gl39XoMxk+VkIiW2gl39XoMxk+VkIiW2gl39XoMx\nk+VkIiW2gl39XoMxk+VkIiW2gsQSf2a1pZX7jwhBWkRK6tdOi0hJHXbijwhBWicw7820FpuJ\ndKAOmxeb2mEn/ogQpHUC895Ma7GZSAfqsHmxqR124o8IQVonMO/NtBabiXSgDpsXm9phJ/6I\nEKR1AvPeTGuxmUgH6rB5sakdduKPCEFaJzDvzbQWm4l0oA6bF5vaYSf+iBCkdQLz3kxrsZlI\n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\nIBMpIyMC/j+0BJ2hlunaqAAAAABJRU5ErkJggg==",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "library(pheatmap)\n",
    "# Create heat map\n",
    "pheatmap(normalized_data,\n",
    "         scale = \"row\",  # Scale genes (rows) to z-scores\n",
    "         clustering_distance_rows = \"euclidean\",\n",
    "         clustering_distance_cols = \"euclidean\",\n",
    "         clustering_method = \"complete\",\n",
    "         show_rownames = FALSE,  # Hide row names for clarity\n",
    "         show_colnames = TRUE,   # Show sample names\n",
    "         main = \"Gene Expression Heatmap\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "009c9dea-502b-47f9-ab5b-90ca55be62f7",
   "metadata": {},
   "source": [
    "3) Use DESeq2 to analyse this data\n",
    "   \n",
    "   a) which are the most significantly changing genes in this dataset ?\n",
    "   \n",
    "  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e80266d4-d139-4e88-b6b9-6c8b6d5148be",
   "metadata": {},
   "outputs": [],
   "source": [
    "library(DESeq2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "95c9be16-cde6-4334-963a-d532c9cae517",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Ensure column names match between count data and metadata\n",
    "count_data <- count_data[, rownames(col_data)]\n",
    "# Cool they match"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1503b902-291f-49b7-a9d3-f17360cc34de",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning message in DESeqDataSet(se, design = design, ignoreRank):\n",
      "“some variables in design formula are characters, converting to factors”\n"
     ]
    }
   ],
   "source": [
    "# Create DESeq2 dataset\n",
    "dds <- DESeqDataSetFromMatrix(countData = count_data, \n",
    "                              colData = col_data, \n",
    "                              design = ~ condition)  # Replace 'condition' with the column indicating group labels\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "f85b00a4-79dc-4d12-b8bc-4a53265b8db0",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "estimating size factors\n",
      "\n",
      "estimating dispersions\n",
      "\n",
      "gene-wise dispersion estimates\n",
      "\n",
      "mean-dispersion relationship\n",
      "\n",
      "final dispersion estimates\n",
      "\n",
      "fitting model and testing\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>2109</li><li>6</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 2109\n",
       "\\item 6\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 2109\n",
       "2. 6\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] 2109    6"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Run DESeq2 analysis\n",
    "dds <- DESeq(dds)\n",
    "\n",
    "# Get results\n",
    "res <- results(dds, alpha = 0.05)  # Adjusted p-value cutoff\n",
    "res_ordered <- res[order(res$padj), ]  # Order by significance\n",
    "significant_genes <- res_ordered[!is.na(res_ordered$padj) & res_ordered$padj < 0.05, ]\n",
    "\n",
    "# View amount genes\n",
    "dim(significant_genes)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36b844d4-d41e-430a-835a-5c9a97ff8f6d",
   "metadata": {},
   "source": [
    "There are 2109 significant genes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "e18913c6-2c20-48ba-9f3d-16e2c4304f74",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "log2 fold change (MLE): condition oral vs aboral \n",
      "Wald test p-value: condition oral vs aboral \n",
      "DataFrame with 10 rows and 6 columns\n",
      "           baseMean log2FoldChange     lfcSE      stat       pvalue\n",
      "          <numeric>      <numeric> <numeric> <numeric>    <numeric>\n",
      "ML087114a 15168.994       13.11838  0.538982   24.3392 7.55161e-131\n",
      "ML20265a    861.643        7.36993  0.387113   19.0382  8.23104e-81\n",
      "ML463533a   295.674        5.49893  0.288551   19.0570  5.74365e-81\n",
      "ML085213a  1265.181        5.40961  0.284836   18.9920  1.98648e-80\n",
      "ML01433a   9743.342        5.73898  0.312195   18.3827  1.80847e-75\n",
      "ML01248a    218.785        5.61907  0.306294   18.3453  3.59789e-75\n",
      "ML048111a  1190.410        7.40292  0.409209   18.0908  3.76544e-73\n",
      "ML039720a   834.029        4.59862  0.255188   18.0205  1.34411e-72\n",
      "ML106622a   672.593        4.13939  0.230705   17.9423  5.50772e-72\n",
      "ML327424a  2892.591       -8.64288  0.485789  -17.7914  8.23390e-71\n",
      "                  padj\n",
      "             <numeric>\n",
      "ML087114a 1.11681e-126\n",
      "ML20265a   4.05763e-77\n",
      "ML463533a  4.05763e-77\n",
      "ML085213a  7.34452e-77\n",
      "ML01433a   5.34908e-72\n",
      "ML01248a   8.86819e-72\n",
      "ML048111a  7.95530e-70\n",
      "ML039720a  2.48475e-69\n",
      "ML106622a  9.05041e-69\n",
      "ML327424a  1.21771e-67\n"
     ]
    }
   ],
   "source": [
    "# View the top 10 most significantly changing genes (by smallest p-value)\n",
    "top_genes <- head(res_ordered, 10)\n",
    "print(top_genes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "7c4cc307-3ac9-42bd-a85c-9ac16f9d2e22",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning message:\n",
      "“\u001b[1m\u001b[22mRemoved 1759 rows containing missing values or values outside the scale range (`geom_point()`).”\n"
     ]
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "library(ggplot2)\n",
    "\n",
    "# Create a new column in the results data to define colors based on adjusted p-value\n",
    "# if the p-value is less than 0.05 it will be red, otherwise it will be grey\n",
    "res_ordered$color <- ifelse(res_ordered$padj < 0.05, \"red\", \"grey\")\n",
    "\n",
    "# Volcano plot\n",
    "ggplot(res_ordered, aes(x = log2FoldChange, y = -log10(padj), color = color)) + \n",
    "  geom_point() +\n",
    "  theme_minimal() +\n",
    "  labs(title = \"Volcano plot of gene expression\", \n",
    "       x = \"Log2 Fold Change\", y = \"-Log10 Adjusted P-value\") +\n",
    "  scale_color_identity()  \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dd96e404-ad89-434a-9790-7cff81e4d2c0",
   "metadata": {},
   "source": [
    " b) which genes are most consistently highly expressed in these datasets\n",
    "       they are the \"house-keeping\" genes\n",
    "  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "14597cdd-e07e-4232-a10d-2f4ee94cd8f2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 10 × 7</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>baseMean</th><th scope=col>log2FoldChange</th><th scope=col>lfcSE</th><th scope=col>stat</th><th scope=col>pvalue</th><th scope=col>padj</th><th scope=col>cv</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>ML20395a</th><td>120534.62</td><td> 0.144926794</td><td>0.1274066</td><td> 1.1375141</td><td>0.2553235</td><td>0.6323114</td><td>0.10651422</td></tr>\n",
       "\t<tr><th scope=row>ML00017a</th><td> 53541.33</td><td> 0.045380967</td><td>0.1098045</td><td> 0.4132887</td><td>0.6793951</td><td>0.9156378</td><td>0.07018340</td></tr>\n",
       "\t<tr><th scope=row>ML04011a</th><td> 50726.49</td><td> 0.158159048</td><td>0.1078742</td><td> 1.4661432</td><td>0.1426093</td><td>0.4611116</td><td>0.08907392</td></tr>\n",
       "\t<tr><th scope=row>ML18558a</th><td> 41408.94</td><td> 0.011550276</td><td>0.1384291</td><td> 0.0834382</td><td>0.9335031</td><td>0.9824562</td><td>0.10144384</td></tr>\n",
       "\t<tr><th scope=row>ML01737a</th><td> 30353.74</td><td>-0.050921552</td><td>0.1322585</td><td>-0.3850154</td><td>0.7002260</td><td>0.9248673</td><td>0.09285364</td></tr>\n",
       "\t<tr><th scope=row>ML07727a</th><td> 28650.57</td><td> 0.070707150</td><td>0.1334840</td><td> 0.5297049</td><td>0.5963166</td><td>0.8797128</td><td>0.09988854</td></tr>\n",
       "\t<tr><th scope=row>ML02003a</th><td> 22894.99</td><td> 0.082106179</td><td>0.1333445</td><td> 0.6157449</td><td>0.5380629</td><td>0.8508514</td><td>0.09755592</td></tr>\n",
       "\t<tr><th scope=row>ML07395a</th><td> 20591.45</td><td> 0.091506144</td><td>0.1459265</td><td> 0.6270701</td><td>0.5306133</td><td>0.8459511</td><td>0.11387300</td></tr>\n",
       "\t<tr><th scope=row>ML02303a</th><td> 19733.65</td><td>-0.004973275</td><td>0.1442177</td><td>-0.0344845</td><td>0.9724908</td><td>0.9914006</td><td>0.10443983</td></tr>\n",
       "\t<tr><th scope=row>ML05442a</th><td> 18520.28</td><td>-0.043179617</td><td>0.1466560</td><td>-0.2944279</td><td>0.7684310</td><td>0.9454523</td><td>0.10841662</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 10 × 7\n",
       "\\begin{tabular}{r|lllllll}\n",
       "  & baseMean & log2FoldChange & lfcSE & stat & pvalue & padj & cv\\\\\n",
       "  & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\tML20395a & 120534.62 &  0.144926794 & 0.1274066 &  1.1375141 & 0.2553235 & 0.6323114 & 0.10651422\\\\\n",
       "\tML00017a &  53541.33 &  0.045380967 & 0.1098045 &  0.4132887 & 0.6793951 & 0.9156378 & 0.07018340\\\\\n",
       "\tML04011a &  50726.49 &  0.158159048 & 0.1078742 &  1.4661432 & 0.1426093 & 0.4611116 & 0.08907392\\\\\n",
       "\tML18558a &  41408.94 &  0.011550276 & 0.1384291 &  0.0834382 & 0.9335031 & 0.9824562 & 0.10144384\\\\\n",
       "\tML01737a &  30353.74 & -0.050921552 & 0.1322585 & -0.3850154 & 0.7002260 & 0.9248673 & 0.09285364\\\\\n",
       "\tML07727a &  28650.57 &  0.070707150 & 0.1334840 &  0.5297049 & 0.5963166 & 0.8797128 & 0.09988854\\\\\n",
       "\tML02003a &  22894.99 &  0.082106179 & 0.1333445 &  0.6157449 & 0.5380629 & 0.8508514 & 0.09755592\\\\\n",
       "\tML07395a &  20591.45 &  0.091506144 & 0.1459265 &  0.6270701 & 0.5306133 & 0.8459511 & 0.11387300\\\\\n",
       "\tML02303a &  19733.65 & -0.004973275 & 0.1442177 & -0.0344845 & 0.9724908 & 0.9914006 & 0.10443983\\\\\n",
       "\tML05442a &  18520.28 & -0.043179617 & 0.1466560 & -0.2944279 & 0.7684310 & 0.9454523 & 0.10841662\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 10 × 7\n",
       "\n",
       "| <!--/--> | baseMean &lt;dbl&gt; | log2FoldChange &lt;dbl&gt; | lfcSE &lt;dbl&gt; | stat &lt;dbl&gt; | pvalue &lt;dbl&gt; | padj &lt;dbl&gt; | cv &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|\n",
       "| ML20395a | 120534.62 |  0.144926794 | 0.1274066 |  1.1375141 | 0.2553235 | 0.6323114 | 0.10651422 |\n",
       "| ML00017a |  53541.33 |  0.045380967 | 0.1098045 |  0.4132887 | 0.6793951 | 0.9156378 | 0.07018340 |\n",
       "| ML04011a |  50726.49 |  0.158159048 | 0.1078742 |  1.4661432 | 0.1426093 | 0.4611116 | 0.08907392 |\n",
       "| ML18558a |  41408.94 |  0.011550276 | 0.1384291 |  0.0834382 | 0.9335031 | 0.9824562 | 0.10144384 |\n",
       "| ML01737a |  30353.74 | -0.050921552 | 0.1322585 | -0.3850154 | 0.7002260 | 0.9248673 | 0.09285364 |\n",
       "| ML07727a |  28650.57 |  0.070707150 | 0.1334840 |  0.5297049 | 0.5963166 | 0.8797128 | 0.09988854 |\n",
       "| ML02003a |  22894.99 |  0.082106179 | 0.1333445 |  0.6157449 | 0.5380629 | 0.8508514 | 0.09755592 |\n",
       "| ML07395a |  20591.45 |  0.091506144 | 0.1459265 |  0.6270701 | 0.5306133 | 0.8459511 | 0.11387300 |\n",
       "| ML02303a |  19733.65 | -0.004973275 | 0.1442177 | -0.0344845 | 0.9724908 | 0.9914006 | 0.10443983 |\n",
       "| ML05442a |  18520.28 | -0.043179617 | 0.1466560 | -0.2944279 | 0.7684310 | 0.9454523 | 0.10841662 |\n",
       "\n"
      ],
      "text/plain": [
       "         baseMean  log2FoldChange lfcSE     stat       pvalue    padj     \n",
       "ML20395a 120534.62  0.144926794   0.1274066  1.1375141 0.2553235 0.6323114\n",
       "ML00017a  53541.33  0.045380967   0.1098045  0.4132887 0.6793951 0.9156378\n",
       "ML04011a  50726.49  0.158159048   0.1078742  1.4661432 0.1426093 0.4611116\n",
       "ML18558a  41408.94  0.011550276   0.1384291  0.0834382 0.9335031 0.9824562\n",
       "ML01737a  30353.74 -0.050921552   0.1322585 -0.3850154 0.7002260 0.9248673\n",
       "ML07727a  28650.57  0.070707150   0.1334840  0.5297049 0.5963166 0.8797128\n",
       "ML02003a  22894.99  0.082106179   0.1333445  0.6157449 0.5380629 0.8508514\n",
       "ML07395a  20591.45  0.091506144   0.1459265  0.6270701 0.5306133 0.8459511\n",
       "ML02303a  19733.65 -0.004973275   0.1442177 -0.0344845 0.9724908 0.9914006\n",
       "ML05442a  18520.28 -0.043179617   0.1466560 -0.2944279 0.7684310 0.9454523\n",
       "         cv        \n",
       "ML20395a 0.10651422\n",
       "ML00017a 0.07018340\n",
       "ML04011a 0.08907392\n",
       "ML18558a 0.10144384\n",
       "ML01737a 0.09285364\n",
       "ML07727a 0.09988854\n",
       "ML02003a 0.09755592\n",
       "ML07395a 0.11387300\n",
       "ML02303a 0.10443983\n",
       "ML05442a 0.10841662"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Extract normalized counts and baseMean\n",
    "# need to normalize the data!!!\n",
    "normalized_counts <- counts(dds, normalized = TRUE)\n",
    "res <- as.data.frame(results(dds, independentFiltering = FALSE))  # put results into a dataframe\n",
    "\n",
    "# Add coefficient of variation (CV) to the results\n",
    "res$cv <- apply(normalized_counts, 1, function(x) sd(x) / mean(x))\n",
    "\n",
    "# Filter for high baseMean  and low CV \n",
    "# genes with low CV (variation) are more consistently expressed which is a hallmark of house keeping genes\n",
    "highly_expressed_consistent_genes <- res %>%\n",
    "  filter(baseMean > quantile(baseMean, 0.75)) %>%\n",
    "  filter(cv < quantile(cv, 0.25)) %>%\n",
    "  arrange(desc(baseMean))  # Sort by expression level\n",
    "\n",
    "# View top 10 housekeeping genes\n",
    "head(highly_expressed_consistent_genes, 10)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8c38ee2-e8db-42de-bdd9-92fdaca30c2c",
   "metadata": {},
   "source": [
    " c) How consistent are these results with the analysis you did\n",
    "      in the midterm project ?\n",
    "   \n",
    "   "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b76c831e-5584-43ae-ad97-d47508fc21c3",
   "metadata": {},
   "source": [
    "In the midterm we calculated the average expression for each gene, and then sort and retreived the top 5 genes are: ML20395a, ML26358a, ML46651a, ML020045a, ML00017a\n",
    "\n",
    "Here we normalized the data then used the baseMean from results to find genes with high average expression. The top 5 genes are: ML20395a, ML00017a, ML04011a, ML18558a\t, ML01737a\t\n",
    "\n",
    "The top gene for both are the same, and in both results we have the gene ML00017a (although at different parts of the list), but the other 3 genes are different.  \n",
    "Normalization of RNA-seq data is crucial for ensuring accurate comparisons of gene expression across samples. It accounts for differences in sequencing depth, which can cause samples with higher read counts to appear artificially more expressed than those with lower counts. Normalization also corrects for technical biases, such as RNA extraction or sequencing variations, making the data more reliable for downstream analyses like differential expression. By normalizing, you ensure that observed differences in gene expression are due to biological factors, not technical artifacts, enabling more consistent and fair comparisons. In this case, where gene expression is being compared across multiple samples, normalization is necessary to avoid misleading conclusions and accurately identify housekeeping genes that are consistently expressed across all conditions."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6db4c77-0509-42d0-a759-dc6d7cd708fd",
   "metadata": {},
   "source": [
    "d) What else can you say about the data in terms of consistency,\n",
    "   and the results that you find from your analyses. The question is open-ended,\n",
    "   think of this as your experiment, you need to write a paper based on this data\n",
    "   so you have to figure out what kind of \"story\" you can tell based on this.\n",
    "   \n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24313a65-ae64-4853-acbd-5ed17271339c",
   "metadata": {},
   "source": [
    "The top-ranked gene, ML20395a, appears in both analyses, indicating strong consistency in its high expression across samples. This gene might play a critical role in the biological processes you are studying and warrants further investigation.\n",
    "ML00017a also appears in both lists, albeit at different ranks. This suggests that while its expression is consistently high, its ranking is sensitive to the specific method used (average expression vs. normalized baseMean).\n",
    "The other three genes differ between the analyses and this discrepancy could arise due to differences in the normalization (e.g., normalization accounts for library size and sequencing depth, which can affect baseMean, while just taking the average without normalization wouldn't account for that).\n",
    "The impact of outlier samples or genes with high variance on the unnormalized average expression calculations.\n",
    "These differences highlight the importance of normalization for robust gene expression analysis.\n",
    "\n",
    "**ML20395a**: This is a protein coding gene for translation elongation factor 1 alpha\n",
    "\n",
    "**ML00017a**: This is a protein coding gene for translation elongation factor 2\n",
    "\n",
    "Both translation elongation factor 1 alpha (EF1α) and translation elongation factor 2 (EF2) are essential for protein synthesis:\n",
    "- EF1α facilitates the binding of aminoacyl-tRNA to the ribosome during translation elongation.\n",
    "- EF2 mediates translocation, the movement of the ribosome along mRNA.\n",
    "Their high expression reflects their universal requirement in all cells for maintaining protein synthesis.\n",
    "These genes are strong candidates for housekeeping genes due to their fundamental role in maintaining cellular function and their necessity across all cell types and conditions.\n",
    "Their presence among the top-expressed genes aligns with the expectation that housekeeping genes are highly expressed and consistently required. The prominence of these genes in the jellyfish suggests that protein synthesis is a critical and highly active process in the studied samples. This might indicate rapid growth, high metabolic activity, or preparation for developmental processes."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c719597-5950-4fc3-9df3-cddfe0cd44ab",
   "metadata": {},
   "source": [
    "e) what is the most interesting pathway or gene that is responding in this study?\n",
    "   "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ea3742a-f7f4-42e1-91de-766083b89162",
   "metadata": {},
   "source": [
    "From part a, the gene ML087114a stands out as a candidate responding in this study due to its remarkable differential expression between oral and aboral conditions. With a baseMean of 15,168.994, it is highly expressed across all samples, indicating its importance in the organism's biology. Additionally, its log2 fold change of 13.11838 signifies substantial upregulation in oral samples, suggesting a specific and critical role in oral tissue. The adjusted p-value (1.11681e-126) further confirms its statistical significance, highlighting the robustness of this finding. This gene's dramatic expression change implies potential involvement in pathways unique to oral biology. \n",
    "It is a protein coding gene that doesn't have anymore information on it."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec795f71-6571-4a52-a08e-9fe77ea9b2b4",
   "metadata": {},
   "source": [
    "We can order our DESeq results by log2FoldChange to find the most upregulated and downregulated genes of this study. These genes are likely to be among the most responsive to the experimental conditions, making them interesting candidates for further investigation. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "a64a99f0-6abf-4b6c-ba25-05a4d5429a23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 7</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>baseMean</th><th scope=col>log2FoldChange</th><th scope=col>lfcSE</th><th scope=col>stat</th><th scope=col>pvalue</th><th scope=col>padj</th><th scope=col>cv</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>ML34341a</th><td> 7359.720</td><td>14.38640</td><td>0.9003966</td><td>15.97785</td><td> 1.823298e-57</td><td> 1.718117e-54</td><td>1.176614</td></tr>\n",
       "\t<tr><th scope=row>ML090812a</th><td> 1698.999</td><td>13.57874</td><td>1.3298501</td><td>10.21073</td><td> 1.775201e-24</td><td> 2.573530e-22</td><td>1.634667</td></tr>\n",
       "\t<tr><th scope=row>ML087114a</th><td>15168.994</td><td>13.11838</td><td>0.5389824</td><td>24.33916</td><td>7.551609e-131</td><td>1.138556e-126</td><td>1.201860</td></tr>\n",
       "\t<tr><th scope=row>ML034332a</th><td> 4564.931</td><td>12.96693</td><td>1.0777226</td><td>12.03179</td><td> 2.418704e-33</td><td> 6.397685e-31</td><td>1.396010</td></tr>\n",
       "\t<tr><th scope=row>ML319815a</th><td>  550.627</td><td>11.95280</td><td>1.1708246</td><td>10.20887</td><td> 1.809577e-24</td><td> 2.598380e-22</td><td>1.376243</td></tr>\n",
       "\t<tr><th scope=row>ML05514a</th><td> 6697.366</td><td>11.93813</td><td>0.9009001</td><td>13.25134</td><td> 4.432313e-40</td><td> 1.670650e-37</td><td>1.386987</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 7\n",
       "\\begin{tabular}{r|lllllll}\n",
       "  & baseMean & log2FoldChange & lfcSE & stat & pvalue & padj & cv\\\\\n",
       "  & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\tML34341a &  7359.720 & 14.38640 & 0.9003966 & 15.97785 &  1.823298e-57 &  1.718117e-54 & 1.176614\\\\\n",
       "\tML090812a &  1698.999 & 13.57874 & 1.3298501 & 10.21073 &  1.775201e-24 &  2.573530e-22 & 1.634667\\\\\n",
       "\tML087114a & 15168.994 & 13.11838 & 0.5389824 & 24.33916 & 7.551609e-131 & 1.138556e-126 & 1.201860\\\\\n",
       "\tML034332a &  4564.931 & 12.96693 & 1.0777226 & 12.03179 &  2.418704e-33 &  6.397685e-31 & 1.396010\\\\\n",
       "\tML319815a &   550.627 & 11.95280 & 1.1708246 & 10.20887 &  1.809577e-24 &  2.598380e-22 & 1.376243\\\\\n",
       "\tML05514a &  6697.366 & 11.93813 & 0.9009001 & 13.25134 &  4.432313e-40 &  1.670650e-37 & 1.386987\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 7\n",
       "\n",
       "| <!--/--> | baseMean &lt;dbl&gt; | log2FoldChange &lt;dbl&gt; | lfcSE &lt;dbl&gt; | stat &lt;dbl&gt; | pvalue &lt;dbl&gt; | padj &lt;dbl&gt; | cv &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|\n",
       "| ML34341a |  7359.720 | 14.38640 | 0.9003966 | 15.97785 |  1.823298e-57 |  1.718117e-54 | 1.176614 |\n",
       "| ML090812a |  1698.999 | 13.57874 | 1.3298501 | 10.21073 |  1.775201e-24 |  2.573530e-22 | 1.634667 |\n",
       "| ML087114a | 15168.994 | 13.11838 | 0.5389824 | 24.33916 | 7.551609e-131 | 1.138556e-126 | 1.201860 |\n",
       "| ML034332a |  4564.931 | 12.96693 | 1.0777226 | 12.03179 |  2.418704e-33 |  6.397685e-31 | 1.396010 |\n",
       "| ML319815a |   550.627 | 11.95280 | 1.1708246 | 10.20887 |  1.809577e-24 |  2.598380e-22 | 1.376243 |\n",
       "| ML05514a |  6697.366 | 11.93813 | 0.9009001 | 13.25134 |  4.432313e-40 |  1.670650e-37 | 1.386987 |\n",
       "\n"
      ],
      "text/plain": [
       "          baseMean  log2FoldChange lfcSE     stat     pvalue       \n",
       "ML34341a   7359.720 14.38640       0.9003966 15.97785  1.823298e-57\n",
       "ML090812a  1698.999 13.57874       1.3298501 10.21073  1.775201e-24\n",
       "ML087114a 15168.994 13.11838       0.5389824 24.33916 7.551609e-131\n",
       "ML034332a  4564.931 12.96693       1.0777226 12.03179  2.418704e-33\n",
       "ML319815a   550.627 11.95280       1.1708246 10.20887  1.809577e-24\n",
       "ML05514a   6697.366 11.93813       0.9009001 13.25134  4.432313e-40\n",
       "          padj          cv      \n",
       "ML34341a   1.718117e-54 1.176614\n",
       "ML090812a  2.573530e-22 1.634667\n",
       "ML087114a 1.138556e-126 1.201860\n",
       "ML034332a  6.397685e-31 1.396010\n",
       "ML319815a  2.598380e-22 1.376243\n",
       "ML05514a   1.670650e-37 1.386987"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Order by absolute log2FoldChange positive changes first\n",
    "# genes expressed more in oral than aboral condition\n",
    "res_ordered_by_log2fc <- res[order(-abs(res$log2FoldChange)), ]\n",
    "\n",
    "# View the top genes with \n",
    "head(res_ordered_by_log2fc)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "defd1b80-706f-4b0c-9a7e-406f321694e0",
   "metadata": {},
   "source": [
    "ML34341a is the most upregulated gene, meaning it shows the largest increase in expression in the oral condition compared to the aboral condition. While there is limited information about this protein-coding gene, its significant differential expression suggests it may play a critical role in the oral condition."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "75776c1b-fa2f-45f1-be48-e6f2e876ff99",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 7</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>baseMean</th><th scope=col>log2FoldChange</th><th scope=col>lfcSE</th><th scope=col>stat</th><th scope=col>pvalue</th><th scope=col>padj</th><th scope=col>cv</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>ML327424a</th><td>2892.59125</td><td>-8.642880</td><td>0.4857887</td><td>-17.791438</td><td>8.233898e-71</td><td>1.241425e-67</td><td>1.238030</td></tr>\n",
       "\t<tr><th scope=row>ML343422a</th><td> 217.80469</td><td>-7.491583</td><td>0.7682568</td><td> -9.751405</td><td>1.819324e-22</td><td>2.305038e-20</td><td>1.427577</td></tr>\n",
       "\t<tr><th scope=row>ML14971a</th><td>6595.01949</td><td>-7.326905</td><td>0.8737391</td><td> -8.385690</td><td>5.042916e-17</td><td>3.637897e-15</td><td>1.297049</td></tr>\n",
       "\t<tr><th scope=row>ML43881a</th><td>  12.36053</td><td>-6.960627</td><td>1.2176162</td><td> -5.716601</td><td>1.086756e-08</td><td>2.915483e-07</td><td>1.224254</td></tr>\n",
       "\t<tr><th scope=row>ML27982a</th><td>  31.64782</td><td>-6.888157</td><td>1.1238017</td><td> -6.129335</td><td>8.824734e-10</td><td>2.732043e-08</td><td>1.214468</td></tr>\n",
       "\t<tr><th scope=row>ML00646a</th><td>  59.31863</td><td>-6.753170</td><td>1.0255020</td><td> -6.585233</td><td>4.541721e-11</td><td>1.674218e-09</td><td>1.482146</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 7\n",
       "\\begin{tabular}{r|lllllll}\n",
       "  & baseMean & log2FoldChange & lfcSE & stat & pvalue & padj & cv\\\\\n",
       "  & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\tML327424a & 2892.59125 & -8.642880 & 0.4857887 & -17.791438 & 8.233898e-71 & 1.241425e-67 & 1.238030\\\\\n",
       "\tML343422a &  217.80469 & -7.491583 & 0.7682568 &  -9.751405 & 1.819324e-22 & 2.305038e-20 & 1.427577\\\\\n",
       "\tML14971a & 6595.01949 & -7.326905 & 0.8737391 &  -8.385690 & 5.042916e-17 & 3.637897e-15 & 1.297049\\\\\n",
       "\tML43881a &   12.36053 & -6.960627 & 1.2176162 &  -5.716601 & 1.086756e-08 & 2.915483e-07 & 1.224254\\\\\n",
       "\tML27982a &   31.64782 & -6.888157 & 1.1238017 &  -6.129335 & 8.824734e-10 & 2.732043e-08 & 1.214468\\\\\n",
       "\tML00646a &   59.31863 & -6.753170 & 1.0255020 &  -6.585233 & 4.541721e-11 & 1.674218e-09 & 1.482146\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 7\n",
       "\n",
       "| <!--/--> | baseMean &lt;dbl&gt; | log2FoldChange &lt;dbl&gt; | lfcSE &lt;dbl&gt; | stat &lt;dbl&gt; | pvalue &lt;dbl&gt; | padj &lt;dbl&gt; | cv &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|\n",
       "| ML327424a | 2892.59125 | -8.642880 | 0.4857887 | -17.791438 | 8.233898e-71 | 1.241425e-67 | 1.238030 |\n",
       "| ML343422a |  217.80469 | -7.491583 | 0.7682568 |  -9.751405 | 1.819324e-22 | 2.305038e-20 | 1.427577 |\n",
       "| ML14971a | 6595.01949 | -7.326905 | 0.8737391 |  -8.385690 | 5.042916e-17 | 3.637897e-15 | 1.297049 |\n",
       "| ML43881a |   12.36053 | -6.960627 | 1.2176162 |  -5.716601 | 1.086756e-08 | 2.915483e-07 | 1.224254 |\n",
       "| ML27982a |   31.64782 | -6.888157 | 1.1238017 |  -6.129335 | 8.824734e-10 | 2.732043e-08 | 1.214468 |\n",
       "| ML00646a |   59.31863 | -6.753170 | 1.0255020 |  -6.585233 | 4.541721e-11 | 1.674218e-09 | 1.482146 |\n",
       "\n"
      ],
      "text/plain": [
       "          baseMean   log2FoldChange lfcSE     stat       pvalue      \n",
       "ML327424a 2892.59125 -8.642880      0.4857887 -17.791438 8.233898e-71\n",
       "ML343422a  217.80469 -7.491583      0.7682568  -9.751405 1.819324e-22\n",
       "ML14971a  6595.01949 -7.326905      0.8737391  -8.385690 5.042916e-17\n",
       "ML43881a    12.36053 -6.960627      1.2176162  -5.716601 1.086756e-08\n",
       "ML27982a    31.64782 -6.888157      1.1238017  -6.129335 8.824734e-10\n",
       "ML00646a    59.31863 -6.753170      1.0255020  -6.585233 4.541721e-11\n",
       "          padj         cv      \n",
       "ML327424a 1.241425e-67 1.238030\n",
       "ML343422a 2.305038e-20 1.427577\n",
       "ML14971a  3.637897e-15 1.297049\n",
       "ML43881a  2.915483e-07 1.224254\n",
       "ML27982a  2.732043e-08 1.214468\n",
       "ML00646a  1.674218e-09 1.482146"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Order by log2FoldChange most negative first\n",
    "# this gives me the most down regulated genes, genes more expressed in aboral than oral \n",
    "res_ordered_by_log2fc_negative <- res[order(res$log2FoldChange), ]\n",
    "\n",
    "# View the top genes\n",
    "head(res_ordered_by_log2fc_negative)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2300b463-5d53-49ec-8845-3db2c2bc0455",
   "metadata": {},
   "source": [
    "ML327424a is the most downregulated gene, meaning it is much more highly expressed in the aboral condition. Despite being labeled as an \"Uncharacterized protein,\" its dramatic downregulation indicates a strong functional difference between the two conditions.\n",
    "\n",
    "Exploring pathways enriched with genes significantly expressed in oral vs. aboral conditions could uncover broader biological themes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f1ce80da-5266-4e9c-8e6f-678339b7d25c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "4.4.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
